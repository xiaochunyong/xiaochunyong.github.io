<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>VPS 被墙检测</title>
    <link href="/2020/07/22/vps-block-check/"/>
    <url>/2020/07/22/vps-block-check/</url>
    
    <content type="html"><![CDATA[<p>遇到该类问题，建议您先检测ip能否ping通：<br>ping.chinaz.com 请前往该网站，输入自己的ip进行检测 ↓</p><p>若：海外通、国内不通，则认定为ip被封锁，可付费更换，<br>若：国内外都不通，可能是系统内部问题，建议VNC查看状态，或重装系统，<br>若：都通 但无法访问外网，可能受边境防火墙干扰，建议检查业务是否合规，</p>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>VPS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python 一行命令启动HTTP Server</title>
    <link href="/2020/07/22/python-http-server/"/>
    <url>/2020/07/22/python-http-server/</url>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br><span class="hljs-comment"># python2</span><br>python -m SimpleHttpServer 8080<br><br><span class="hljs-comment"># python3</span><br>python3 -m http.server 8080<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>httpserver</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Elastic SQL Access</title>
    <link href="/2019/11/02/elastic-sql-access-crack/"/>
    <url>/2019/11/02/elastic-sql-access-crack/</url>
    
    <content type="html"><![CDATA[<blockquote><p>想通过SQL语句查询ES, 遇到以下错误, 提示需要platinum许可(需要购买)<br>java.sql.SQLInvalidAuthorizationSpecException: current license is non-compliant for [jdbc] </p></blockquote><h2 id="Elastic-SQL-Access"><a href="#Elastic-SQL-Access" class="headerlink" title="Elastic SQL Access"></a>Elastic SQL Access</h2><h4 id="1-安装Elastic"><a href="#1-安装Elastic" class="headerlink" title="1. 安装Elastic"></a>1. 安装Elastic</h4><p>/Users/Ely/SDK/elasticsearch-7.4.0</p><h4 id="2-篡改证书验证代码"><a href="#2-篡改证书验证代码" class="headerlink" title="2. 篡改证书验证代码"></a>2. 篡改证书验证代码</h4><p>a. Github源码</p><ul><li><a href="https://github.com/elastic/elasticsearch/blob/master/x-pack/plugin/core/src/main/java/org/elasticsearch/license/LicenseVerifier.java">LicenseVerifier.java</a></li><li><a href="https://github.com/elastic/elasticsearch/blob/master/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/XPackBuild.java">XPackBuild.java</a></li></ul><p>b. 修改源码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/*</span><br><span class="hljs-comment"> * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one</span><br><span class="hljs-comment"> * or more contributor license agreements. Licensed under the Elastic License;</span><br><span class="hljs-comment"> * you may not use this file except in compliance with the Elastic License.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">package</span> org.elasticsearch.license;<br><br><span class="hljs-keyword">import</span> org.apache.lucene.util.BytesRef;<br><span class="hljs-keyword">import</span> org.apache.lucene.util.BytesRefIterator;<br><span class="hljs-keyword">import</span> org.elasticsearch.common.bytes.BytesReference;<br><span class="hljs-keyword">import</span> org.elasticsearch.common.xcontent.ToXContent;<br><span class="hljs-keyword">import</span> org.elasticsearch.common.xcontent.XContentBuilder;<br><span class="hljs-keyword">import</span> org.elasticsearch.common.xcontent.XContentFactory;<br><span class="hljs-keyword">import</span> org.elasticsearch.common.xcontent.XContentType;<br><span class="hljs-keyword">import</span> org.elasticsearch.core.internal.io.Streams;<br><br><span class="hljs-keyword">import</span> java.io.ByteArrayOutputStream;<br><span class="hljs-keyword">import</span> java.io.IOException;<br><span class="hljs-keyword">import</span> java.io.InputStream;<br><span class="hljs-keyword">import</span> java.nio.ByteBuffer;<br><span class="hljs-keyword">import</span> java.security.InvalidKeyException;<br><span class="hljs-keyword">import</span> java.security.NoSuchAlgorithmException;<br><span class="hljs-keyword">import</span> java.security.Signature;<br><span class="hljs-keyword">import</span> java.security.SignatureException;<br><span class="hljs-keyword">import</span> java.util.Arrays;<br><span class="hljs-keyword">import</span> java.util.Base64;<br><span class="hljs-keyword">import</span> java.util.Collections;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Responsible for verifying signed licenses</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">LicenseVerifier</span> </span>&#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * verifies the license content with the signature using the packaged</span><br><span class="hljs-comment">     * public key</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> license to verify</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> true if valid, false otherwise</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">verifyLicense</span><span class="hljs-params">(<span class="hljs-keyword">final</span> License license, <span class="hljs-keyword">byte</span>[] publicKeyData)</span> </span>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">true</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">verifyLicense</span><span class="hljs-params">(<span class="hljs-keyword">final</span> License license)</span> </span>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">true</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/*</span><br><span class="hljs-comment"> * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one</span><br><span class="hljs-comment"> * or more contributor license agreements. Licensed under the Elastic License;</span><br><span class="hljs-comment"> * you may not use this file except in compliance with the Elastic License.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">package</span> org.elasticsearch.xpack.core;<br><br><span class="hljs-keyword">import</span> org.elasticsearch.common.SuppressForbidden;<br><span class="hljs-keyword">import</span> org.elasticsearch.common.io.PathUtils;<br><br><span class="hljs-keyword">import</span> java.io.IOException;<br><span class="hljs-keyword">import</span> java.net.URISyntaxException;<br><span class="hljs-keyword">import</span> java.net.URL;<br><span class="hljs-keyword">import</span> java.nio.file.Files;<br><span class="hljs-keyword">import</span> java.nio.file.Path;<br><span class="hljs-keyword">import</span> java.util.jar.JarInputStream;<br><span class="hljs-keyword">import</span> java.util.jar.Manifest;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Information about the built version of x-pack that is running.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">XPackBuild</span> </span>&#123;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> XPackBuild CURRENT;<br><br>    <span class="hljs-keyword">static</span> &#123;<br><span class="hljs-keyword">final</span> Path path = getElasticsearchCodebase();<br>        String shortHash = <span class="hljs-keyword">null</span>;<br>        String date = <span class="hljs-keyword">null</span>;<br>        Label_0157: &#123;<br>            shortHash = <span class="hljs-string">&quot;Unknown&quot;</span>;<br>            date = <span class="hljs-string">&quot;Unknown&quot;</span>;<br>        &#125;<br>        CURRENT = <span class="hljs-keyword">new</span> XPackBuild(shortHash, date);<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * Returns path to xpack codebase path</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@SuppressForbidden(reason = &quot;looks up path of xpack.jar directly&quot;)</span><br>    <span class="hljs-function"><span class="hljs-keyword">static</span> Path <span class="hljs-title">getElasticsearchCodebase</span><span class="hljs-params">()</span> </span>&#123;<br>        URL url = XPackBuild.class.getProtectionDomain().getCodeSource().getLocation();<br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-keyword">return</span> PathUtils.get(url.toURI());<br>        &#125; <span class="hljs-keyword">catch</span> (URISyntaxException bogus) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> RuntimeException(bogus);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">private</span> String shortHash;<br>    <span class="hljs-keyword">private</span> String date;<br><br>    XPackBuild(String shortHash, String date) &#123;<br>        <span class="hljs-keyword">this</span>.shortHash = shortHash;<br>        <span class="hljs-keyword">this</span>.date = date;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">shortHash</span><span class="hljs-params">()</span> </span>&#123;<br>        <span class="hljs-keyword">return</span> shortHash;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">date</span><span class="hljs-params">()</span> </span>&#123;<br>        <span class="hljs-keyword">return</span> date;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>c. 编译源码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">javac -cp &quot;./lib/lucene-core-8.2.0.jar:./lib/elasticsearch-7.4.0.jar:./lib/elasticsearch-core-7.4.0.jar:./lib/elasticsearch-x-content-7.4.0.jar:./modules/x-pack-core/x-pack-core-7.4.0.jar&quot; LicenseVerifier.java<br>javac -cp &quot;./lib/lucene-core-8.2.0.jar:./lib/elasticsearch-7.4.0.jar:./lib/elasticsearch-core-7.4.0.jar:./lib/elasticsearch-x-content-7.4.0.jar:./modules/x-pack-core/x-pack-core-7.4.0.jar&quot; XPackBuild.java<br></code></pre></td></tr></table></figure><p>d. 替换源Jar包中的class文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd $ES_HOME/modules/x-pack-core<br>cp x-pack-core-7.4.0.jar x-pack-core-7.4.0.jar.bak // 备份<br><br>// 把编译后的源码放入到<br><span class="hljs-meta">$</span><span class="bash">ES_HOME/modules/x-pack-core/org/elasticsearch/xpack/core/XPackBuild.class</span><br><span class="hljs-meta">$</span><span class="bash">ES_HOME/modules/x-pack-core/org/elasticsearch/license/LicenseVerifier.class</span><br><br>// 替换jar包中的class (当前路径为$ES_HOME/modules/x-pack-core)<br>jar uvf x-pack-core-7.4.0.jar org/elasticsearch/xpack/core/XPackBuild.class<br>jar uvf x-pack-core-7.4.0.jar org/elasticsearch/license/LicenseVerifier.class<br></code></pre></td></tr></table></figure><p>e. 重新启动elasticsearch</p><h4 id="下载证书"><a href="#下载证书" class="headerlink" title="下载证书"></a>下载证书</h4><blockquote><p>2种方式都行</p></blockquote><ol><li>前往 <a href="https://license.elastic.co/registration">https://license.elastic.co/registration</a> 注册一个免费的, 获取证书JSON(邮箱查收)</li><li>复制以下内容(这是我从上面这个网址注册的)</li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json">&#123;<span class="hljs-attr">&quot;license&quot;</span>:&#123;<span class="hljs-attr">&quot;uid&quot;</span>:<span class="hljs-string">&quot;1a2bdedf-c99b-42af-8101-920e950287c0&quot;</span>,<span class="hljs-attr">&quot;type&quot;</span>:<span class="hljs-string">&quot;basic&quot;</span>,<span class="hljs-attr">&quot;issue_date_in_millis&quot;</span>:<span class="hljs-number">1572739200000</span>,<span class="hljs-attr">&quot;expiry_date_in_millis&quot;</span>:<span class="hljs-number">1604447999999</span>,<span class="hljs-attr">&quot;max_nodes&quot;</span>:<span class="hljs-number">100</span>,<span class="hljs-attr">&quot;issued_to&quot;</span>:<span class="hljs-string">&quot;Ely Xiao (ELY.ME)&quot;</span>,<span class="hljs-attr">&quot;issuer&quot;</span>:<span class="hljs-string">&quot;Web Form&quot;</span>,<span class="hljs-attr">&quot;signature&quot;</span>:<span class="hljs-string">&quot;AAAAAwAAAA36w4sLJgX5N9JBopEEAAABmC9ZN0hjZDBGYnVyRXpCOW5Bb3FjZDAxOWpSbTVoMVZwUzRxVk1PSmkxaktJRVl5MUYvUWh3bHZVUTllbXNPbzBUemtnbWpBbmlWRmRZb25KNFlBR2x0TXc2K2p1Y1VtMG1UQU9TRGZVSGRwaEJGUjE3bXd3LzRqZ05iLzRteWFNekdxRGpIYlFwYkJiNUs0U1hTVlJKNVlXekMrSlVUdFIvV0FNeWdOYnlESDc3MWhlY3hSQmdKSjJ2ZTcvYlBFOHhPQlV3ZHdDQ0tHcG5uOElCaDJ4K1hob29xSG85N0kvTWV3THhlQk9NL01VMFRjNDZpZEVXeUtUMXIyMlIveFpJUkk2WUdveEZaME9XWitGUi9WNTZVQW1FMG1DenhZU0ZmeXlZakVEMjZFT2NvOWxpZGlqVmlHNC8rWVVUYzMwRGVySHpIdURzKzFiRDl4TmM1TUp2VTBOUlJZUlAyV0ZVL2kvVk10L0NsbXNFYVZwT3NSU082dFNNa2prQ0ZsclZ4NTltbU1CVE5lR09Bck93V2J1Y3c9PQAAAQAJLS+Eh3LGnBI3TZF649WireO3M5sZ1t1LnIGAYBr3mNnNXv3snIsGK+2a9T3UfErf/L4y8ikx71pAVb8+KQM802fcHodNBmAQGnIOCeKwv5YqHfIUbF6di/zFYx6SZOATi/0r7eoJ4c8g46rTnf8x2ZLYhxryR9p1KDmS4cNE9X84SA8o8ixUn8vUx3vQg9hVF7uJ+KxiB5Me+W5dLW2UNfI1bAfKq5HFggepC/7+zystidatotnulohwJxWgJPlkO70ngGNV1a/tKoOI/YhXzlA841XjmSHLc7kTDdk/E/SQmYtFG+4cgaN9QbvTGDkhtTxm0sHwptYF4zs+IUsu&quot;</span>,<span class="hljs-attr">&quot;start_date_in_millis&quot;</span>:<span class="hljs-number">1572739200000</span>&#125;&#125;<br></code></pre></td></tr></table></figure><h4 id="修改证书"><a href="#修改证书" class="headerlink" title="修改证书"></a>修改证书</h4><p>修改上述步骤中JSON内容<code>&quot;type&quot;:&quot;platinum&quot;</code>, <code>&quot;expiry_date_in_millis&quot;:3107746200000</code></p><h4 id="上传证书"><a href="#上传证书" class="headerlink" title="上传证书"></a>上传证书</h4><p>curl -XPUT   ‘<a href="http://127.0.0.1:9200/_xpack/license?acknowledge=true&#39;">http://127.0.0.1:9200/_xpack/license?acknowledge=true&#39;</a> -d @license.json</p><h4 id="查看证书"><a href="#查看证书" class="headerlink" title="查看证书"></a>查看证书</h4><p><a href="http://127.0.0.1:9200/_license">http://127.0.0.1:9200/_license</a></p><h4 id="认证"><a href="#认证" class="headerlink" title="认证"></a>认证</h4><ol><li><p>关闭认证</p><p> 编辑 config/elasticsearch.yml</p></li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">xpack.security.enabled:</span> <span class="hljs-literal">false</span><br></code></pre></td></tr></table></figure><ol start="2"><li>开启认证, 则要设置密码</li></ol><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino">bin/elasticsearch-<span class="hljs-built_in">setup</span>-passwords <span class="hljs-keyword">auto</span>|interactive<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>数据库</category>
      
    </categories>
    
    
    <tags>
      
      <tag>elastic</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>H5页面调试之Safari</title>
    <link href="/2019/09/23/safari-ios/"/>
    <url>/2019/09/23/safari-ios/</url>
    
    <content type="html"><![CDATA[<h2 id="IOS"><a href="#IOS" class="headerlink" title="IOS"></a>IOS</h2><h4 id="第一步-开启iPhone开发者模式"><a href="#第一步-开启iPhone开发者模式" class="headerlink" title="第一步 开启iPhone开发者模式"></a>第一步 开启iPhone开发者模式</h4><p><code>设置</code> - <code>Safari</code> - <code>高级</code> - <code>开启Web检查器</code></p><h4 id="第二步-开启macOS开发者模式"><a href="#第二步-开启macOS开发者模式" class="headerlink" title="第二步 开启macOS开发者模式"></a>第二步 开启macOS开发者模式</h4><p><code>Safari</code> -  <code>偏好设置</code>  - <code>高级</code> - <code>在菜单栏中显示&quot;开发&quot;菜单</code></p><h4 id="第三步-用数据线连接Mac和iPhone"><a href="#第三步-用数据线连接Mac和iPhone" class="headerlink" title="第三步 用数据线连接Mac和iPhone"></a>第三步 用数据线连接Mac和iPhone</h4><h4 id="第四步-打开macOS中Safari-开发-菜单-手机名称-gt-正在调试的网站"><a href="#第四步-打开macOS中Safari-开发-菜单-手机名称-gt-正在调试的网站" class="headerlink" title="第四步 打开macOS中Safari -  开发(菜单) - [手机名称] -&gt; 正在调试的网站"></a>第四步 打开macOS中Safari -  开发(菜单) - [手机名称] -&gt; 正在调试的网站</h4><h2 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h2><p>Chrome &amp; Android 调试<br><a href="https://wiki.jikexueyuan.com/project/chrome-devtools/remote-debugging-on-android.html">https://wiki.jikexueyuan.com/project/chrome-devtools/remote-debugging-on-android.html</a><br><a href="https://developers.google.com/web/tools/chrome-devtools/remote-debugging/?hl=zh-cn">https://developers.google.com/web/tools/chrome-devtools/remote-debugging/?hl=zh-cn</a></p>]]></content>
    
    
    <categories>
      
      <category>经验</category>
      
    </categories>
    
    
    <tags>
      
      <tag>html5</tag>
      
      <tag>debug</tag>
      
      <tag>ios</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Maven 之  Parent vs Import Pom</title>
    <link href="/2019/08/22/maven-parent-vs-import/"/>
    <url>/2019/08/22/maven-parent-vs-import/</url>
    
    <content type="html"><![CDATA[<blockquote><p>我希望一个项目下, 多个模块下的依赖能统一管理. 因此开了个父pom. 由于在一个项目空间下, 每次添加依赖的时候, 都会想着先在父pom中添加, 再到子pom中添加. 变得繁琐了.<br>而且当需要将model模块部署到nexus仓库时, 还需将父pom也部署上去.  但是父pom的artifact名字语义又不对. 所以我想是否能把依赖拎出来形成一个公司部门级别的依赖通过import的方式来解决. 在使用import的方式导入pom 发现只能导入该pom中的dependencyManagement中的定义, 不能导入pluginManagement中的定义.  所以又想是否可以再定义一层父pom. 命名为department-parent继承自spring-boot-starter-parent, department-parent包含对公司其它部门项目的依赖及第三方依赖, 然后让部门其它项目都继承自department-parent. 和同事讨论后得出结论. 如果以这种方式进行, 涉及到版本更新, 没人愿意去升级. 如果是稳定的没有动力升级,  如果依赖变更大, 直接升级父pom. 会使得所有未指定版本号的都为父pom中的版本号. 风险太大. 同事更多会选择自己写版本号自己控制. (找到好的画图软件后画个图吧)</p></blockquote><!--V1.parent为org.springframework.boot:spring-boot-starter-parentcreative-itm-package- itm-app- itm-model--><h2 id="Import-Pom"><a href="#Import-Pom" class="headerlink" title="Import Pom"></a>Import Pom</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependencyManagement</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>$&#123;spring.boot.version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">type</span>&gt;</span>pom<span class="hljs-tag">&lt;/<span class="hljs-name">type</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>import<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependencyManagement</span>&gt;</span><br></code></pre></td></tr></table></figure><blockquote><p>优点: 可以在dependencyManagement节点下引入多个import pom依赖. 提供使用.<br>缺点: 引入的依赖只有里面的dependencyManagement会被合并到当前pom.xml文件</p></blockquote><h2 id="Parent"><a href="#Parent" class="headerlink" title="Parent"></a>Parent</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">parent</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.1.6.RELEASE<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">parent</span>&gt;</span><br></code></pre></td></tr></table></figure><blockquote><p>优点: 父pom所有属性都将被当前pom继承(可以覆盖), 包括dependencyManagement和pluginManagement等.<br>缺点: 只能单继承. </p></blockquote><p>当然, 二者可以结合使用.</p>]]></content>
    
    
    <categories>
      
      <category>构建工具</category>
      
    </categories>
    
    
    <tags>
      
      <tag>maven</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Kotlin Data Class 踩坑记录</title>
    <link href="/2019/08/18/kotlin-data-class-issue/"/>
    <url>/2019/08/18/kotlin-data-class-issue/</url>
    
    <content type="html"><![CDATA[<blockquote><p>有如下类</p></blockquote><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><span class="hljs-keyword">open</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">BaseEntity</span> </span>&#123;<br>    <span class="hljs-keyword">var</span> createDt: Date = Date()<br>    <span class="hljs-keyword">var</span> updateDt: Date = Date()<br>    <span class="hljs-keyword">var</span> deleted: <span class="hljs-built_in">Boolean</span> = <span class="hljs-literal">false</span><br>    <span class="hljs-keyword">var</span> version: <span class="hljs-built_in">Long</span> = <span class="hljs-number">0</span><br>&#125;<br><br><span class="hljs-keyword">data</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Device</span></span>(<br>    <span class="hljs-keyword">val</span> imei: String,<br>    <span class="hljs-keyword">val</span> sn: String,<br>    <span class="hljs-keyword">val</span> productName: String,<br>    <span class="hljs-keyword">val</span> productType: String<br>) : BaseEntity()<br></code></pre></td></tr></table></figure><h2 id="1-数据类调用copy后-会导致BaseEntity类中的字段丢失-测试用例如下"><a href="#1-数据类调用copy后-会导致BaseEntity类中的字段丢失-测试用例如下" class="headerlink" title="1. 数据类调用copy后, 会导致BaseEntity类中的字段丢失, 测试用例如下:"></a>1. 数据类调用copy后, 会导致BaseEntity类中的字段丢失, 测试用例如下:</h2><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><span class="hljs-meta">@Test</span><br><span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">testDataClassCopy</span><span class="hljs-params">()</span></span> &#123;<br>    <span class="hljs-keyword">val</span> device = JSON.parse&lt;Device&gt;(<span class="hljs-string">&quot;&quot;&quot;&#123; &quot;imei&quot;: &quot;358730091744037&quot;, &quot;sn&quot;: &quot;G6TXXNZPKPJ3&quot;, &quot;productName&quot;: &quot;iPhone OS&quot;, &quot;productType&quot;: &quot;iPhone11,6&quot;, &quot;createDt&quot;:&quot;2019-08-18 19:35:00&quot;,&quot;updateDt&quot;:&quot;2019-08-18 19:35:00&quot;,&quot;deleted&quot;:false,&quot;version&quot;:3 &#125;&quot;&quot;&quot;</span>)<br>    assertEquals(device.version, <span class="hljs-number">3</span>)<br>    <span class="hljs-keyword">val</span> newDevice = device.copy(imei = <span class="hljs-string">&quot;this is imei&quot;</span>)<br>    assertEquals(newDevice.version, <span class="hljs-number">0</span>)<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>以上测试用例通过. 为什么呢? version字段明明是3, 怎么变成了0呢? 我们看看Device类中copy方法反编译后的java代码</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@NotNull</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">final</span> Device <span class="hljs-title">copy</span><span class="hljs-params">(<span class="hljs-meta">@NotNull</span> String imei, <span class="hljs-meta">@NotNull</span> String sn, <span class="hljs-meta">@NotNull</span> String productName, <span class="hljs-meta">@NotNull</span> String productType)</span> </span>&#123;<br>  Intrinsics.checkParameterIsNotNull(imei, <span class="hljs-string">&quot;imei&quot;</span>);<br>  Intrinsics.checkParameterIsNotNull(sn, <span class="hljs-string">&quot;sn&quot;</span>);<br>  Intrinsics.checkParameterIsNotNull(productName, <span class="hljs-string">&quot;productName&quot;</span>);<br>  Intrinsics.checkParameterIsNotNull(productType, <span class="hljs-string">&quot;productType&quot;</span>);<br>  <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> Device(imei, sn, productName, productType);<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>从代码可以看出, Device的父类BaseEntity中的字段并没有在copy方法中出现. 导致父类中的字段全部变成了默认值.</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>Kotlin</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Kotlin</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Feign 启用日志</title>
    <link href="/2019/08/12/feign-enable-logger/"/>
    <url>/2019/08/12/feign-enable-logger/</url>
    
    <content type="html"><![CDATA[<blockquote><p>Spring中集成openfeign, 打印日志</p></blockquote><blockquote><p>Feign 的日子有两层检查</p></blockquote><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs kotlin">feign.SynchronousMethodHandler &#123;<br>    <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">executeAndDecode</span><span class="hljs-params">()</span></span> &#123;<br>        <span class="hljs-comment">//...    </span><br>        <span class="hljs-keyword">if</span> (logLevel != Logger.Level.NONE) &#123;<br>          logger.logRequest(metadata.configKey(), logLevel, request);<br>        &#125;<br>        <span class="hljs-comment">//...</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs kotlin">feign.slf4j.Slf4jLogger : feign.Logger &#123;<br><br>    <span class="hljs-comment">//...</span><br>    <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">logRequest</span><span class="hljs-params">()</span></span> &#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>.logger.isDebugEnabled()) &#123;<br>            <span class="hljs-keyword">super</span>.logRequest(configKey, logLevel, request);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">//...</span><br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><span class="hljs-meta">@Bean</span><br><span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">feignLoggerLevel</span><span class="hljs-params">()</span></span>: Logger.Level &#123;<br>    <span class="hljs-keyword">return</span> Logger.Level.FULL<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">logging:</span><br>  <span class="hljs-attr">level:</span><br>    <span class="hljs-attr">com.aihuishou.creative.itm.client:</span> <span class="hljs-string">DEBUG</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Spring Cloud</category>
      
    </categories>
    
    
    <tags>
      
      <tag>SpringBoot</tag>
      
      <tag>Feign</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Kotlin 数据类Merge其它对象的属性</title>
    <link href="/2019/08/02/kotlin-data-class-copy/"/>
    <url>/2019/08/02/kotlin-data-class-copy/</url>
    
    <content type="html"><![CDATA[<blockquote><p>在使用Kotlin + SpringBoot做Web项目时, 需要将前端传来的数据塞到新创建的实体类对象中. 先看类的结构:</p></blockquote><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><span class="hljs-meta">@MappedSuperclass</span><br><span class="hljs-keyword">open</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">BaseEntity</span> </span>&#123;<br><br>    <span class="hljs-meta">@Id</span><br>    <span class="hljs-meta">@GeneratedValue(strategy = GenerationType.IDENTITY)</span><br>    <span class="hljs-keyword">var</span> id: <span class="hljs-built_in">Long</span>? = <span class="hljs-literal">null</span>  <span class="hljs-comment">//主键</span><br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 创建时间</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@field:CreationTimestamp</span><br>    <span class="hljs-meta">@Column(name = <span class="hljs-meta-string">&quot;create_dt&quot;</span>, nullable = false, updatable = false)</span><br>    <span class="hljs-keyword">var</span> createDt: Date = Date() <span class="hljs-comment">// 默认值在做插入时会被覆盖</span><br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 更新时间</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@field:UpdateTimestamp</span><br>    <span class="hljs-meta">@Column(name = <span class="hljs-meta-string">&quot;update_dt&quot;</span>, nullable = false)</span><br>    <span class="hljs-keyword">var</span> updateDt: Date = Date()<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 逻辑删除标记</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">var</span> deleted: <span class="hljs-built_in">Boolean</span> = <span class="hljs-literal">false</span><br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 乐观锁版本号</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Version</span><br>    <span class="hljs-keyword">var</span> version: <span class="hljs-built_in">Long</span> = <span class="hljs-number">0</span><br>&#125;<br><br><br><span class="hljs-meta">@Entity</span><br><span class="hljs-meta">@Table(name = <span class="hljs-meta-string">&quot;user&quot;</span>)</span><br><span class="hljs-keyword">data</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">User</span></span>(<br>        <span class="hljs-keyword">var</span> username: String,<br>        <span class="hljs-keyword">val</span> password: String,<br>        <span class="hljs-keyword">val</span> nickname: String,<br>        <span class="hljs-keyword">val</span> mobile: String,<br>        <span class="hljs-keyword">val</span> status: <span class="hljs-built_in">Int</span><br>) : BaseEntity()<br><br><span class="hljs-comment">// 创建时前端传过来的数据类</span><br><span class="hljs-keyword">data</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">UserCreateRequestModel</span></span>(<br>        <span class="hljs-keyword">val</span> username: String,<br>        <span class="hljs-keyword">val</span> password: String,<br>        <span class="hljs-keyword">val</span> nickname: String,<br>        <span class="hljs-keyword">val</span> mobile: String,<br>        <span class="hljs-keyword">val</span> version: <span class="hljs-built_in">Int</span><br>)<br><span class="hljs-comment">// 修改时前端传过来的数据类</span><br><span class="hljs-keyword">data</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">UserUpdateRequestModel</span> </span>(<br>        <span class="hljs-keyword">val</span> username: String,<br>        <span class="hljs-keyword">val</span> nickname: String,<br>        <span class="hljs-keyword">val</span> mobile: String<br>)<br></code></pre></td></tr></table></figure><blockquote><p>最开始的写法是这样的</p></blockquote><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><span class="hljs-meta">@PostMapping(<span class="hljs-meta-string">&quot;/&quot;</span>)</span><br><span class="hljs-meta">@ApiOperation(nickname = <span class="hljs-meta-string">&quot;CreateUser&quot;</span>, value = <span class="hljs-meta-string">&quot;Create User&quot;</span>)</span><br><span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">create</span><span class="hljs-params">(<span class="hljs-meta">@RequestBody</span> model: <span class="hljs-type">UserCreateRequestModel</span>)</span></span>: SimpleResponse &#123;<br>    logger.info(<span class="hljs-string">&quot;create user params: <span class="hljs-variable">$model</span>&quot;</span>)<br>    userService.save(User(<br>        username = model.username, <br>        password = model.password,<br>        nickname = model.nickname,<br>        mobile = model.mobile<br>    ))<br>    <span class="hljs-keyword">return</span> ResponseCode.SUCCESS.toResponse()<br>&#125;<br><br><span class="hljs-meta">@PutMapping(<span class="hljs-meta-string">&quot;&#123;id&#125;&quot;</span>)</span><br><span class="hljs-meta">@ApiOperation(nickname = <span class="hljs-meta-string">&quot;UpdateUser&quot;</span>, value = <span class="hljs-meta-string">&quot;Update User&quot;</span>)</span>    <br><span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">update</span><span class="hljs-params">(<span class="hljs-meta">@PathVariable</span> id: <span class="hljs-type">Long</span>, <span class="hljs-meta">@RequestBody</span> model: <span class="hljs-type">UserUpdateRequestModel</span>)</span></span>: SimpleResponse &#123;<br>    logger.info(<span class="hljs-string">&quot;update user params: <span class="hljs-variable">$id</span> - <span class="hljs-variable">$model</span>&quot;</span>)<br>    <span class="hljs-keyword">val</span> opt = userService.findById(id)<br>    <span class="hljs-keyword">if</span> (opt.isPresent) &#123;<br>        <span class="hljs-keyword">val</span> item = opt.<span class="hljs-keyword">get</span>()<br>        userService.save(item.copy(<br>            username = model.username,<br>            nickname = model.nickname,<br>            mobile = model.mobile<br>        ))<br>        <span class="hljs-keyword">return</span> ResponseCode.SUCCESS.toResponse()<br>    &#125;<br>    <span class="hljs-keyword">return</span> ResponseCode.NOT_FOUND.toResponse()<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>代码量特多, 还尽是一些重复劳动, 还容易漏写出错. 然后我想到了Java中的BeanUtils, 动手写个扩展函数~</p></blockquote><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><span class="hljs-comment">// v1: 使用了Spring BeanUtils</span><br><span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-type">&lt;T : Any&gt;</span> T.<span class="hljs-title">merge</span><span class="hljs-params">(source: <span class="hljs-type">Any</span>)</span></span>: T &#123;<br>    BeanUtils.copyProperties(source, <span class="hljs-keyword">this</span>)<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span><br>&#125;<br><br><span class="hljs-comment">// Update方法改为</span><br>userService.save(item.merge(model))<br><br><span class="hljs-comment">// Create 方法改为</span><br>userService.save(User().merge(model)) <span class="hljs-comment">// Error, 编译不通过!, 因为User是数据类, 必须给每个参数赋值(即使使用no-arg编译器插件, 运行时才会有无参构造, 无法通过编译器)</span><br></code></pre></td></tr></table></figure><blockquote><p>由于无法直接通过字面量写法User()直接对象, 想到编译器是有无参构造的, 于是再加一个辅助扩展函数new~</p></blockquote><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><span class="hljs-keyword">inline</span> <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-type">&lt;<span class="hljs-keyword">reified</span> T: Any&gt;</span> <span class="hljs-title">new</span><span class="hljs-params">()</span></span>: T &#123;<br>    <span class="hljs-keyword">return</span> T::<span class="hljs-keyword">class</span>.java.getDeclaredConstructor().newInstance()<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>有了new()这个扩展函数后,  create方法就可以这么写了~</p></blockquote><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><span class="hljs-comment">// create</span><br>userService.save(new&lt;User&gt;().merge(model))<br><span class="hljs-comment">// update</span><br>userService.save(item.merge(model))<br></code></pre></td></tr></table></figure><blockquote><p>运行完后…又遇到另一个问题…model中的属性并没有复制到User对象中去, 这是为什么呢???<br>查看BeanUtils源码+调试后发现由于User类各属性的writeMethod为null导致….想到User类的属性都是val定义…</p></blockquote><p><img src="/img/in-post/post-kotlin-data-class-copy/15647641082128.jpg" alt="-w819"></p><blockquote><p>将User类的Kotlin字节码反编译, 发现属性都是final, 并且没有set方法</p></blockquote><p><img src="/img/in-post/post-kotlin-data-class-copy/15647643796506.jpg" alt="-w847"></p><blockquote><p>查了一番资料, 没有看到如何直接读写属性的(又或者因为是final的, 即使可以, 也无法读写),  看了kotlin数据类copy()方法的原理后, 决定自己写一个<br>为了描述方便, 在代码<code>a.merge(b)</code>中a为target, b为source</p></blockquote><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><span class="hljs-comment">// v2: 通过反射target的类型, 获取主构造函数, 合并source的属性. 重新创建一个target对象</span><br><span class="hljs-keyword">inline</span> <span class="hljs-keyword">infix</span> <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-type">&lt;<span class="hljs-keyword">reified</span> T : Any, <span class="hljs-keyword">reified</span> S : Any&gt;</span> T.<span class="hljs-title">merge</span><span class="hljs-params">(source: <span class="hljs-type">S</span>)</span></span>: T &#123;<br>    <span class="hljs-keyword">val</span> nameToPropertySource = S::<span class="hljs-keyword">class</span>.memberProperties.associateBy &#123; it.name &#125;<br>    <span class="hljs-keyword">val</span> nameToPropertyTarget = T::<span class="hljs-keyword">class</span>.memberProperties.associateBy &#123; it.name &#125;<br>    <span class="hljs-keyword">val</span> primaryConstructor = T::<span class="hljs-keyword">class</span>.primaryConstructor!!<br>    <span class="hljs-keyword">val</span> args = primaryConstructor.parameters.associate &#123; parameter -&gt;<br>        <span class="hljs-keyword">val</span> propertySource = nameToPropertySource[parameter.name]<br>        <span class="hljs-keyword">val</span> propertyTarget = nameToPropertyTarget[parameter.name]<br>        parameter to (propertySource?.<span class="hljs-keyword">get</span>(source) ?: propertyTarget?.<span class="hljs-keyword">get</span>(<span class="hljs-keyword">this</span>))<br>    &#125;<br>    <span class="hljs-keyword">return</span> primaryConstructor.callBy(args)<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>看起来没什么问题了, 但是还有几个潜藏的问题没有解决</p><ol><li>继承到的属性无法复制, 比如说User类从BaseEntity继承了id, createDt, updateDt, deleted, version这几个属性, 但是它们不在并没有在构造函数中, 所以即使UserCreateRequestModel中有这几个属性, 也无法merge</li><li>如果BaseEntity中</li></ol></blockquote><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><span class="hljs-comment">// v3: 解决数据类继承属性无法复制的问题</span><br><span class="hljs-keyword">inline</span> <span class="hljs-keyword">infix</span> <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-type">&lt;<span class="hljs-keyword">reified</span> T : Any, <span class="hljs-keyword">reified</span> S : Any&gt;</span> T.<span class="hljs-title">merge</span><span class="hljs-params">(source: <span class="hljs-type">S</span>)</span></span>: T &#123;<br>    <span class="hljs-keyword">val</span> nameToPropertySource = S::<span class="hljs-keyword">class</span>.memberProperties.associateBy &#123; it.name &#125;<br>    <span class="hljs-keyword">val</span> nameToPropertyTarget = T::<span class="hljs-keyword">class</span>.memberProperties.associateBy &#123; it.name &#125;<br>    <span class="hljs-keyword">val</span> primaryConstructor = T::<span class="hljs-keyword">class</span>.primaryConstructor!!<br>    <span class="hljs-keyword">val</span> primaryConstructorParams = mutableListOf&lt;String&gt;()<br>    <span class="hljs-keyword">val</span> args = primaryConstructor.parameters.associate &#123; parameter -&gt;<br>        primaryConstructorParams.add(parameter.name!!)<br>        <span class="hljs-keyword">val</span> propertySource = nameToPropertySource[parameter.name.toString()]<br>        <span class="hljs-keyword">val</span> propertyTarget = nameToPropertyTarget[parameter.name.toString()]<br>        parameter to (propertySource?.<span class="hljs-keyword">get</span>(source) ?: propertyTarget?.<span class="hljs-keyword">get</span>(<span class="hljs-keyword">this</span>))<br>    &#125;<br>    <span class="hljs-keyword">val</span> newObj = primaryConstructor.callBy(args)<br>    nameToPropertyTarget.forEach &#123; (name, propertyOfTarget) -&gt;<br>        <span class="hljs-keyword">if</span> (!primaryConstructorParams.contains(name) &amp;&amp; propertyOfTarget <span class="hljs-keyword">is</span> KMutableProperty1) &#123;<br>            <span class="hljs-keyword">val</span> mutableProperty = propertyOfTarget <span class="hljs-keyword">as</span> KMutableProperty1&lt;T, Any?&gt;<br>            <span class="hljs-keyword">val</span> propertySource = nameToPropertySource[name]<br>            <span class="hljs-keyword">if</span> (propertySource != <span class="hljs-literal">null</span>) &#123;<br>                mutableProperty.<span class="hljs-keyword">set</span>(newObj, propertySource.<span class="hljs-keyword">get</span>(source))<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-keyword">try</span> &#123;<br>                    mutableProperty.<span class="hljs-keyword">set</span>(newObj, propertyOfTarget.<span class="hljs-keyword">get</span>(<span class="hljs-keyword">this</span>))<br>                &#125; <span class="hljs-keyword">catch</span> (e: Exception) &#123;<br>                    <span class="hljs-comment">// lateinit 属性如果没有值, 在这里会报错, 目前还没有找到判断是否有值的方式</span><br>                    <span class="hljs-comment">// 压制异常 e.printStackTrace()</span><br>                &#125;<br>            &#125;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> newObj<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>当前版本使用方式如下</p></blockquote><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs kotlin">new&lt;User&gt;().merge(model) <span class="hljs-comment">// 不够优雅, 能否new&lt;User&gt;(model)呢?</span><br><br>item.merge(model)<br></code></pre></td></tr></table></figure><blockquote><p>由于当前版本, 在创建新对象的同时merge属性台啰嗦, 所以我们在对new函数做一次优化<br>同时为了适配新版的new函数, 导致的souce的类型擦除问题, 我们针对source反射部分采用了JDK8带的Introspector.getBeanInfo来解决</p></blockquote><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><span class="hljs-comment">// 最终版</span><br><span class="hljs-keyword">inline</span> <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-type">&lt;<span class="hljs-keyword">reified</span> T: Any&gt;</span> <span class="hljs-title">new</span><span class="hljs-params">(source: <span class="hljs-type">Any</span>? = <span class="hljs-literal">null</span>)</span></span>: T &#123;<br>    <span class="hljs-keyword">val</span> obj = T::<span class="hljs-keyword">class</span>.java.getDeclaredConstructor().newInstance()<br>    <span class="hljs-keyword">if</span> (source == <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-keyword">return</span> obj <br>    &#125;<br>    <span class="hljs-keyword">return</span> obj.merge(source)<br>&#125;<br><br><span class="hljs-keyword">inline</span> <span class="hljs-keyword">infix</span> <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-type">&lt;<span class="hljs-keyword">reified</span> T : Any, <span class="hljs-keyword">reified</span> S : Any&gt;</span> T.<span class="hljs-title">merge</span><span class="hljs-params">(source: <span class="hljs-type">S</span>)</span></span>: T &#123;<br>    <span class="hljs-keyword">val</span> beanInfo = Introspector.getBeanInfo(source.javaClass)<br>    <span class="hljs-keyword">val</span> nameToPropertyOfSource = beanInfo.propertyDescriptors.associateBy &#123; it.name &#125;<br>    <span class="hljs-keyword">val</span> nameToPropertyOfTarget = T::<span class="hljs-keyword">class</span>.memberProperties.associateBy &#123; it.name &#125;<br><br>    <span class="hljs-comment">// 根据目标类的主构造函数创建对象, 不在主构造函数中的var属性在下一步处理, 不在主构造函数中的val属性会略过.</span><br>    <span class="hljs-keyword">val</span> primaryConstructor = T::<span class="hljs-keyword">class</span>.primaryConstructor!!<br>    <span class="hljs-keyword">val</span> primaryConstructorParams = mutableListOf&lt;String&gt;()<br>    <span class="hljs-keyword">val</span> args = primaryConstructor.parameters.associate &#123; parameter -&gt;<br>        <span class="hljs-keyword">val</span> name = parameter.name!!<br>        primaryConstructorParams.add(name)<br>        <span class="hljs-keyword">val</span> readMethodOfSource = nameToPropertyOfSource[name]?.readMethod<br>        <span class="hljs-keyword">val</span> propertyOfTarget = nameToPropertyOfTarget[name]<br>        parameter to (readMethodOfSource?.invoke(source) ?: propertyOfTarget?.<span class="hljs-keyword">get</span>(<span class="hljs-keyword">this</span>))<br>    &#125;<br>    <span class="hljs-keyword">val</span> obj = primaryConstructor.callBy(args)<br><br>    <span class="hljs-comment">// 为不在主构造函数中的字段赋值(比如继承的字段)</span><br>    nameToPropertyOfTarget.forEach &#123; (name, propertyOfTarget) -&gt;<br>        <span class="hljs-comment">// 只处理, 没有在构造函数中出现, 并且是var修饰的属性. 没有在构造中出现的val属性无法处理</span><br>        <span class="hljs-keyword">if</span> (!primaryConstructorParams.contains(name) &amp;&amp; propertyOfTarget <span class="hljs-keyword">is</span> KMutableProperty1) &#123;<br>            <span class="hljs-keyword">val</span> mutableProperty = propertyOfTarget <span class="hljs-keyword">as</span> KMutableProperty1&lt;T, Any?&gt;<br>            <span class="hljs-keyword">val</span> readMethodSource = nameToPropertyOfSource[name]?.readMethod<br>            <span class="hljs-keyword">if</span> (readMethodSource != <span class="hljs-literal">null</span>) &#123;<br>                mutableProperty.<span class="hljs-keyword">set</span>(obj, readMethodSource.invoke(source))<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-keyword">try</span> &#123;<br>                    mutableProperty.<span class="hljs-keyword">set</span>(obj, propertyOfTarget.<span class="hljs-keyword">get</span>(<span class="hljs-keyword">this</span>))<br>                &#125; <span class="hljs-keyword">catch</span> (e: Exception) &#123;<br>                    <span class="hljs-comment">// lateinit 属性如果没有值, 在这里会报错, 目前还没有找到判断是否有值的方式</span><br>                    <span class="hljs-comment">// 压制异常 e.printStackTrace()</span><br>                &#125;<br>            &#125;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> obj<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h4><blockquote><p>现在User构造函数中的属性, 继承到的var属性都能解决.<br>lateinit var以及val属性目前都还未解决, 所以在使用的时候得注意一下.</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>Kotlin</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Kotlin</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>IntelliJ IDEA</title>
    <link href="/2019/08/01/intellij-idea/"/>
    <url>/2019/08/01/intellij-idea/</url>
    
    <content type="html"><![CDATA[<h2 id="旗舰版正版授权"><a href="#旗舰版正版授权" class="headerlink" title="旗舰版正版授权"></a>旗舰版正版授权</h2><p>某宝购买教育账号, 10块钱可以使用1年Jetbrains全家桶</p><h2 id="插件推荐"><a href="#插件推荐" class="headerlink" title="插件推荐"></a>插件推荐</h2><p><a href="https://plugins.jetbrains.com/plugin/12783-kodegen/">KodeGen</a><br><a href="https://plugins.jetbrains.com/plugin/10046-alibaba-java-coding-guidelines/">Alibaba Java Coding Guidelines</a><br><a href="https://plugins.jetbrains.com/plugin/9792-key-promoter-x/">Key Promoter X</a><br><a href="https://plugins.jetbrains.com/plugin/6317-lombok/">Lombok</a><br><a href="https://plugins.jetbrains.com/plugin/7179-maven-helper/">Maven Helper</a><br><a href="https://plugins.jetbrains.com/plugin/7654-gsonformat/">GsonFormat</a><br><a href="https://plugins.jetbrains.com/plugin/10080-rainbow-brackets/">Rainbow Brackets</a><br><a href="https://plugins.jetbrains.com/plugin/8579-translation/">Translation</a></p><h2 id="设置项"><a href="#设置项" class="headerlink" title="设置项"></a>设置项</h2><p><a href="https://blog.csdn.net/cgl125167016/article/details/79015941">单行注释风格</a></p><h2 id="相关目录"><a href="#相关目录" class="headerlink" title="相关目录"></a>相关目录</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment"># 插件</span><br><span class="hljs-regexp">/Users/</span>&lt;User&gt;<span class="hljs-regexp">/Library/</span>Application Support/IntelliJIdea2019.<span class="hljs-number">3</span><br><span class="hljs-comment"># 缓存, 日志, 本地版本信息</span><br><span class="hljs-regexp">/Users/</span>&lt;User&gt;<span class="hljs-regexp">/Library/</span>Caches/IntelliJIdea2019.<span class="hljs-number">3</span><br><span class="hljs-comment"># 个人配置信息</span><br><span class="hljs-regexp">/Users/</span>&lt;User&gt;<span class="hljs-regexp">/Library/</span>Preferences/IntelliJIdea2019.<span class="hljs-number">3</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>开发工具</category>
      
    </categories>
    
    
    <tags>
      
      <tag>IntelliJ IDEA</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>docker 入门</title>
    <link href="/2019/07/31/docker/"/>
    <url>/2019/07/31/docker/</url>
    
    <content type="html"><![CDATA[<h2 id="镜像导出导入"><a href="#镜像导出导入" class="headerlink" title="镜像导出导入"></a>镜像导出导入</h2><p>docker save<br>docker load<br>docker export<br>docker import</p><h2 id="镜像操作"><a href="#镜像操作" class="headerlink" title="镜像操作"></a>镜像操作</h2><p>docker search<br>docker pull <repo>/<imageId>:<tag><br>docker rmi -f <repo>/<imageId>:<tag><br>docker commit -m=”this is message” -a=”Ely” <containerId> <repo>/<imageId>:<tag></p><h4 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h4><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs vim">docker <span class="hljs-keyword">version</span><br>docker <span class="hljs-built_in">search</span> <span class="hljs-symbol">&lt;keyword&gt;</span><br>docker pull <span class="hljs-symbol">&lt;user&gt;</span>/<span class="hljs-symbol">&lt;image&gt;</span>:<span class="hljs-symbol">&lt;tag&gt;</span><br>docker pull <span class="hljs-symbol">&lt;image&gt;</span> 拉拽镜像<br>docker run -d -i -t --name=xxxx <span class="hljs-symbol">&lt;user&gt;</span>/<span class="hljs-symbol">&lt;image&gt;</span>:<span class="hljs-symbol">&lt;tag&gt;</span>  <span class="hljs-symbol">&lt;command&gt;</span><br>docker run －t －i <span class="hljs-symbol">&lt;image&gt;</span> 用镜像创建一个容器<br>docker <span class="hljs-keyword">ps</span> -<span class="hljs-keyword">a</span> -<span class="hljs-keyword">l</span><br>docker <span class="hljs-keyword">ps</span> 查看运行的容器<br>docker <span class="hljs-keyword">ps</span> -<span class="hljs-keyword">a</span> 查看所有的容器<br><br>docker commit<br>docker commit &lt;container id&gt; &lt;<span class="hljs-keyword">new</span> id&gt;创建新的镜像<br>docker inspect<br>docker images<br>docker images 查看可用镜像<br>docker push<br>docker info<br>docker start -i &lt;容器名&gt;<br>docker rm <span class="hljs-symbol">&lt;id&gt;</span><br>docker rm &lt;container id&gt; 删除容器<br>docker rmi &lt;image name&gt; 删除镜像<br>docker attach <br>docker attach &lt;container id&gt;与该容器交互<br>docker logs -<span class="hljs-keyword">f</span> -t --tail 容器名<br>docker top 容器名<br>docker exec -d -i -t 容器名 [<span class="hljs-keyword">command</span>] [<span class="hljs-keyword">args</span>]<br><br>docker <span class="hljs-keyword">stop</span> 容器名<br>docker <span class="hljs-keyword">stop</span> &lt;container id&gt; 停止该容器<br>docker start &lt;container id&gt; 开始该容器<br><br>docker kill 容器名<br>docker port 容器名<br><br>docker <span class="hljs-keyword">cp</span> <span class="hljs-symbol">&lt;containerId&gt;</span>:/<span class="hljs-keyword">file</span>/path/within/container /host/path/target 从Docker容器内拷贝文件到主机上<br><br>Ctrl + <span class="hljs-keyword">P</span> Ctrl + Q<br></code></pre></td></tr></table></figure><h2 id="登录Docker内部的Linux"><a href="#登录Docker内部的Linux" class="headerlink" title="登录Docker内部的Linux"></a>登录Docker内部的Linux</h2><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs crystal">cd ~<span class="hljs-regexp">/Library/</span>Containers/com.docker.docker/Data/vms/<span class="hljs-number">0</span><br>screen tty<br><br>vi /var/<span class="hljs-class"><span class="hljs-keyword">lib</span>/<span class="hljs-title">docker</span>/<span class="hljs-title">containers</span>/&#123;<span class="hljs-title">fullContainerId</span>&#125;/<span class="hljs-title">config</span>.<span class="hljs-title">v2</span>.<span class="hljs-title">json</span></span><br>vi /var/<span class="hljs-class"><span class="hljs-keyword">lib</span>/<span class="hljs-title">docker</span>/<span class="hljs-title">containers</span>/&#123;<span class="hljs-title">fullContainerId</span>&#125;/<span class="hljs-title">hostconfig</span>.<span class="hljs-title">json</span></span><br>vi /var/<span class="hljs-class"><span class="hljs-keyword">lib</span>/<span class="hljs-title">default</span></span><br></code></pre></td></tr></table></figure><h2 id="宿主机-amp-容器-文件传输"><a href="#宿主机-amp-容器-文件传输" class="headerlink" title="宿主机 &amp; 容器 文件传输"></a>宿主机 &amp; 容器 文件传输</h2><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs gherkin"><span class="hljs-comment"># 从容器中下载文件到宿主机</span><br>docker cp <span class="hljs-variable">&lt;containerId&gt;</span>:<span class="hljs-variable">&lt;containerPath&gt;</span> <span class="hljs-variable">&lt;hostPath&gt;</span><br><span class="hljs-comment"># 从宿主机上传文件到容器</span><br>docker cp <span class="hljs-variable">&lt;hostPath&gt;</span> <span class="hljs-variable">&lt;containerId&gt;</span>:<span class="hljs-variable">&lt;containerPath&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>云计算</category>
      
    </categories>
    
    
    <tags>
      
      <tag>docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JWT 时间类型问题</title>
    <link href="/2019/07/30/jwt-issue/"/>
    <url>/2019/07/30/jwt-issue/</url>
    
    <content type="html"><![CDATA[<blockquote><p>最近在Web应用中, 集成JWT的时候, 遇到一个坑. 在设置token的exp(过期时间)字段后, 解析Token取得exp字段变成了52556年</p></blockquote><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><span class="hljs-comment">// 简略版</span><br><span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">buildToken</span><span class="hljs-params">(username: <span class="hljs-type">String</span>)</span></span> &#123;<br>    <span class="hljs-keyword">val</span> now = Date()<br>    <span class="hljs-keyword">val</span> expiration = Date(now.time + EXPIRATION_TIME)<br>    <span class="hljs-keyword">val</span> claims = HashMap&lt;String, Any&gt;()<br>    claims[Claims.ID] = UUID.randomUUID().toString()        <span class="hljs-comment">// 编号</span><br>    claims[Claims.SUBJECT] = username                      <span class="hljs-comment">// 主题</span><br>    claims[Claims.EXPIRATION] = expiration                  <span class="hljs-comment">// 过期时间</span><br>    Jwts.builder()<br>        .setClaims(claims)<br>        .signWith(SignatureAlgorithm.HS512, JWT_SECRET)<br>        .compact()<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">parseToken</span><span class="hljs-params">(token: <span class="hljs-type">String</span>)</span></span>: Claims? &#123;<br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-keyword">return</span> Jwts.parser()<br>                .setSigningKey(JWT_SECRET)<br>                .parseClaimsJws(token)<br>                .body<br>    &#125; <span class="hljs-keyword">catch</span> (e: Exception) &#123;<br>        logger.error(e.message, e)<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span><br>&#125;<br><br><span class="hljs-comment">// 测试</span><br>parseToken(buildToken(<span class="hljs-string">&quot;ely.xiao&quot;</span>))!!.expiration <span class="hljs-comment">// 得到: Sun Dec 19 19:19:53 CST 52556</span><br></code></pre></td></tr></table></figure><blockquote><p>翻了一下源码后, 在JwtMap.toDate方法中发现, 它会将日期值乘 1000 在获取日期类型字段时, 会将日期的整数表示 * 1000</p></blockquote><p><img src="/img/in-post/jwt-issue/15648348889617.jpg" alt="-w811"></p><blockquote><p>原因上面也说了, JWT规范要求, JWT Token中的日期类型字段用秒表示.  而我们在构建的时候是直接在Map里面设置的是日期类型, 在调用compact方法中, 会使用jackson将这个map转为json字符串, 转的过程中是取Date.getTime()方法, 获得的毫秒数. (规范要求我们存秒单位, 所以导致了这个问题)</p></blockquote><p><img src="/img/in-post/jwt-issue/15648359909928.jpg" alt="-w817"></p><h4 id="解决办法有2种"><a href="#解决办法有2种" class="headerlink" title="解决办法有2种:"></a>解决办法有2种:</h4><ol><li>通过Map设置日期类型字段的时候, 采用<code>val expiration = Date(System.currentTimeMillis() / 1000)</code>的方式设置</li><li>获取builder后, 调用方法设置<code>Jwts.builder().setExpiration(expiration)</code>这个方法里面会除1000.</li></ol>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>jwt</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>KodeGen Plugin Release</title>
    <link href="/2019/07/27/kode-gen/"/>
    <url>/2019/07/27/kode-gen/</url>
    
    <content type="html"><![CDATA[<p><img src="https://github.com/xiaochunyong/static-resources/raw/master/images/KodeGen/KodeGen-Demo.gif" alt="KodeGen-Demo"></p><h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><ol><li>Search ‘KodeGen’ in Idea plugins</li><li>Download <a href="https://github.com/xiaochunyong/kode-gen/releases">Releases</a></li></ol><h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><p>This plugin generates code from right click ‘Generate…’ menu while focused on a Kotlin class.<br><img src="https://blog.ely.me/img/in-post/post-kode-gen/KodeGen-1.png" alt="Generate"></p><p>The plugin support multiple class to generate one code, you can set the class number of template to select multiple classes to use.</p><p><img src="https://blog.ely.me/img/in-post/post-kode-gen/KodeGen-2.png" alt="select class"></p><h2 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h2><p><img src="https://blog.ely.me/img/in-post/post-kode-gen/KodeGen-3.png" alt="configure"></p><ul><li><strong>Setting Email</strong></li><li><strong>Setting basePackage for Template</strong></li><li><strong>Add template</strong>: click “Add Template” button to add a template, after saving changes.</li><li><strong>Delete template</strong>: click “Delete Template” button to delete a template.</li></ul><h4 id="Template-Context"><a href="#Template-Context" class="headerlink" title="Template Context"></a>Template Context</h4><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs clean">########################################################################################<br>##<br>## Common variables:<br>##  $year - yyyy<br>##  $date - yyyy-MM-dd<br>##  $time - yyyy-MM-dd HH:mm:ss<br>##  $user - user.name<br>##<br>## Settings Panel variables:<br>##  $email<br>##  $basePackage<br>##<br>## Available variables:<br>##  $class0 - the context <span class="hljs-keyword">class</span>, alias: $<span class="hljs-keyword">class</span><br>##  $class1 - the selected <span class="hljs-keyword">class</span>, like $class1, $class2<br>##  $ClassName - generate by the config <span class="hljs-keyword">of</span> <span class="hljs-string">&quot;Class Name&quot;</span>, the generated <span class="hljs-keyword">class</span> name<br>##<br>## Class Entry Structure:<br>##  $class0.className - the <span class="hljs-keyword">class</span> Name<br>##  $class0.packageName - the packageName<br>##  $class0.importList - the list <span class="hljs-keyword">of</span> imported classes name<br>##  $class0.fields - the list <span class="hljs-keyword">of</span> the <span class="hljs-keyword">class</span> fields<br>##          - type: the field type<br>##          - name: the field name<br>##          - modifier: the field modifier, like <span class="hljs-string">&quot;private&quot;</span>,or <span class="hljs-string">&quot;@Setter private&quot;</span> <span class="hljs-keyword">if</span> include annotations<br>##  $class0.allFields - the list <span class="hljs-keyword">of</span> the <span class="hljs-keyword">class</span> fields include all fields <span class="hljs-keyword">of</span> superclass<br>##          - type: the field type<br>##          - name: the field name<br>##          - modifier: the field modifier, like <span class="hljs-string">&quot;private&quot;</span>,or <span class="hljs-string">&quot;@Setter private&quot;</span> <span class="hljs-keyword">if</span> include annotations<br>##  $class0.methods - the list <span class="hljs-keyword">of</span> <span class="hljs-keyword">class</span> methods<br>##          - name: the method name<br>##          - modifier: the method modifier, like <span class="hljs-string">&quot;private static&quot;</span><br>##          - returnType: the method returnType<br>##          - params: the method params, like <span class="hljs-string">&quot;(String name)&quot;</span><br>##  $class0.allMethods - the list <span class="hljs-keyword">of</span> <span class="hljs-keyword">class</span> methods include all methods <span class="hljs-keyword">of</span> superclass<br>##          - name: the method name<br>##          - modifier: the method modifier, like <span class="hljs-string">&quot;private static&quot;</span><br>##          - returnType: the method returnType<br>##          - params: the method params, like <span class="hljs-string">&quot;(String name)&quot;</span>#<br>########################################################################################<br></code></pre></td></tr></table></figure><h2 id="Release"><a href="#Release" class="headerlink" title="Release"></a>Release</h2><h4 id="0-1-1"><a href="#0-1-1" class="headerlink" title="0.1.1"></a>0.1.1</h4><ul><li>支持JPAService</li><li>支持JPARepository</li><li>支持MongoService</li><li>支持MongoRepository</li><li>支持Controller</li><li>支持自定义模板</li></ul>]]></content>
    
    
    <categories>
      
      <category>Kotlin</category>
      
    </categories>
    
    
    <tags>
      
      <tag>kotlin</tag>
      
      <tag>IntelliJ IDEA</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Jackson/FastJSON处理Kotlin Data Class字段别名</title>
    <link href="/2019/07/22/kotlin-jackson-jsonproperty/"/>
    <url>/2019/07/22/kotlin-jackson-jsonproperty/</url>
    
    <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><h4 id="Jackson-FastJSON-处理-Kotlin-Data-Class时-JsonProperty-JSONField没有正常工作"><a href="#Jackson-FastJSON-处理-Kotlin-Data-Class时-JsonProperty-JSONField没有正常工作" class="headerlink" title="Jackson/FastJSON 处理 Kotlin Data Class时, JsonProperty/JSONField没有正常工作"></a>Jackson/FastJSON 处理 Kotlin Data Class时, JsonProperty/JSONField没有正常工作</h4><blockquote><p>Jackson/FastJSON 在处理 Kotlin Data Class 时, 如果需要别名, 直接使用@JsonProperty是不行的.</p></blockquote><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-selector-tag">data</span> <span class="hljs-selector-tag">class</span> <span class="hljs-selector-tag">User</span>(<br>    val <span class="hljs-attribute">id</span>: Int,<br>    val <span class="hljs-attribute">name</span>: String,<br>    <span class="hljs-variable">@JSONField</span>(name = <span class="hljs-string">&quot;isEnable&quot;</span>) <span class="hljs-variable">@JsonProperty</span>(<span class="hljs-string">&quot;isEnable&quot;</span>) val <span class="hljs-attribute">enable</span>: Boolean <br>)<br></code></pre></td></tr></table></figure><blockquote><p>必须得:</p></blockquote><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-selector-tag">data</span> <span class="hljs-selector-tag">class</span> <span class="hljs-selector-tag">User</span>(<br>    val <span class="hljs-attribute">id</span>: Int,<br>    val <span class="hljs-attribute">name</span>: String,<br>    <span class="hljs-variable">@get</span>:JSONField(name = <span class="hljs-string">&quot;isEnable&quot;</span>) <span class="hljs-variable">@get</span>:JsonProperty(<span class="hljs-string">&quot;isEnable&quot;</span>) val <span class="hljs-attribute">enable</span>: Boolean <br>)<br></code></pre></td></tr></table></figure><h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><p><a href="https://stackoverflow.com/a/56516952/4525918">Stackoverflow</a> <code>没有足够的Stackoverflow reputation无法点赞..所以记录一下..</code></p>]]></content>
    
    
    <categories>
      
      <category>Kotlin</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工作随笔</tag>
      
      <tag>kotlin</tag>
      
      <tag>json</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Mackup 备份macOS/Linux应用配置, 并同步</title>
    <link href="/2019/07/21/mackup/"/>
    <url>/2019/07/21/mackup/</url>
    
    <content type="html"><![CDATA[<blockquote><p><a href="https://github.com/lra/mackup">Mackup</a> - Keep your application settings in sync (OS X/Linux)</p></blockquote><h2 id="backup-restore-uninstall-3个操作做了什么-经常混淆"><a href="#backup-restore-uninstall-3个操作做了什么-经常混淆" class="headerlink" title="backup/restore/uninstall 3个操作做了什么? 经常混淆"></a>backup/restore/uninstall 3个操作做了什么? 经常混淆</h2><h2 id="Backup"><a href="#Backup" class="headerlink" title="Backup"></a>Backup</h2><blockquote><p>home/realfile  copy to backup/file and generate home/linkfile</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">Backup</span> the application config files.<br><br>        Algorithm:<br>            <span class="hljs-keyword">if</span> <span class="hljs-keyword">exists</span> home/<span class="hljs-keyword">file</span><br>              <span class="hljs-keyword">if</span> home/<span class="hljs-keyword">file</span> <span class="hljs-keyword">is</span> a <span class="hljs-built_in">real</span> <span class="hljs-keyword">file</span><br>                <span class="hljs-keyword">if</span> <span class="hljs-keyword">exists</span> mackup/<span class="hljs-keyword">file</span><br>                  <span class="hljs-keyword">are</span> you sure ?<br>                  <span class="hljs-keyword">if</span> sure<br>                    rm mackup/<span class="hljs-keyword">file</span><br>                    mv home/<span class="hljs-keyword">file</span> mackup/<span class="hljs-keyword">file</span><br>                    <span class="hljs-keyword">link</span> mackup/<span class="hljs-keyword">file</span> home/<span class="hljs-keyword">file</span><br>                <span class="hljs-keyword">else</span><br>                  mv home/<span class="hljs-keyword">file</span> mackup/<span class="hljs-keyword">file</span><br>                  <span class="hljs-keyword">link</span> mackup/<span class="hljs-keyword">file</span> home/<span class="hljs-keyword">file</span><br></code></pre></td></tr></table></figure><h2 id="Restore"><a href="#Restore" class="headerlink" title="Restore"></a>Restore</h2><blockquote><p>mackup/file generate linkfile to replace home/file</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">Restore</span> the application config files.<br><br>        Algorithm:<br>            <span class="hljs-keyword">if</span> <span class="hljs-keyword">exists</span> mackup/<span class="hljs-keyword">file</span><br>              <span class="hljs-keyword">if</span> <span class="hljs-keyword">exists</span> home/<span class="hljs-keyword">file</span><br>                <span class="hljs-keyword">are</span> you sure ?<br>                <span class="hljs-keyword">if</span> sure<br>                  rm home/<span class="hljs-keyword">file</span><br>                  <span class="hljs-keyword">link</span> mackup/<span class="hljs-keyword">file</span> home/<span class="hljs-keyword">file</span><br>              <span class="hljs-keyword">else</span><br>                <span class="hljs-keyword">link</span> mackup/<span class="hljs-keyword">file</span> home/<span class="hljs-keyword">file</span><br></code></pre></td></tr></table></figure><h2 id="Uninstall"><a href="#Uninstall" class="headerlink" title="Uninstall"></a>Uninstall</h2><blockquote><p>mackup/file  back to home/realfile</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">Uninstall</span> Mackup.<br><br>        <span class="hljs-keyword">Restore</span> <span class="hljs-keyword">any</span> <span class="hljs-keyword">file</span> <span class="hljs-keyword">where</span> it was <span class="hljs-keyword">before</span> the <span class="hljs-number">1</span>st Mackup backup.<br><br>        Algorithm:<br>            <span class="hljs-keyword">for</span> <span class="hljs-keyword">each</span> <span class="hljs-keyword">file</span> <span class="hljs-keyword">in</span> config<br>                <span class="hljs-keyword">if</span> mackup/<span class="hljs-keyword">file</span> <span class="hljs-keyword">exists</span><br>                    <span class="hljs-keyword">if</span> home/<span class="hljs-keyword">file</span> <span class="hljs-keyword">exists</span><br>                        <span class="hljs-keyword">delete</span> home/<span class="hljs-keyword">file</span><br>                    copy mackup/<span class="hljs-keyword">file</span> home/<span class="hljs-keyword">file</span><br>            <span class="hljs-keyword">delete</span> the mackup folder<br>            print how <span class="hljs-keyword">to</span> <span class="hljs-keyword">delete</span> mackup<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>macOS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>macOS</tag>
      
      <tag>mackup</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>用过的 macOS Apps</title>
    <link href="/2019/07/16/mac-apps/"/>
    <url>/2019/07/16/mac-apps/</url>
    
    <content type="html"><![CDATA[<h3 id="开发工具"><a href="#开发工具" class="headerlink" title="开发工具"></a>开发工具</h3><ul><li>Visual Studio Code</li><li>JetBrains Toolbox</li><li>IntelliJ IDEA</li><li>WebStorm</li><li>PyCharm</li><li>GoLand</li><li>AndroidStudio</li><li>DataGrip </li><li>Robot 3T / Studio 3T (MongoDB客户端 免费&amp;收费版)</li><li>NoSQLBooster for MongoDB (史上最好MongoDB 客户端, 但是要收费) <code>用户名：侠骨留香 5.x注册码: 999999-9d5988960387b3f63481722566cb0e9f</code></li><li>Redis Desktop Manager</li><li>Navicat for MongoDB</li><li>DB Browser for SQLite</li><li>Postico</li><li>JD-GUI</li><li>Iceworks</li><li>Fork (Git 图形客户端)</li><li>Docker</li><li>微信开发者工具</li><li>Taobao Editor</li><li>Xcode</li><li>Paw</li></ul><h3 id="设计类"><a href="#设计类" class="headerlink" title="设计类"></a>设计类</h3><ul><li>Axure RP 8</li><li>Sketch</li><li>ProcessOn</li></ul><h3 id="设计师"><a href="#设计师" class="headerlink" title="设计师"></a>设计师</h3><ul><li><a href="https://astropad.com/downloads/">Astropad Studio</a></li><li><a href="https://www.adobe.com/cn/creativecloud/catalog/desktop.html">Adobe Cretive Cloud</a></li><li>Adobe Photoshop CC</li><li>Adobe Illustrator CC</li><li>Adobe Zii</li><li><a href="https://c4dsky.com/62911.html">Cinema 4D R20</a></li></ul><h3 id="常用系列"><a href="#常用系列" class="headerlink" title="常用系列"></a>常用系列</h3><h5 id="浏览器"><a href="#浏览器" class="headerlink" title="浏览器"></a>浏览器</h5><ul><li>Google Chrome</li><li>Microsoft Edge</li><li>FireFox</li></ul><h5 id="视频-音乐"><a href="#视频-音乐" class="headerlink" title="视频/音乐"></a>视频/音乐</h5><ul><li>腾讯视频</li><li>爱奇艺</li><li>优酷</li><li>NeteaseMusic</li><li>QQMusic</li><li>虾米音乐</li></ul><h5 id="社交"><a href="#社交" class="headerlink" title="社交"></a>社交</h5><ul><li>QQ</li><li>WeChat</li><li>AliWangwang</li><li>Telegram</li></ul><h5 id="网盘"><a href="#网盘" class="headerlink" title="网盘"></a>网盘</h5><ul><li>百度网盘</li><li>微云</li><li>OneDrive</li></ul><h5 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h5><ul><li>搜狗输入法</li><li>TeamViewer</li><li>有道笔记</li><li>有道词典</li><li>欧路词典</li><li>The Unarchiver (解压缩)</li><li>eZip</li><li>迅雷</li><li>PicGo</li></ul><h3 id="办公应用"><a href="#办公应用" class="headerlink" title="办公应用"></a>办公应用</h3><ul><li>DingTalk</li><li>WeChat Work</li><li>MWeb <code>Markdown</code></li><li>Typora <code>Markdown</code></li><li>Reeder</li><li>OmniPlan</li><li>OmniGraffle</li><li>FileZilla</li><li>Adobe Acrobat DC</li><li>MiTalk</li><li>MindNode</li><li>Microsoft Office</li><li>Microsoft OneNote</li><li><a href="https://install.appcenter.ms/orgs/rdmacios-k2vy/apps/microsoft-remote-desktop-for-mac/distribution_groups/all-users-of-microsoft-remote-desktop-for-mac">Microsoft Remote Desktop</a></li><li>Microsoft To-Do</li></ul><h3 id="系统工具"><a href="#系统工具" class="headerlink" title="系统工具"></a>系统工具</h3><ul><li>iTerm</li><li>zsh + ohmyzsh</li><li>brew</li><li>Alfred 4 <code>快捷搜索</code></li><li>iStat Menus <code>系统状态统计</code></li><li>Magnet <code>窗口管理</code></li><li>CatchMouse <code>多屏鼠标速切</code></li><li>CleanMyMac X <code>系统清理</code></li><li>Tencent Lemon <code>系统清理</code></li><li><del>Shadowsocks</del> <code>GFW</code></li><li><del>V2RayX</del> <code>GFW</code></li><li><del>V2RayU</del> <code>GFW</code></li><li>Trojan <code>GFW</code></li><li>SwitchHosts</li><li>Reflector 3</li><li>PlistEdit Pro</li><li>PacketSender <code>TCP 发包工具</code></li><li>KeyCue <code>快捷键提醒</code></li><li>CheatSheet <code>快捷键提醒</code></li><li>Kap Beta <code>录制Gif</code></li><li>Hammerspoon <code>工具箱</code></li><li>Huoying Video Desktop <code>Desktop Screen</code></li><li>DictUnifier <code>Dictionary</code></li><li>DaisyDisk <code>磁盘空间占用分析</code></li><li>Bartender 4 <code>菜单栏托盘图标管理</code></li><li>tcpdump <code>命令行抓包</code></li><li>Wireshark <code>抓包</code></li><li>Charles <code>抓包</code></li><li>Lantern <code>GFW</code></li><li>ZeroTier One</li><li><a href="https://github.com/lra/mackup">mackup</a></li><li><a href="https://ixeau.com/apps/keystroke-pro/">Keystroke Pro</a> <code>按键记录</code></li><li><a href="https://dl.google.com/dl/androidjumper/mtp/5071136/AndroidFileTransfer.dmg">AndroidFileTransfer</a> <code>Google官方Android传文件</code></li><li>BitBar</li></ul><h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h3><ul><li><a href="https://www.huochaipro.com">火柴</a> <code>原火萤酱</code> <code>效率工具</code></li><li><a href="https://rufus.ie">Rufus</a> <code>制作U盘启动盘</code></li></ul><h3 id="好玩的"><a href="#好玩的" class="headerlink" title="好玩的"></a>好玩的</h3><ul><li><a href="https://sc.ftqq.com/">Server酱</a> <code>推送</code></li><li><a href="https://day.app/">Bark</a> <code>推送</code></li></ul><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><h6 id="“XXXX”-is-damaged-and-can’t-be-opened-You-should-move-it-to-the-Trash"><a href="#“XXXX”-is-damaged-and-can’t-be-opened-You-should-move-it-to-the-Trash" class="headerlink" title="“XXXX” is damaged and can’t be opened. You should move it to the Trash."></a>“XXXX” is damaged and can’t be opened. You should move it to the Trash.</h6><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">sudo spctl <span class="hljs-comment">--master-disable</span><br><span class="hljs-comment"># 或者</span><br>xattr -<span class="hljs-literal">cr</span> /path/<span class="hljs-built_in">to</span>/xxxx.app<br></code></pre></td></tr></table></figure><h6 id="Alfred-3-4-无法打开-执行"><a href="#Alfred-3-4-无法打开-执行" class="headerlink" title="Alfred 3/4 无法打开, 执行"></a>Alfred 3/4 无法打开, 执行</h6><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">codesign <span class="hljs-params">--sign</span> - <span class="hljs-params">--force</span> <span class="hljs-params">--deep</span> <span class="hljs-string">/Applications/Alfred</span>\ 4.app<br>codesign <span class="hljs-params">--sign</span> - <span class="hljs-params">--force</span> <span class="hljs-params">--deep</span> <span class="hljs-string">/Applications/Alfred</span>\ 4.app/Contents/Preferences/Alfred\ Preferences.app<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>macOS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>macOS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数据录入格式错误问题-u202c</title>
    <link href="/2019/06/24/exception-of-encode/"/>
    <url>/2019/06/24/exception-of-encode/</url>
    
    <content type="html"><![CDATA[<h1 id="数据录入问题"><a href="#数据录入问题" class="headerlink" title="数据录入问题"></a>数据录入问题</h1><p>同事在录数据的时候表示无法提交, 报错了.  错误日志如下</p><h2 id="报错提示"><a href="#报错提示" class="headerlink" title="报错提示:"></a>报错提示:</h2><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autohotkey">&#123;<span class="hljs-string">&quot;timestamp&quot;</span>:<span class="hljs-string">&quot;2019-06-11 12:22:15&quot;</span>,<span class="hljs-string">&quot;status&quot;</span>:<span class="hljs-number">400</span>,<span class="hljs-string">&quot;error&quot;</span>:<span class="hljs-string">&quot;Bad Request&quot;</span>,<span class="hljs-string">&quot;message&quot;</span>:<span class="hljs-string">&quot;JSON parse error: Cannot deserialize value of type `java.lang.Integer` from String \&quot;</span><span class="hljs-number">9290</span>‬\<span class="hljs-string">&quot;: not a valid Integer value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Integer` from String \&quot;</span><span class="hljs-number">9290</span>‬\<span class="hljs-string">&quot;: not a valid Integer value\n at [Source: (PushbackInputStream); line: 1, column: 1893] (through reference chain: com.xxxx.creative.inspection.server.model.Phone[\&quot;</span>phoneComponents\<span class="hljs-string">&quot;]-&gt;java.util.ArrayList[12]-&gt;com.xxxx.creative.inspection.server.model.PhoneComponent[\&quot;</span>height\<span class="hljs-string">&quot;])&quot;</span>,<span class="hljs-string">&quot;path&quot;</span>:<span class="hljs-string">&quot;/fe/phone&quot;</span>&#125;<br></code></pre></td></tr></table></figure><h2 id="请求数据为"><a href="#请求数据为" class="headerlink" title="请求数据为:"></a>请求数据为:</h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json">&#123;<span class="hljs-attr">&quot;id&quot;</span>:<span class="hljs-number">24552</span>,<span class="hljs-attr">&quot;model&quot;</span>:<span class="hljs-string">&quot;华为 nova 青春版&quot;</span>,<span class="hljs-attr">&quot;name&quot;</span>:<span class="hljs-string">&quot;华为 nova 青春版&quot;</span>,<span class="hljs-attr">&quot;brand&quot;</span>:<span class="hljs-string">&quot;华为 &quot;</span>,<span class="hljs-attr">&quot;height&quot;</span>:<span class="hljs-string">&quot;146220&quot;</span>,<span class="hljs-attr">&quot;width&quot;</span>:<span class="hljs-string">&quot;72020&quot;</span>,<span class="hljs-attr">&quot;thickness&quot;</span>:<span class="hljs-string">&quot;7220&quot;</span>,<span class="hljs-attr">&quot;status&quot;</span>:<span class="hljs-number">0</span>,<span class="hljs-attr">&quot;checkable&quot;</span>:<span class="hljs-literal">false</span>,<span class="hljs-attr">&quot;fillCount&quot;</span>:<span class="hljs-number">15</span>,<span class="hljs-attr">&quot;updateDate&quot;</span>:<span class="hljs-string">&quot;2019-06-11 11:36:43&quot;</span>,<span class="hljs-attr">&quot;phoneComponents&quot;</span>:[&#123;<span class="hljs-attr">&quot;exist&quot;</span>:<span class="hljs-literal">true</span>,<span class="hljs-attr">&quot;phoneSide&quot;</span>:<span class="hljs-string">&quot;1&quot;</span>,<span class="hljs-attr">&quot;height&quot;</span>:<span class="hljs-string">&quot;1510&quot;</span>,<span class="hljs-attr">&quot;width&quot;</span>:<span class="hljs-string">&quot;1510&quot;</span>,<span class="hljs-attr">&quot;thickness&quot;</span>:<span class="hljs-string">&quot;0&quot;</span>,<span class="hljs-attr">&quot;relativeY&quot;</span>:<span class="hljs-string">&quot;8500&quot;</span>,<span class="hljs-attr">&quot;relativeX&quot;</span>:<span class="hljs-string">&quot;25540&quot;</span>,<span class="hljs-attr">&quot;type&quot;</span>:<span class="hljs-number">1</span>,<span class="hljs-attr">&quot;index&quot;</span>:<span class="hljs-number">0</span>&#125;,&#123;<span class="hljs-attr">&quot;exist&quot;</span>:<span class="hljs-literal">true</span>,<span class="hljs-attr">&quot;phoneSide&quot;</span>:<span class="hljs-string">&quot;1&quot;</span>,<span class="hljs-attr">&quot;height&quot;</span>:<span class="hljs-string">&quot;3000&quot;</span>,<span class="hljs-attr">&quot;width&quot;</span>:<span class="hljs-string">&quot;3000&quot;</span>,<span class="hljs-attr">&quot;thickness&quot;</span>:<span class="hljs-string">&quot;0&quot;</span>,<span class="hljs-attr">&quot;relativeY&quot;</span>:<span class="hljs-string">&quot;7750&quot;</span>,<span class="hljs-attr">&quot;relativeX&quot;</span>:<span class="hljs-string">&quot;1740&quot;</span>,<span class="hljs-attr">&quot;type&quot;</span>:<span class="hljs-number">2</span>,<span class="hljs-attr">&quot;index&quot;</span>:<span class="hljs-number">1</span>&#125;,&#123;<span class="hljs-attr">&quot;exist&quot;</span>:<span class="hljs-literal">false</span>,<span class="hljs-attr">&quot;phoneSide&quot;</span>:<span class="hljs-string">&quot;&quot;</span>,<span class="hljs-attr">&quot;height&quot;</span>:<span class="hljs-string">&quot;&quot;</span>,<span class="hljs-attr">&quot;width&quot;</span>:<span class="hljs-string">&quot;&quot;</span>,<span class="hljs-attr">&quot;thickness&quot;</span>:<span class="hljs-string">&quot;&quot;</span>,<span class="hljs-attr">&quot;relativeY&quot;</span>:<span class="hljs-string">&quot;&quot;</span>,<span class="hljs-attr">&quot;relativeX&quot;</span>:<span class="hljs-string">&quot;&quot;</span>,<span class="hljs-attr">&quot;type&quot;</span>:<span class="hljs-number">3</span>,<span class="hljs-attr">&quot;index&quot;</span>:<span class="hljs-number">2</span>&#125;,&#123;<span class="hljs-attr">&quot;exist&quot;</span>:<span class="hljs-literal">true</span>,<span class="hljs-attr">&quot;phoneSide&quot;</span>:<span class="hljs-string">&quot;2&quot;</span>,<span class="hljs-attr">&quot;height&quot;</span>:<span class="hljs-string">&quot;6040&quot;</span>,<span class="hljs-attr">&quot;width&quot;</span>:<span class="hljs-string">&quot;6040&quot;</span>,<span class="hljs-attr">&quot;thickness&quot;</span>:<span class="hljs-string">&quot;0&quot;</span>,<span class="hljs-attr">&quot;relativeY&quot;</span>:<span class="hljs-string">&quot;7450&quot;</span>,<span class="hljs-attr">&quot;relativeX&quot;</span>:<span class="hljs-string">&quot;19350&quot;</span>,<span class="hljs-attr">&quot;type&quot;</span>:<span class="hljs-number">4</span>,<span class="hljs-attr">&quot;index&quot;</span>:<span class="hljs-number">3</span>&#125;,&#123;<span class="hljs-attr">&quot;exist&quot;</span>:<span class="hljs-literal">false</span>,<span class="hljs-attr">&quot;phoneSide&quot;</span>:<span class="hljs-string">&quot;&quot;</span>,<span class="hljs-attr">&quot;height&quot;</span>:<span class="hljs-string">&quot;&quot;</span>,<span class="hljs-attr">&quot;width&quot;</span>:<span class="hljs-string">&quot;&quot;</span>,<span class="hljs-attr">&quot;thickness&quot;</span>:<span class="hljs-string">&quot;&quot;</span>,<span class="hljs-attr">&quot;relativeY&quot;</span>:<span class="hljs-string">&quot;&quot;</span>,<span class="hljs-attr">&quot;relativeX&quot;</span>:<span class="hljs-string">&quot;&quot;</span>,<span class="hljs-attr">&quot;type&quot;</span>:<span class="hljs-number">5</span>,<span class="hljs-attr">&quot;index&quot;</span>:<span class="hljs-number">4</span>&#125;,&#123;<span class="hljs-attr">&quot;exist&quot;</span>:<span class="hljs-literal">true</span>,<span class="hljs-attr">&quot;phoneSide&quot;</span>:<span class="hljs-string">&quot;1&quot;</span>,<span class="hljs-attr">&quot;height&quot;</span>:<span class="hljs-string">&quot;1650&quot;</span>,<span class="hljs-attr">&quot;width&quot;</span>:<span class="hljs-string">&quot;9850&quot;</span>,<span class="hljs-attr">&quot;thickness&quot;</span>:<span class="hljs-string">&quot;0&quot;</span>,<span class="hljs-attr">&quot;relativeY&quot;</span>:<span class="hljs-string">&quot;7450&quot;</span>,<span class="hljs-attr">&quot;relativeX&quot;</span>:<span class="hljs-string">&quot;35100&quot;</span>,<span class="hljs-attr">&quot;type&quot;</span>:<span class="hljs-number">6</span>,<span class="hljs-attr">&quot;index&quot;</span>:<span class="hljs-number">5</span>&#125;,&#123;<span class="hljs-attr">&quot;exist&quot;</span>:<span class="hljs-literal">true</span>,<span class="hljs-attr">&quot;phoneSide&quot;</span>:<span class="hljs-string">&quot;4&quot;</span>,<span class="hljs-attr">&quot;height&quot;</span>:<span class="hljs-string">&quot;1790&quot;</span>,<span class="hljs-attr">&quot;width&quot;</span>:<span class="hljs-string">&quot;10690&quot;</span>,<span class="hljs-attr">&quot;thickness&quot;</span>:<span class="hljs-string">&quot;0&quot;</span>,<span class="hljs-attr">&quot;relativeY&quot;</span>:<span class="hljs-string">&quot;2920&quot;</span>,<span class="hljs-attr">&quot;relativeX&quot;</span>:<span class="hljs-string">&quot;51780&quot;</span>,<span class="hljs-attr">&quot;type&quot;</span>:<span class="hljs-number">7</span>,<span class="hljs-attr">&quot;index&quot;</span>:<span class="hljs-number">6</span>&#125;,&#123;<span class="hljs-attr">&quot;exist&quot;</span>:<span class="hljs-literal">true</span>,<span class="hljs-attr">&quot;phoneSide&quot;</span>:<span class="hljs-string">&quot;4&quot;</span>,<span class="hljs-attr">&quot;height&quot;</span>:<span class="hljs-string">&quot;1790&quot;</span>,<span class="hljs-attr">&quot;width&quot;</span>:<span class="hljs-string">&quot;10690&quot;</span>,<span class="hljs-attr">&quot;thickness&quot;</span>:<span class="hljs-string">&quot;0&quot;</span>,<span class="hljs-attr">&quot;relativeY&quot;</span>:<span class="hljs-string">&quot;2920&quot;</span>,<span class="hljs-attr">&quot;relativeX&quot;</span>:<span class="hljs-string">&quot;51780&quot;</span>,<span class="hljs-attr">&quot;type&quot;</span>:<span class="hljs-number">8</span>,<span class="hljs-attr">&quot;index&quot;</span>:<span class="hljs-number">7</span>&#125;,&#123;<span class="hljs-attr">&quot;exist&quot;</span>:<span class="hljs-literal">true</span>,<span class="hljs-attr">&quot;phoneSide&quot;</span>:<span class="hljs-string">&quot;1&quot;</span>,<span class="hljs-attr">&quot;height&quot;</span>:<span class="hljs-string">&quot;114870&quot;</span>,<span class="hljs-attr">&quot;width&quot;</span>:<span class="hljs-string">&quot;65190&quot;</span>,<span class="hljs-attr">&quot;thickness&quot;</span>:<span class="hljs-string">&quot;0&quot;</span>,<span class="hljs-attr">&quot;relativeY&quot;</span>:<span class="hljs-string">&quot;14500&quot;</span>,<span class="hljs-attr">&quot;relativeX&quot;</span>:<span class="hljs-string">&quot;3080&quot;</span>,<span class="hljs-attr">&quot;type&quot;</span>:<span class="hljs-number">9</span>,<span class="hljs-attr">&quot;index&quot;</span>:<span class="hljs-number">8</span>&#125;,&#123;<span class="hljs-attr">&quot;exist&quot;</span>:<span class="hljs-literal">true</span>,<span class="hljs-attr">&quot;phoneSide&quot;</span>:<span class="hljs-string">&quot;2&quot;</span>,<span class="hljs-attr">&quot;height&quot;</span>:<span class="hljs-string">&quot;2880&quot;</span>,<span class="hljs-attr">&quot;width&quot;</span>:<span class="hljs-string">&quot;2880&quot;</span>,<span class="hljs-attr">&quot;thickness&quot;</span>:<span class="hljs-string">&quot;0&quot;</span>,<span class="hljs-attr">&quot;relativeY&quot;</span>:<span class="hljs-string">&quot;7220&quot;</span>,<span class="hljs-attr">&quot;relativeX&quot;</span>:<span class="hljs-string">&quot;9920&quot;</span>,<span class="hljs-attr">&quot;type&quot;</span>:<span class="hljs-number">10</span>,<span class="hljs-attr">&quot;index&quot;</span>:<span class="hljs-number">9</span>&#125;,&#123;<span class="hljs-attr">&quot;exist&quot;</span>:<span class="hljs-literal">true</span>,<span class="hljs-attr">&quot;phoneSide&quot;</span>:<span class="hljs-string">&quot;1&quot;</span>,<span class="hljs-attr">&quot;height&quot;</span>:<span class="hljs-string">&quot;7700&quot;</span>,<span class="hljs-attr">&quot;width&quot;</span>:<span class="hljs-string">&quot;11920&quot;</span>,<span class="hljs-attr">&quot;thickness&quot;</span>:<span class="hljs-string">&quot;0&quot;</span>,<span class="hljs-attr">&quot;relativeY&quot;</span>:<span class="hljs-string">&quot;125720&quot;</span>,<span class="hljs-attr">&quot;relativeX&quot;</span>:<span class="hljs-string">&quot;29290&quot;</span>,<span class="hljs-attr">&quot;type&quot;</span>:<span class="hljs-number">11</span>,<span class="hljs-attr">&quot;index&quot;</span>:<span class="hljs-number">10</span>&#125;,&#123;<span class="hljs-attr">&quot;exist&quot;</span>:<span class="hljs-literal">true</span>,<span class="hljs-attr">&quot;phoneSide&quot;</span>:<span class="hljs-string">&quot;6&quot;</span>,<span class="hljs-attr">&quot;height&quot;</span>:<span class="hljs-string">&quot;8280&quot;</span>,<span class="hljs-attr">&quot;width&quot;</span>:<span class="hljs-string">&quot;1760&quot;</span>,<span class="hljs-attr">&quot;thickness&quot;</span>:<span class="hljs-string">&quot;500&quot;</span>,<span class="hljs-attr">&quot;relativeY&quot;</span>:<span class="hljs-string">&quot;56740&quot;</span>,<span class="hljs-attr">&quot;relativeX&quot;</span>:<span class="hljs-string">&quot;3290&quot;</span>,<span class="hljs-attr">&quot;type&quot;</span>:<span class="hljs-number">12</span>,<span class="hljs-attr">&quot;index&quot;</span>:<span class="hljs-number">11</span>&#125;,&#123;<span class="hljs-attr">&quot;exist&quot;</span>:<span class="hljs-literal">true</span>,<span class="hljs-attr">&quot;phoneSide&quot;</span>:<span class="hljs-string">&quot;6&quot;</span>,<span class="hljs-attr">&quot;height&quot;</span>:<span class="hljs-string">&quot;9290‬&quot;</span>,<span class="hljs-attr">&quot;width&quot;</span>:<span class="hljs-string">&quot;1760&quot;</span>,<span class="hljs-attr">&quot;thickness&quot;</span>:<span class="hljs-string">&quot;500&quot;</span>,<span class="hljs-attr">&quot;relativeY&quot;</span>:<span class="hljs-string">&quot;30580&quot;</span>,<span class="hljs-attr">&quot;relativeX&quot;</span>:<span class="hljs-string">&quot;3290&quot;</span>,<span class="hljs-attr">&quot;type&quot;</span>:<span class="hljs-number">13</span>,<span class="hljs-attr">&quot;index&quot;</span>:<span class="hljs-number">12</span>&#125;,&#123;<span class="hljs-attr">&quot;exist&quot;</span>:<span class="hljs-literal">true</span>,<span class="hljs-attr">&quot;phoneSide&quot;</span>:<span class="hljs-string">&quot;6&quot;</span>,<span class="hljs-attr">&quot;height&quot;</span>:<span class="hljs-string">&quot;9290‬&quot;</span>,<span class="hljs-attr">&quot;width&quot;</span>:<span class="hljs-string">&quot;1760&quot;</span>,<span class="hljs-attr">&quot;thickness&quot;</span>:<span class="hljs-string">&quot;500&quot;</span>,<span class="hljs-attr">&quot;relativeY&quot;</span>:<span class="hljs-string">&quot;41040&quot;</span>,<span class="hljs-attr">&quot;relativeX&quot;</span>:<span class="hljs-string">&quot;3290&quot;</span>,<span class="hljs-attr">&quot;type&quot;</span>:<span class="hljs-number">14</span>,<span class="hljs-attr">&quot;index&quot;</span>:<span class="hljs-number">13</span>&#125;,&#123;<span class="hljs-attr">&quot;exist&quot;</span>:<span class="hljs-literal">true</span>,<span class="hljs-attr">&quot;phoneSide&quot;</span>:<span class="hljs-string">&quot;4&quot;</span>,<span class="hljs-attr">&quot;height&quot;</span>:<span class="hljs-string">&quot;2350&quot;</span>,<span class="hljs-attr">&quot;width&quot;</span>:<span class="hljs-string">&quot;7180&quot;</span>,<span class="hljs-attr">&quot;thickness&quot;</span>:<span class="hljs-string">&quot;0&quot;</span>,<span class="hljs-attr">&quot;relativeY&quot;</span>:<span class="hljs-string">&quot;2860&quot;</span>,<span class="hljs-attr">&quot;relativeX&quot;</span>:<span class="hljs-string">&quot;34980&quot;</span>,<span class="hljs-attr">&quot;type&quot;</span>:<span class="hljs-number">15</span>,<span class="hljs-attr">&quot;index&quot;</span>:<span class="hljs-number">14</span>&#125;,&#123;<span class="hljs-attr">&quot;exist&quot;</span>:<span class="hljs-literal">true</span>,<span class="hljs-attr">&quot;phoneSide&quot;</span>:<span class="hljs-string">&quot;3&quot;</span>,<span class="hljs-attr">&quot;height&quot;</span>:<span class="hljs-string">&quot;4400&quot;</span>,<span class="hljs-attr">&quot;width&quot;</span>:<span class="hljs-string">&quot;4400&quot;</span>,<span class="hljs-attr">&quot;thickness&quot;</span>:<span class="hljs-string">&quot;0&quot;</span>,<span class="hljs-attr">&quot;relativeY&quot;</span>:<span class="hljs-string">&quot;3500&quot;</span>,<span class="hljs-attr">&quot;relativeX&quot;</span>:<span class="hljs-string">&quot;44630&quot;</span>,<span class="hljs-attr">&quot;type&quot;</span>:<span class="hljs-number">16</span>,<span class="hljs-attr">&quot;index&quot;</span>:<span class="hljs-number">15</span>&#125;]&#125;<br></code></pre></td></tr></table></figure><p>检查半天发现, 我输入的字符及对应unicode为:</p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs taggerscript">&quot;9290&quot;<br><span class="hljs-symbol">\u</span>0022<span class="hljs-symbol">\u</span>0039<span class="hljs-symbol">\u</span>0032<span class="hljs-symbol">\u</span>0039<span class="hljs-symbol">\u</span>0030<span class="hljs-symbol">\u</span>0022<br></code></pre></td></tr></table></figure><p>测试人员输入的字符以及unicode为:</p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs taggerscript">‬&quot;9290‬&quot;<br><span class="hljs-symbol">\u</span>202c<span class="hljs-symbol">\u</span>0022<span class="hljs-symbol">\u</span>0039<span class="hljs-symbol">\u</span>0032<span class="hljs-symbol">\u</span>0039<span class="hljs-symbol">\u</span>0030<span class="hljs-symbol">\u</span>202c<span class="hljs-symbol">\u</span>0022<br></code></pre></td></tr></table></figure><p>后来得知他们是从windows计算器复制的数字粘贴到了输入框….</p>]]></content>
    
    
    <categories>
      
      <category>经验</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工作随笔</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>macOS 安装Docker</title>
    <link href="/2019/05/28/Docker-for-Mac/"/>
    <url>/2019/05/28/Docker-for-Mac/</url>
    
    <content type="html"><![CDATA[<h2 id="QA"><a href="#QA" class="headerlink" title="QA"></a>QA</h2><h4 id="1-Kubernetes-is-Starting…"><a href="#1-Kubernetes-is-Starting…" class="headerlink" title="1. Kubernetes is Starting…"></a>1. Kubernetes is Starting…</h4><h5 id="解决方法1"><a href="#解决方法1" class="headerlink" title="解决方法1:"></a>解决方法1:</h5><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">rm -rf ~/.kube<br><span class="hljs-keyword">open</span> <span class="hljs-keyword">global</span> vpn, fq,<br><span class="hljs-keyword">then</span> <span class="hljs-keyword">reset</span> Kubernetes <span class="hljs-keyword">cluster</span><br>Waiting <span class="hljs-number">2</span><span class="hljs-number">-5</span> minutes<br></code></pre></td></tr></table></figure><h5 id="解决方法2"><a href="#解决方法2" class="headerlink" title="解决方法2:"></a>解决方法2:</h5><h6 id="1-Preferences-gt-Reset-gt-Reset-to-factory-defaults"><a href="#1-Preferences-gt-Reset-gt-Reset-to-factory-defaults" class="headerlink" title="1. Preferences -&gt; Reset -&gt; Reset to factory defaults"></a>1. <code>Preferences</code> -&gt; <code>Reset</code> -&gt; <code>Reset to factory defaults</code></h6><h6 id="2-Daemon"><a href="#2-Daemon" class="headerlink" title="2. Daemon"></a>2. Daemon</h6><p><a href="https://registry.docker-cn.com">https://registry.docker-cn.com</a><br><img src="/img/in-post/post-docker/15591117804985.jpg" alt=""></p><h6 id="3-Kubernetes"><a href="#3-Kubernetes" class="headerlink" title="3. Kubernetes"></a>3. Kubernetes</h6><p>勾选以下3个<br><img src="/img/in-post/post-docker/15591116616667.jpg" alt=""></p><h6 id="4-安装依赖镜像"><a href="#4-安装依赖镜像" class="headerlink" title="4. 安装依赖镜像"></a>4. 安装依赖镜像</h6><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs vim">git clone http<span class="hljs-variable">s:</span>//github.<span class="hljs-keyword">com</span>/maguowei/k8s-docker-<span class="hljs-keyword">for</span>-mac.git<br><span class="hljs-keyword">cd</span> k8s-docker-<span class="hljs-keyword">for</span>-mac/<br>./load_img.<span class="hljs-keyword">sh</span><br></code></pre></td></tr></table></figure><h3 id="集成kubernetes-dashboard"><a href="#集成kubernetes-dashboard" class="headerlink" title="集成kubernetes-dashboard"></a>集成kubernetes-dashboard</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment"># 安装</span><br>kubectl apply -f https:<span class="hljs-regexp">//</span>raw.githubusercontent.com<span class="hljs-regexp">/kubernetes/</span>dashboard<span class="hljs-regexp">/v1.10.1/</span>src<span class="hljs-regexp">/deploy/</span>recommended/kubernetes-dashboard.yaml<br><br><span class="hljs-comment"># 启动</span><br>kubectl proxy<br><br><span class="hljs-comment"># 修改配置</span><br>kubectl -n kube-system edit service kubernetes-dashboard<br></code></pre></td></tr></table></figure><h3 id="查看日志"><a href="#查看日志" class="headerlink" title="查看日志"></a>查看日志</h3><p>打开 <code>Console.app</code> 搜索 docker</p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul><li><a href="https://docs.docker.com/docker-for-mac/troubleshoot/#check-the-logs">Logs and troubleshooting</a> </li><li><a href="https://github.com/docker/for-mac/issues/3327">“Kubernetes is starting” indefinitely on macOS Mojave</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>云计算</category>
      
    </categories>
    
    
    <tags>
      
      <tag>docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Git 高级教程</title>
    <link href="/2019/02/25/Git-Advance/"/>
    <url>/2019/02/25/Git-Advance/</url>
    
    <content type="html"><![CDATA[<h1 id="优雅的删除子模块"><a href="#优雅的删除子模块" class="headerlink" title="优雅的删除子模块"></a>优雅的删除子模块</h1><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs vala">MOD_NAME=xxx<br><span class="hljs-meta"># 逆初始化模块，其中&#123;MOD_NAME&#125;为模块目录，执行后可发现模块目录被清空</span><br>git submodule deinit $MOD_NAME<br><span class="hljs-meta"># 删除.gitmodules中记录的模块信息（--cached选项清除.git/modules中的缓存）</span><br>git rm --cached $MOD_NAME<br><span class="hljs-meta"># 删除.gitmodules文件里的引用</span><br>vi .gitmodules<br><span class="hljs-meta"># 提交更改到代码库，可观察到&#x27;.gitmodules&#x27;内容发生变更</span><br>git commit -am <span class="hljs-string">&quot;Remove a submodule.&quot;</span> <br></code></pre></td></tr></table></figure><h1 id="添加子模块"><a href="#添加子模块" class="headerlink" title="添加子模块"></a>添加子模块</h1><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile">git submodule <span class="hljs-keyword">add</span><span class="bash"> git@xx.xx.xx:Creative/creative-model.git</span><br></code></pre></td></tr></table></figure><h1 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h1><p><a href="https://gitee.com/oschina/gitee_best_practices/blob/master/%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/Git%E5%88%86%E6%94%AF%E7%AE%A1%E7%90%86%E5%AE%9E%E8%B7%B5.md#">Git分支管理实践</a></p>]]></content>
    
    
    <categories>
      
      <category>Git</category>
      
    </categories>
    
    
    <tags>
      
      <tag>git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>区块链分享</title>
    <link href="/2018/10/14/blockchain/"/>
    <url>/2018/10/14/blockchain/</url>
    
    <content type="html"><![CDATA[<blockquote><p>TODO 待完善</p></blockquote><h1 id="区块链概念"><a href="#区块链概念" class="headerlink" title="区块链概念"></a>区块链概念</h1><p>女巫攻击(Sybil Attack)<br>拜占庭将军问题<br>扩容<br>分叉<br>51%算力攻击<br>Merkle Tree/MerkleRoot<br>双重支付: 通过共识算法来解决双重支付问题, 当一笔交易成功后(大家对这笔交易的结果达成了共识, 想重复交易就会被拒绝)<br>挖矿<br>UTXO(Unspent Transaction output): 未被使用的交易输出</p><p>数字签名: 用来保证交易出自本人, 防止中间人篡改</p><h2 id="区块"><a href="#区块" class="headerlink" title="区块"></a>区块</h2><ul><li><p>区块头 = 80字节 = 4字节版本 + 32字节上一个区块的散列值 + 32字节的Merkle Root Hash + 4字节时间戳(当前时间) + 4字节当前难度值 + 4字节的随机数组成</p></li><li><p>交易列表</p></li></ul><h2 id="确认"><a href="#确认" class="headerlink" title="确认"></a>确认</h2><p>“确认”是指, 当一个区块产生之后, 它不是立即可信的, 网络上总是相信最长的区块链, 当一条交易记录被打包进一个区块之后, 就有了一个确认, 而这个区块所在的链后面被再加入一个区块, 就是第二个确认, 如此下去, 一个交易有了6个确认, 我们就认为这个交易已经确定了, 会被永远记录在区块链中. 为什么是6个确认呢?因为每一个确认就是一个挖矿过程, 都需要提供非常严格的计算, 因此, 这6个区块被同一个旷工创建的可能性微乎其微(可以说是不可能, 动用了全网算力计算每10分钟算出来的一个区块仅凭一个矿工), 因此矿工伪造交易也基本不可能</p><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>Q: 交易数未满区块可容纳最大交易数时, merkleroot 咋计算?  区块的hash咋计算?<br>Q2: 创世区块, 前面几个区块, 交易量没有达到4000比的时候, 每10分钟产生一个区块, 那交易量是?</p><p>A: 挖矿之前, 新区块会包含哪些交易就已经确定好了的.<br>交易数量 大于 4000 则根据手续费排序前4000比交易<br>交易数量 小于 4000 则直接打包 (根据btc.com前期的区块内容推测)</p><p>Q: 新的交易广播之后如何存放在各个节点下等待打包? 这个过程是怎样的</p><p>Q: 比特币钱包支付界面</p><h2 id="一些数字"><a href="#一些数字" class="headerlink" title="一些数字"></a>一些数字</h2><p>比特币恒定额度为2100万, 它的的发行机制为:<br>210000 * 50(10500000) + 210000 * 25(5250000) + 210000 * 12.5 (2625000) = 18375000 </p><p>BTC最高点总市值<br>2100万 * 2万美元 = 420亿美元</p><p>每日最多交易数为=7 * 60 * 60 * 24 = 604, 800</p><p>两周生产区块 = 24 * 60 / 10 * 14 = 2016</p><h2 id="技术实现"><a href="#技术实现" class="headerlink" title="技术实现"></a>技术实现</h2><h3 id="区块结构"><a href="#区块结构" class="headerlink" title="区块结构"></a>区块结构</h3><h4 id="区块头"><a href="#区块头" class="headerlink" title="区块头"></a>区块头</h4><h4 id="交易"><a href="#交易" class="headerlink" title="交易"></a>交易</h4><p>Block weight: SegWit激活后(2017.8.24?), 新出来的概念</p><p>交易被确认 = 打包/广播次数吗?</p><h3 id="搭建自己的私有链"><a href="#搭建自己的私有链" class="headerlink" title="搭建自己的私有链"></a>搭建自己的私有链</h3><p>bitcoinj</p>]]></content>
    
    
    <categories>
      
      <category>Block Chain</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Blockchain</tag>
      
      <tag>Bitcoin</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>常见协议及其RFC文档链接</title>
    <link href="/2016/12/04/Protocol-RFCs/"/>
    <url>/2016/12/04/Protocol-RFCs/</url>
    
    <content type="html"><![CDATA[<h3 id="HTTP"><a href="#HTTP" class="headerlink" title="HTTP"></a>HTTP</h3><p>HTTP 1.0 <a href="https://tools.ietf.org/html/rfc1945">https://tools.ietf.org/html/rfc1945</a><br>HTTP 1.1 <a href="https://tools.ietf.org/html/rfc2616">https://tools.ietf.org/html/rfc2616</a><br>HTTP 2.0 <a href="https://tools.ietf.org/html/rfc7540">https://tools.ietf.org/html/rfc7540</a></p><h3 id="HTTPS"><a href="#HTTPS" class="headerlink" title="HTTPS"></a>HTTPS</h3><p><a href="https://tools.ietf.org/html/rfc2817">https://tools.ietf.org/html/rfc2817</a><br><a href="https://tools.ietf.org/html/rfc2818">https://tools.ietf.org/html/rfc2818</a></p><h3 id="SOCKS-5"><a href="#SOCKS-5" class="headerlink" title="SOCKS 5"></a>SOCKS 5</h3><p><a href="https://tools.ietf.org/html/rfc1928">https://tools.ietf.org/html/rfc1928</a><br><a href="https://tools.ietf.org/html/rfc1929">https://tools.ietf.org/html/rfc1929</a></p><h3 id="Domain"><a href="#Domain" class="headerlink" title="Domain"></a>Domain</h3><p><a href="https://tools.ietf.org/html/rfc1034">域名-概念和设施</a><br><a href="https://tools.ietf.org/html/rfc1035">域名-实现及标准</a></p>]]></content>
    
    
    <categories>
      
      <category>Protocol</category>
      
    </categories>
    
    
    <tags>
      
      <tag>protocol</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python 入门</title>
    <link href="/2016/06/13/python-quick-start/"/>
    <url>/2016/06/13/python-quick-start/</url>
    
    <content type="html"><![CDATA[<h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 这是注释</span><br></code></pre></td></tr></table></figure><h2 id="算数运算符"><a href="#算数运算符" class="headerlink" title="算数运算符"></a>算数运算符</h2><ul><li>+</li><li>-</li><li>*</li><li>/</li><li>%</li><li>//    浮点除法（对结果四舍五入）</li><li>**    乘方</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-number">10</span> / <span class="hljs-number">1.2</span><br><span class="hljs-number">8.33333333333333</span>...<br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-number">10</span> // <span class="hljs-number">1.2</span><br><span class="hljs-number">8</span><br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-number">2</span> ** <span class="hljs-number">2</span><span class="hljs-comment">#(2的平方)</span><br><span class="hljs-number">4</span><br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-number">2</span> ** <span class="hljs-number">3</span><span class="hljs-comment">#(2的3次方)</span><br><span class="hljs-number">8</span><br></code></pre></td></tr></table></figure><h2 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h2><ul><li>=</li><li>+=</li><li>-=</li><li>/=</li><li>*=</li></ul><h2 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h2><ul><li>&lt;</li><li>&lt;=</li><li>.&gt;</li><li>.&gt;=</li><li>==</li><li>!=</li><li>&lt;&gt;</li></ul><h2 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h2><ul><li>and</li><li>or</li><li>not</li></ul><h2 id="，–支持"><a href="#，–支持" class="headerlink" title="++，–支持"></a>++，–支持</h2><p>不支持</p><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">counter</span> = <span class="hljs-number">0</span><br><span class="hljs-attr">miles</span> = <span class="hljs-number">1000.0</span><br><span class="hljs-attr">name</span> = <span class="hljs-string">&#x27;Bob&#x27;</span><br></code></pre></td></tr></table></figure><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><ul><li>int</li><li>long</li><li>bool</li><li>float</li><li>decimal</li><li>complex</li></ul><h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span>pystr = <span class="hljs-string">&#x27;python&#x27;</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>iscool = <span class="hljs-string">&quot;is cool!&quot;</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>pystr[<span class="hljs-number">0</span>]<br><span class="hljs-string">&#x27;p&#x27;</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>pystr[<span class="hljs-number">2</span>:<span class="hljs-number">5</span>]<br><span class="hljs-string">&#x27;tho&#x27;</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>iscool[:<span class="hljs-number">2</span>]<br><span class="hljs-string">&#x27;is&#x27;</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>iscool[<span class="hljs-number">3</span>:]<br><span class="hljs-string">&#x27;cool!&#x27;</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>iscool[-<span class="hljs-number">1</span>]<br><span class="hljs-string">&#x27;!&#x27;</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>pystr + iscool<br><span class="hljs-string">&#x27;Pythonis cool!&#x27;</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>pystr + <span class="hljs-string">&#x27; &#x27;</span> + iscool<br><span class="hljs-string">&#x27;Python is cool!&#x27;</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>pystr * <span class="hljs-number">2</span><br><span class="hljs-string">&#x27;PythonPython&#x27;</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>pystr = <span class="hljs-string">&#x27;&#x27;&#x27;python</span><br><span class="hljs-string"><span class="hljs-meta">... </span>is cool&#x27;&#x27;&#x27;</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>pystr<br><span class="hljs-string">&#x27;python\nis cool&#x27;</span><br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">print</span> pystr<br>python<br><span class="hljs-keyword">is</span> cool<br></code></pre></td></tr></table></figure><h2 id="三元表达式"><a href="#三元表达式" class="headerlink" title="三元表达式"></a>三元表达式</h2><h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p>列表元素用[]包裹，元素的个数及元素的值可以改变.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span>aList = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>]<br><span class="hljs-meta">&gt;&gt;&gt; </span>aList<br>[<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>]<br><span class="hljs-meta">&gt;&gt;&gt; </span>aList[<span class="hljs-number">0</span>]<br><span class="hljs-number">1</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>aList[<span class="hljs-number">2</span>:]<br>[<span class="hljs-number">3</span>, <span class="hljs-number">4</span>]<br><span class="hljs-meta">&gt;&gt;&gt; </span>aList[<span class="hljs-number">1</span>] = <span class="hljs-number">5</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>aList<br>[<span class="hljs-number">1</span>, <span class="hljs-number">5</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>]<br></code></pre></td></tr></table></figure><h2 id="元组"><a href="#元组" class="headerlink" title="元组"></a>元组</h2><p>元组元素用()包裹，元素的值无法更改, 变量本身可以重新被赋值.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span>aTuple = (<span class="hljs-string">&#x27;robots&#x27;</span>, <span class="hljs-number">77</span>, <span class="hljs-number">93</span>, <span class="hljs-string">&#x27;try&#x27;</span>)<br><span class="hljs-meta">&gt;&gt;&gt; </span>aTuple<br>(<span class="hljs-string">&#x27;robots&#x27;</span>, <span class="hljs-number">77</span>, <span class="hljs-number">93</span>, <span class="hljs-string">&#x27;try&#x27;</span>)<br><span class="hljs-meta">&gt;&gt;&gt; </span>aTuple[:<span class="hljs-number">3</span>]<br>(<span class="hljs-string">&#x27;robots&#x27;</span>, <span class="hljs-number">77</span>, <span class="hljs-number">93</span>)<br><span class="hljs-meta">&gt;&gt;&gt; </span>aTuple[<span class="hljs-number">1</span>] = <span class="hljs-number">5</span><br>Traceback (most recent call last):<br>  File <span class="hljs-string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="hljs-number">1</span>, <span class="hljs-keyword">in</span> &lt;module&gt;<br>TypeError: <span class="hljs-string">&#x27;tuple&#x27;</span> <span class="hljs-built_in">object</span> does <span class="hljs-keyword">not</span> support item assignment<br><span class="hljs-meta">&gt;&gt;&gt; </span>aTuple = (<span class="hljs-string">&#x27;a&#x27;</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>)<br><span class="hljs-meta">&gt;&gt;&gt; </span>aTuple<br>(<span class="hljs-string">&#x27;a&#x27;</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>)<br></code></pre></td></tr></table></figure><h2 id="字典"><a href="#字典" class="headerlink" title="字典"></a>字典</h2><p>字典元素用{}包裹.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span>aDict = &#123;<span class="hljs-string">&#x27;host&#x27;</span>: <span class="hljs-string">&#x27;earth&#x27;</span>&#125;<br><span class="hljs-meta">&gt;&gt;&gt; </span>aDict[<span class="hljs-string">&#x27;port&#x27;</span>] = <span class="hljs-number">80</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>aDict<br>&#123;<span class="hljs-string">&#x27;host&#x27;</span>: <span class="hljs-string">&#x27;earth&#x27;</span>, <span class="hljs-string">&#x27;port&#x27;</span>: <span class="hljs-number">80</span>&#125;<br><span class="hljs-meta">&gt;&gt;&gt; </span>aDict.keys()<br>[<span class="hljs-string">&#x27;host&#x27;</span>, <span class="hljs-string">&#x27;port&#x27;</span>]<br><span class="hljs-meta">&gt;&gt;&gt; </span>aDict[<span class="hljs-string">&#x27;host&#x27;</span>]<br>earth<br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">for</span> key <span class="hljs-keyword">in</span> aDict:<br><span class="hljs-meta">... </span>  <span class="hljs-built_in">print</span> key, aDict[key]<br>...<br>host earth<br>port <span class="hljs-number">80</span><br></code></pre></td></tr></table></figure><h2 id="条件控制语句"><a href="#条件控制语句" class="headerlink" title="条件控制语句"></a>条件控制语句</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python">n = <span class="hljs-number">3</span><br><span class="hljs-keyword">if</span> n &gt; <span class="hljs-number">2</span>:<br>  <span class="hljs-built_in">print</span> <span class="hljs-string">&quot;n &gt; 2&quot;</span><br><br><span class="hljs-keyword">if</span> n &lt; <span class="hljs-number">2</span>:<br>  <span class="hljs-built_in">print</span> <span class="hljs-string">&quot;if&quot;</span><br><span class="hljs-keyword">else</span><br><span class="hljs-built_in">print</span> <span class="hljs-string">&quot;else&quot;</span><br><br><span class="hljs-keyword">if</span> n &lt; <span class="hljs-number">2</span>:<br>  <span class="hljs-built_in">print</span> <span class="hljs-string">&quot;if&quot;</span><br><span class="hljs-keyword">elif</span> n == <span class="hljs-number">3</span>:<br><span class="hljs-built_in">print</span> <span class="hljs-string">&quot;n is 3&quot;</span><br><span class="hljs-keyword">else</span><br><span class="hljs-built_in">print</span> <span class="hljs-string">&quot;else&quot;</span><br></code></pre></td></tr></table></figure><h2 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python">i = <span class="hljs-number">0</span><br><span class="hljs-keyword">while</span> i &lt; <span class="hljs-number">3</span>:<br><span class="hljs-built_in">print</span> <span class="hljs-string">&quot;#%d&quot;</span><br><br><span class="hljs-keyword">for</span> item <span class="hljs-keyword">in</span> [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>]:<br><span class="hljs-built_in">print</span> item<br><br>foo = <span class="hljs-string">&quot;abc&quot;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(foo)):<br><span class="hljs-built_in">print</span> foo[i], <span class="hljs-string">&quot;(%d)&quot;</span> % i<br><br></code></pre></td></tr></table></figure><h2 id="异常"><a href="#异常" class="headerlink" title="异常"></a>异常</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">try</span>:<br>    fileName = raw_input(<span class="hljs-string">&quot;please input file name:&quot;</span>)<br>    file = <span class="hljs-built_in">open</span>(fileName, <span class="hljs-string">&#x27;r&#x27;</span>)<br>    <span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> file:<br>        <span class="hljs-built_in">print</span> line<br>    file.close()<br><span class="hljs-keyword">except</span> IOError, e:<br><span class="hljs-built_in">print</span> <span class="hljs-string">&quot;file open error&quot;</span>, e<br><br><span class="hljs-keyword">raise</span> Exception(<span class="hljs-string">&quot;message&quot;</span>) <span class="hljs-comment"># 语句可以引发一个异常, 类似Java的throw</span><br></code></pre></td></tr></table></figure><h2 id="Python-特性"><a href="#Python-特性" class="headerlink" title="Python 特性"></a>Python 特性</h2><h3 id="列表解析"><a href="#列表解析" class="headerlink" title="列表解析"></a>列表解析</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span>squred = [x ** <span class="hljs-number">2</span> <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">4</span>)]<br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> squred:<br><span class="hljs-meta">... </span><span class="hljs-built_in">print</span> i<br>...<br><span class="hljs-number">0</span><br><span class="hljs-number">1</span><br><span class="hljs-number">4</span><br><span class="hljs-number">9</span><br><br><span class="hljs-meta">&gt;&gt;&gt; </span>squred = [x ** <span class="hljs-number">2</span> <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">8</span>) <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> x % <span class="hljs-number">2</span>]<br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> squred:<br><span class="hljs-meta">... </span><span class="hljs-built_in">print</span> i<br>...<br><span class="hljs-number">0</span><br><span class="hljs-number">4</span><br><span class="hljs-number">16</span><br><span class="hljs-number">36</span><br></code></pre></td></tr></table></figure><h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><ul><li>定义函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">funtion_name</span>(<span class="hljs-params">[arguments]</span>):</span><br>    <span class="hljs-string">&quot;optional documentation string&quot;</span><br>    function suite<br></code></pre></td></tr></table></figure><ul><li>函数的参数可以有带默认值</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">foo</span>(<span class="hljs-params">debug=<span class="hljs-literal">True</span></span>):</span><br>    <span class="hljs-string">&quot;optional documentation string&quot;</span><br>    <span class="hljs-keyword">if</span> debug:<br>        <span class="hljs-built_in">print</span> <span class="hljs-string">&quot;xxx&quot;</span><br></code></pre></td></tr></table></figure><h3 id="类"><a href="#类" class="headerlink" title="类"></a>类</h3><p>使用class定义类，可以提供一个可选的父类或者说基类，如果没有合适的基类，那就使用object作为基类。class行之后是可选的文档字符串，静态成员定义，方法定义。</p><h4 id="定义类"><a href="#定义类" class="headerlink" title="定义类"></a>定义类</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ClassName</span>(<span class="hljs-params">base_class[es]</span>):</span><br>    <span class="hljs-string">&quot;optional document string&quot;</span><br>    static_member_declarations<br>    method_declarations<br></code></pre></td></tr></table></figure><h4 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">FooClass</span>(<span class="hljs-params"><span class="hljs-built_in">object</span></span>):</span><br>    <span class="hljs-string">&quot;my first class&quot;</span><br>    version = <span class="hljs-number">0.1</span><br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self, nm=<span class="hljs-string">&#x27;john doe&#x27;</span></span>):</span><br>        <span class="hljs-string">&quot;constructor&quot;</span><br>        self.name = nm<br>        <span class="hljs-built_in">print</span> <span class="hljs-string">&quot;created a class instance for&quot;</span>, nm<br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">showname</span>(<span class="hljs-params">self</span>):</span><br>        <span class="hljs-string">&quot;display instance attribute and class name&quot;</span><br>        <span class="hljs-built_in">print</span> <span class="hljs-string">&quot;Your name is &quot;</span>, self.name<br>        <span class="hljs-built_in">print</span> <span class="hljs-string">&quot;My Name is &quot;</span>, self.__class__.__name__<br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">showver</span>(<span class="hljs-params">self</span>):</span><br>        <span class="hljs-string">&quot;display class(static) attribute&quot;</span><br>        <span class="hljs-built_in">print</span> self.version<br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">addMe2Me</span>(<span class="hljs-params">self, x</span>):</span><br>        <span class="hljs-string">&quot;apply + operation to argument&quot;</span><br>        <span class="hljs-keyword">return</span> x + x<br></code></pre></td></tr></table></figure><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span>foo1 &gt;&gt;&gt; = FooClass()<br>created a <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">instance</span> <span class="hljs-title">for</span> <span class="hljs-title">john</span> <span class="hljs-title">doe</span></span><br>&gt;&gt;&gt; foo2 = FooClass(&quot;Ely&quot;)<br>created a <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">instance</span> <span class="hljs-title">for</span> <span class="hljs-title">Ely</span></span><br><span class="hljs-class">&gt;&gt;&gt; <span class="hljs-title">foo2</span>.<span class="hljs-title">showname</span>()</span><br><span class="hljs-class"><span class="hljs-title">Your</span> <span class="hljs-title">name</span> <span class="hljs-title">is</span>  <span class="hljs-title">Ely</span></span><br><span class="hljs-class"><span class="hljs-title">My</span> <span class="hljs-title">Name</span> <span class="hljs-title">is</span>  <span class="hljs-title">FooClass</span></span><br><span class="hljs-class">&gt;&gt;&gt; <span class="hljs-title">foo2</span>.<span class="hljs-title">showver</span>()</span><br><span class="hljs-class">0.1</span><br><span class="hljs-class">&gt;&gt;&gt; <span class="hljs-title">print</span> <span class="hljs-title">foo2</span>.<span class="hljs-title">addMe2Me</span>(<span class="hljs-params"><span class="hljs-number">2</span></span>)</span><br><span class="hljs-class">4</span><br></code></pre></td></tr></table></figure><h3 id="模块"><a href="#模块" class="headerlink" title="模块"></a>模块</h3><p>模块是一种组织形式，它将彼此有关系的python代码组织到一个个独立文件当中。<br>模块可以包含可执行代码，函数和类或者这些东西的组合。</p><p><strong>当你创建了一个Python源文件，模块的名字就是不带 .py后缀的文件名。 一个模块创建之后，你可以从另一个模块中使用import语句导入这个模块来使用。</strong></p><ul><li><p>导入模块<br><code>import module_name</code></p></li><li><p>使用模块<br><code>module_name.functionName()</code><br><code>module_name.attributeName</code></p></li></ul><h3 id="术语"><a href="#术语" class="headerlink" title="术语"></a>术语</h3><p>PEB: 一个PEB就是一个Python 增强提案（Python Enhancement Proposal), 这也是在新版Python中增加新特性的方式。</p><h3 id="内建函数"><a href="#内建函数" class="headerlink" title="内建函数"></a>内建函数</h3><table><thead><tr><th>函数</th><th>描述</th></tr></thead><tbody><tr><td>dir([obj])</td><td>显示对象的属性，如果没有提供参数，则显示全局对象的名字</td></tr><tr><td>help([obj])</td><td>以一种整齐美观的形式，显示对象的文档字符串，如果没有提供任何参数，则会进入交互式帮助</td></tr><tr><td>int(obj)</td><td>将一个对象转换为一个整数</td></tr><tr><td>len(obj)</td><td>返回对象的长度</td></tr><tr><td>open(fn, mode)</td><td>以mode(‘r’ = 读, ‘w’ = ‘写’, ‘a’ = ‘追加’)方式打开一个文件名为fn的文件</td></tr><tr><td>range([start,]stop[,step])</td><td>返回一个整数列表，起始值为start，结束值为stop - 1；start默认为0，step默认值为1</td></tr><tr><td>raw_input(str)</td><td>等待用户输入一个字符串，可以提供一个可选的参数str用作提示信息</td></tr><tr><td>str(obj)</td><td>将一个对象转换为字符串</td></tr><tr><td>type(obj)</td><td>返回对象的类型（返回值本身是一个type对象！）</td></tr><tr><td>print</td><td>打印</td></tr></tbody></table>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Mac OS X 10.10 安装 Storm-0.9.0-wip16</title>
    <link href="/2015/05/21/mac-os-x-install-storm-0.9.0-wip16/"/>
    <url>/2015/05/21/mac-os-x-install-storm-0.9.0-wip16/</url>
    
    <content type="html"><![CDATA[<h3 id="Requirements"><a href="#Requirements" class="headerlink" title="Requirements"></a>Requirements</h3><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs clean"><span class="hljs-comment">// install brew</span><br>ruby -e <span class="hljs-string">&quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</span><br><br><span class="hljs-comment">// install build-tools</span><br>brew install pkg-config <br>brew install automake<br>brew install libtool<br>``` <br><br><br>### <span class="hljs-number">1.</span> 安装zookeeper<br><br>### <span class="hljs-number">2.</span> install storm<br></code></pre></td></tr></table></figure><p>download storm-0.9.0-wip16.zip<br>unzip storm-0.9.0-wip16.zip<br>cd storm-0.9.0-wip16<br>vi conf/storm.yaml</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs"><br><br>##### 2.1 install zeromq<br>```   <br>$ cd /usr/local<br>$ git checkout 381c97f Library/Formula/zeromq.rb<br>$ brew install zeromq<br></code></pre></td></tr></table></figure><h5 id="2-2-install-jzmq"><a href="#2-2-install-jzmq" class="headerlink" title="2.2 install jzmq"></a>2.2 install jzmq</h5><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs makefile">$ git clone https://github.com/nathanmarz/jzmq.git<br>$ cd jzmq<br>$ ./autogen.sh<br><span class="hljs-section">autoreconf: Entering directory `.&#x27;</span><br><span class="hljs-section">autoreconf: configure.ac: not using Gettext</span><br><span class="hljs-section">autoreconf: running: aclocal --force </span><br><span class="hljs-section">autoreconf: configure.ac: tracing</span><br><span class="hljs-section">autoreconf: configure.ac: not using Libtool</span><br><span class="hljs-section">autoreconf: running: /usr/local/Cellar/autoconf/2.69/bin/autoconf --force</span><br><span class="hljs-section">configure.ac:14: error: possibly undefined macro: AC_PROG_LIBTOOL</span><br>      If this token and others are legitimate, please use m4_pattern_allow.<br>      See the Autoconf documentation.<br><span class="hljs-section">autoreconf: /usr/local/Cellar/autoconf/2.69/bin/autoconf failed with exit status: 1</span><br><br>出现这种情况的时候，请检查/usr/local/lib 和 /usr/local/<span class="hljs-keyword">include</span> 文件夹的权限(这两个目录是brew在使用)<br><br><br>$ ./configure<br>$ make<br>...<br><span class="hljs-section">make[1]: *** No rule to make target classdist_noinst.stamp&#x27;, needed byorg/zeromq/ZMQ.class&#x27;.  Stop.</span><br><span class="hljs-section">make: *** [all-recursive] Error 1</span><br>    <br><span class="hljs-section">解决方法:</span><br>touch src/classdist_noinst.stamp<br><br>$ make<br>...<br><span class="hljs-section">make[1]: *** No rule to make target org/zeromq/ZMQException.class, needed byall&#x27;.  Stop.</span><br><span class="hljs-section">make: *** [all-recursive] Error 1</span><br><br><span class="hljs-section">解决方法:</span><br>cd src<br>javac -d . org/zeromq/*.java<br><br>$ cd ../<br>$ make<br>...<br>In file included from ZMQ.cpp:25:<br>In file included from ./util.hpp:23:<br><span class="hljs-section">/Library/Java/JavaVirtualMachines/jdk1.7.0_71.jdk/Contents/Home/include/jni.h:45:10: fatal error: &#x27;jni_md.h&#x27; file not found</span><br><span class="hljs-comment">#include &quot;jni_md.h&quot;</span><br>         ^<br>1 error generated.<br><span class="hljs-section">make[2]: *** [libjzmq_la-ZMQ.lo] Error 1</span><br><span class="hljs-section">make[1]: *** [all] Error 2</span><br><span class="hljs-section">make: *** [all-recursive] Error 1</span><br><br><span class="hljs-section">解决方法:</span><br>$ vi config.status<br>找到如下行<br>S[<span class="hljs-string">&quot;CPPFLAGS&quot;</span>]=<span class="hljs-string">&quot;-D_REENTRANT -D_THREAD_SAFE  -I/usr/local/Cellar/zeromq/2.1.9/include  -I/Library/Java/JavaVirtualMachines/jdk1.7.0_71.jdk/Contents/Home/include&quot;</span><br>修改为<br>S[<span class="hljs-string">&quot;CPPFLAGS&quot;</span>]=<span class="hljs-string">&quot;-D_REENTRANT -D_THREAD_SAFE  -I/usr/local/Cellar/zeromq/2.1.9/include  -I/Library/Java/JavaVirtualMachines/jdk1.7.0_71.jdk/Contents/Home/include -I/System/Library/Frameworks/JavaVM.framework/Versions/Current/Headers/&quot;</span><br>    <br><br>$ sudo make install<br></code></pre></td></tr></table></figure><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章:"></a>参考文章:</h3><p><a href="http://storm.apache.org/documentation/Installing-native-dependencies.html">http://storm.apache.org/documentation/Installing-native-dependencies.html</a><br><a href="http://nsdifficult.com/blog/20140325/storm/">http://nsdifficult.com/blog/20140325/storm/</a><br><a href="http://xxthermidorxx.hatenablog.com/entry/2014/03/15/225926">http://xxthermidorxx.hatenablog.com/entry/2014/03/15/225926</a><br><a href="https://github.com/oschrenk/zeromq-java-sample/blob/master/README.md">https://github.com/oschrenk/zeromq-java-sample/blob/master/README.md</a></p>]]></content>
    
    
    <categories>
      
      <category>macOS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工作随笔</tag>
      
      <tag>storm</tag>
      
      <tag>zeromq</tag>
      
      <tag>jqzm</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ubuntu 14.04 搭L2TP-Over-IPSec服务器</title>
    <link href="/2014/12/14/VPS-Ubuntu-14.04-L2TP-Over-IPSec/"/>
    <url>/2014/12/14/VPS-Ubuntu-14.04-L2TP-Over-IPSec/</url>
    
    <content type="html"><![CDATA[<blockquote><p>Tip: VI编辑文件时, 先找配置项是否存在,若存在,修改,反之新增</p></blockquote><h5 id="1-安装openswan"><a href="#1-安装openswan" class="headerlink" title="1. 安装openswan"></a>1. 安装openswan</h5><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-comment"># apt-get install openswan</span><br><span class="hljs-comment"># 查看版本</span><br><span class="hljs-comment"># ipsec --version</span><br><span class="hljs-attribute">Linux</span> Openswan U<span class="hljs-number">2</span>.<span class="hljs-number">6</span>.<span class="hljs-number">38</span>/K<span class="hljs-number">3</span>.<span class="hljs-number">13</span>.<span class="hljs-number">0</span>-<span class="hljs-number">37</span>-generic (netkey)<br></code></pre></td></tr></table></figure><h5 id="2-修改-etc-ipsec-conf"><a href="#2-修改-etc-ipsec-conf" class="headerlink" title="2. 修改 /etc/ipsec.conf"></a>2. 修改 /etc/ipsec.conf</h5><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-comment"># vi /etc/ipsec.conf</span><br><br>version 2.0<br>config setup<br>    <span class="hljs-attribute">nat_traversal</span>=<span class="hljs-literal">yes</span><br>    <span class="hljs-attribute">virtual_private</span>=%v4:10.0.0.0/8,%v4:192.168.0.0/16,%v4:172.16.0.0/12<br>    <span class="hljs-attribute">oe</span>=off<br>    <span class="hljs-attribute">protostack</span>=netkey<br><br>conn L2TP-PSK-NAT<br>    <span class="hljs-attribute">rightsubnet</span>=vhost:%priv<br>    <span class="hljs-attribute">also</span>=L2TP-PSK-noNAT<br><br>conn L2TP-PSK-noNAT<br>    <span class="hljs-attribute">authby</span>=secret<br>    <span class="hljs-attribute">pfs</span>=<span class="hljs-literal">no</span><br>    <span class="hljs-attribute">auto</span>=add<br>    <span class="hljs-attribute">keyingtries</span>=3<br>    <span class="hljs-attribute">rekey</span>=<span class="hljs-literal">no</span><br>    <span class="hljs-attribute">ikelifetime</span>=8h<br>    <span class="hljs-attribute">keylife</span>=1h<br>    <span class="hljs-attribute">type</span>=transport<br>    <span class="hljs-attribute">left</span>=你的服务器公网IP地址<br>    <span class="hljs-attribute">leftprotoport</span>=17/%any<br>    <span class="hljs-attribute">right</span>=%any<br>    <span class="hljs-attribute">rightprotoport</span>=17/%any<br></code></pre></td></tr></table></figure><h5 id="3-配置密钥"><a href="#3-配置密钥" class="headerlink" title="3. 配置密钥"></a>3. 配置密钥</h5><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs gradle"># vi <span class="hljs-regexp">/etc/i</span>psec.secrets<br>你的服务器公网IP地址 %<span class="hljs-keyword">any</span>: PSK <span class="hljs-string">&quot;自定义密钥&quot;</span><br><span class="hljs-number">222.22</span>.<span class="hljs-number">22.22</span> %<span class="hljs-keyword">any</span>: PSK <span class="hljs-string">&quot;xxxxxxxx&quot;</span><br></code></pre></td></tr></table></figure><h5 id="4-运行以下命令"><a href="#4-运行以下命令" class="headerlink" title="4. 运行以下命令"></a>4. 运行以下命令</h5><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs gradle"><span class="hljs-keyword">for</span> <span class="hljs-keyword">each</span> in <span class="hljs-regexp">/proc/</span>sys<span class="hljs-regexp">/net/i</span>pv4<span class="hljs-regexp">/conf/</span>*<br><span class="hljs-keyword">do</span><br>echo <span class="hljs-number">0</span> &gt; $<span class="hljs-keyword">each</span>/accept_redirects<br>echo <span class="hljs-number">0</span> &gt; $<span class="hljs-keyword">each</span>/send_redirects<br>done<br></code></pre></td></tr></table></figure><h5 id="5-检查一下-IPSec-能否正常工作"><a href="#5-检查一下-IPSec-能否正常工作" class="headerlink" title="5. 检查一下 IPSec 能否正常工作"></a>5. 检查一下 IPSec 能否正常工作</h5><pre><code># ipsec verify</code></pre><h5 id="6-重启openswan"><a href="#6-重启openswan" class="headerlink" title="6. 重启openswan"></a>6. 重启openswan</h5><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs vala"><span class="hljs-meta"># service ipsec restart</span><br>或者<br><span class="hljs-meta"># /etc/init.d/ipsec restart</span><br></code></pre></td></tr></table></figure><h5 id="7-安装xl2tpd："><a href="#7-安装xl2tpd：" class="headerlink" title="7. 安装xl2tpd："></a>7. 安装xl2tpd：</h5><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vala"><span class="hljs-meta"># apt-get install xl2tpd</span><br></code></pre></td></tr></table></figure><h5 id="8-配置-etc-xl2tpd-xl2tpd-conf"><a href="#8-配置-etc-xl2tpd-xl2tpd-conf" class="headerlink" title="8. 配置/etc/xl2tpd/xl2tpd.conf"></a>8. 配置/etc/xl2tpd/xl2tpd.conf</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># vi /etc/xl2tpd/xl2tpd.conf</span><br><br>[<span class="hljs-string">global</span>]<br><span class="hljs-string">ipsec</span> <span class="hljs-string">saref</span> <span class="hljs-string">=</span> <span class="hljs-literal">yes</span><br><br>[<span class="hljs-string">lns</span> <span class="hljs-string">default</span>]<br><span class="hljs-string">ip</span> <span class="hljs-string">range</span> <span class="hljs-string">=</span> <span class="hljs-number">10.0</span><span class="hljs-number">.2</span><span class="hljs-number">.2</span><span class="hljs-number">-10.0</span><span class="hljs-number">.2</span><span class="hljs-number">.255</span><br><span class="hljs-string">local</span> <span class="hljs-string">ip</span> <span class="hljs-string">=</span> <span class="hljs-number">10.0</span><span class="hljs-number">.2</span><span class="hljs-number">.1</span><br><span class="hljs-string">;require</span> <span class="hljs-string">chap</span> <span class="hljs-string">=</span> <span class="hljs-literal">yes</span><br><span class="hljs-string">refuse</span> <span class="hljs-string">chap</span> <span class="hljs-string">=</span> <span class="hljs-literal">yes</span><br><span class="hljs-string">refuse</span> <span class="hljs-string">pap</span> <span class="hljs-string">=</span> <span class="hljs-literal">yes</span><br><span class="hljs-string">require</span> <span class="hljs-string">authentication</span> <span class="hljs-string">=</span> <span class="hljs-literal">yes</span><br><span class="hljs-string">ppp</span> <span class="hljs-string">debug</span> <span class="hljs-string">=</span> <span class="hljs-literal">yes</span><br><span class="hljs-string">pppoptfile</span> <span class="hljs-string">=</span> <span class="hljs-string">/etc/ppp/options.xl2tpd</span><br><span class="hljs-string">length</span> <span class="hljs-string">bit</span> <span class="hljs-string">=</span> <span class="hljs-literal">yes</span><br></code></pre></td></tr></table></figure><h5 id="9-如果你之前没有在服务器上安装过pptpd，那么下面这一步你要进行安装："><a href="#9-如果你之前没有在服务器上安装过pptpd，那么下面这一步你要进行安装：" class="headerlink" title="9. 如果你之前没有在服务器上安装过pptpd，那么下面这一步你要进行安装："></a>9. 如果你之前没有在服务器上安装过pptpd，那么下面这一步你要进行安装：</h5><pre><code># apt-get install pptpd</code></pre><h5 id="10-配置-etc-ppp-options-xl2tpd，如果没有就新建一个，内容如下："><a href="#10-配置-etc-ppp-options-xl2tpd，如果没有就新建一个，内容如下：" class="headerlink" title="10. 配置/etc/ppp/options.xl2tpd，如果没有就新建一个，内容如下："></a>10. 配置/etc/ppp/options.xl2tpd，如果没有就新建一个，内容如下：</h5><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-comment"># vi /etc/ppp/options.xl2tpd</span><br><br><span class="hljs-attribute">require</span>-mschap-v<span class="hljs-number">2</span><br><span class="hljs-attribute">ms</span>-dns <span class="hljs-number">8.8.8.8</span><br><span class="hljs-attribute">ms</span>-dns <span class="hljs-number">8.8.4.4</span><br><span class="hljs-attribute">asyncmap</span> <span class="hljs-number">0</span><br><span class="hljs-attribute">auth</span><br><span class="hljs-attribute">crtscts</span><br><span class="hljs-attribute">lock</span><br><span class="hljs-attribute">hide</span>-password<br><span class="hljs-attribute">modem</span><br><span class="hljs-attribute">debug</span><br><span class="hljs-attribute">name</span> l<span class="hljs-number">2</span>tpd<br><span class="hljs-attribute">proxyarp</span><br><span class="hljs-attribute">lcp</span>-echo-interval <span class="hljs-number">30</span><br><span class="hljs-attribute">lcp</span>-echo-failure <span class="hljs-number">4</span><br><span class="hljs-attribute">mtu</span> <span class="hljs-number">1400</span><br><span class="hljs-attribute">connect</span>-delay <span class="hljs-number">5000</span><br><span class="hljs-attribute">noccp</span><br></code></pre></td></tr></table></figure><h5 id="11-添加或修改用户"><a href="#11-添加或修改用户" class="headerlink" title="11. 添加或修改用户"></a>11. 添加或修改用户</h5><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-section"># vi /etc/ppp/chap-secrets</span><br>xiaochunyong    <span class="hljs-emphasis">*       123456  *</span><br>ely.xiao        <span class="hljs-emphasis">*       123456  *</span><br></code></pre></td></tr></table></figure><h5 id="12-重启-xl2tpd"><a href="#12-重启-xl2tpd" class="headerlink" title="12. 重启 xl2tpd"></a>12. 重启 xl2tpd</h5><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vala"><span class="hljs-meta"># service xl2tpd restart</span><br></code></pre></td></tr></table></figure><h5 id="13-设置-iptables-的数据包转发"><a href="#13-设置-iptables-的数据包转发" class="headerlink" title="13. 设置 iptables 的数据包转发"></a>13. 设置 iptables 的数据包转发</h5><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gradle"># iptables --table nat --<span class="hljs-keyword">append</span> POSTROUTING --jump MASQUERADE<br># echo <span class="hljs-number">1</span> &gt; <span class="hljs-regexp">/proc/</span>sys<span class="hljs-regexp">/net/i</span>pv4/ip_forward<br></code></pre></td></tr></table></figure><h5 id="14-设置自启动项-编辑-etc-rc-local-加入下面的语句："><a href="#14-设置自启动项-编辑-etc-rc-local-加入下面的语句：" class="headerlink" title="14. 设置自启动项,编辑/etc/rc.local,加入下面的语句："></a>14. 设置自启动项,编辑/etc/rc.local,加入下面的语句：</h5><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs gradle"># vi <span class="hljs-regexp">/etc/</span>rc.local<br>iptables --table nat --<span class="hljs-keyword">append</span> POSTROUTING --jump MASQUERADE<br>echo <span class="hljs-number">1</span> &gt; <span class="hljs-regexp">/proc/</span>sys<span class="hljs-regexp">/net/i</span>pv4/ip_forward<br><span class="hljs-keyword">for</span> <span class="hljs-keyword">each</span> in <span class="hljs-regexp">/proc/</span>sys<span class="hljs-regexp">/net/i</span>pv4<span class="hljs-regexp">/conf/</span>*<br><span class="hljs-keyword">do</span><br>echo <span class="hljs-number">0</span> &gt; $<span class="hljs-keyword">each</span>/accept_redirects<br>echo <span class="hljs-number">0</span> &gt; $<span class="hljs-keyword">each</span>/send_redirects<br>done<br><span class="hljs-regexp">/etc/i</span>nit.d/ipsec restart<br><br></code></pre></td></tr></table></figure><h5 id="附录-如果客户端连接VPN服务器发生异常-可以查看日志文件-var-log-auth-log"><a href="#附录-如果客户端连接VPN服务器发生异常-可以查看日志文件-var-log-auth-log" class="headerlink" title="附录(如果客户端连接VPN服务器发生异常,可以查看日志文件/var/log/auth.log):"></a>附录(如果客户端连接VPN服务器发生异常,可以查看日志文件/var/log/auth.log):</h5><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stata">tail -f /<span class="hljs-keyword">var</span>/<span class="hljs-keyword">log</span>/auth.<span class="hljs-keyword">log</span><br></code></pre></td></tr></table></figure><h5 id="我安装L2TP-IPSec-VPN-遇到的问题"><a href="#我安装L2TP-IPSec-VPN-遇到的问题" class="headerlink" title="我安装L2TP/IPSec VPN 遇到的问题:"></a>我安装L2TP/IPSec VPN 遇到的问题:</h5><ul><li>连接VPN服务器时，一直提示L2TP-VPN 服务器未响应<br>在日志/var/log/auth.log中找到下面这行错误<code>ERROR: asynchronous network error report on eth1 (sport=4500) for message to 101.224.23.44 port 4500, complainant 101.224.23.44: Connection refused [errno 111, origin ICMP type 3 code 3 (not authenticated)]</code>, 解决办法:<figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs routeros">vi /etc/ipsec.conf<br>将<br><span class="hljs-attribute">leftprotoport</span>=17/1701<br>改为<br><span class="hljs-attribute">leftprotoport</span>=17/%any<br></code></pre></td></tr></table></figure></li></ul><p>在<a href="http://blog.bydell.com/posts/trouble-shooting-%E6%90%AD%E5%BB%BAl2tp-vpn%E6%8A%A5%E9%94%99%EF%BC%9Aerrno-111-origin-icmp-type-3-code-3-not-authenticated/">某个博客</a>上找到了解决方法：</p><p>这才是终极原帖~ <a href="https://lists.openswan.org/pipermail/users/2013-July/022546.html">https://lists.openswan.org/pipermail/users/2013-July/022546.html</a></p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">Good day @robert-woodward<br>I solved my problem <span class="hljs-keyword">a</span> few minutes ago,<br>thanks <span class="hljs-built_in">to</span> this <span class="hljs-built_in">post</span> <span class="hljs-keyword">https</span>://lists.openswan.org/pipermail/users/<span class="hljs-number">2013</span>-July/<span class="hljs-number">022546.</span>html<br>Especially <span class="hljs-built_in">to</span> this part <span class="hljs-keyword">of</span> message:<br>“I also make <span class="hljs-keyword">it</span> my habit <span class="hljs-built_in">to</span> make leftprotoport <span class="hljs-number">17</span>/%<span class="hljs-keyword">any</span> instead <span class="hljs-keyword">of</span> <span class="hljs-number">17</span>/<span class="hljs-number">1701</span>″<br><br>After i changed leftprotoport <span class="hljs-built_in">from</span> <span class="hljs-number">17</span>/<span class="hljs-number">1701</span> <span class="hljs-built_in">to</span> <span class="hljs-number">17</span>/%<span class="hljs-keyword">any</span> <span class="hljs-keyword">in</span> ipsec.conf <span class="hljs-keyword">and</span> restarted ipsec service – everything got back <span class="hljs-built_in">to</span> <span class="hljs-keyword">normal</span> <span class="hljs-keyword">and</span> vpn started working properly.<br>I hope this would solve your issue too.<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>vpn</tag>
      
      <tag>l2tp</tag>
      
      <tag>ipsec</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ubuntu 14.04 搭PPTP服务器</title>
    <link href="/2014/12/11/VPS-Ubuntu-14.04-PPTP/"/>
    <url>/2014/12/11/VPS-Ubuntu-14.04-PPTP/</url>
    
    <content type="html"><![CDATA[<blockquote><p>Tip: VI编辑文件时, 先找配置项是否存在,若存在,修改,反之新增</p></blockquote><h5 id="1-安装PPTP服务器"><a href="#1-安装PPTP服务器" class="headerlink" title="1. 安装PPTP服务器"></a>1. 安装PPTP服务器</h5><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vala"><span class="hljs-meta"># apt-get install pptpd</span><br></code></pre></td></tr></table></figure><h5 id="2-编辑-etc-pptpd-conf-文件，找到设置PPTP服务器IP地址-amp-PPTP客户端IP地址范围的2行取消注释-你应该改一下网段"><a href="#2-编辑-etc-pptpd-conf-文件，找到设置PPTP服务器IP地址-amp-PPTP客户端IP地址范围的2行取消注释-你应该改一下网段" class="headerlink" title="2. 编辑/etc/pptpd.conf 文件，找到设置PPTP服务器IP地址 &amp; PPTP客户端IP地址范围的2行取消注释(你应该改一下网段)"></a>2. 编辑/etc/pptpd.conf 文件，找到设置PPTP服务器IP地址 &amp; PPTP客户端IP地址范围的2行取消注释(你应该改一下网段)</h5><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-comment"># vi /etc/pptpd.conf</span><br><span class="hljs-attribute">localip</span> <span class="hljs-number">192.168.99.1</span><br><span class="hljs-attribute">remoteip</span> <span class="hljs-number">192.168.99.234</span>-<span class="hljs-number">238</span>,<span class="hljs-number">192.168.99.245</span><br></code></pre></td></tr></table></figure><h5 id="3-添加账号"><a href="#3-添加账号" class="headerlink" title="3. 添加账号"></a>3. 添加账号</h5><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gradle"># vi <span class="hljs-regexp">/etc/</span>ppp/chap-secrets<br>xiaochunyong    pptpd   <span class="hljs-number">123456</span>  *<br></code></pre></td></tr></table></figure><h5 id="4-设置DNS"><a href="#4-设置DNS" class="headerlink" title="4. 设置DNS"></a>4. 设置DNS</h5><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs gradle"># vi <span class="hljs-regexp">/etc/</span>ppp/<span class="hljs-keyword">options</span><br>ms-dns <span class="hljs-number">8.8</span>.<span class="hljs-number">8.8</span><br>ms-dns <span class="hljs-number">8.8</span>.<span class="hljs-number">4.4</span><br></code></pre></td></tr></table></figure><h5 id="5-设置转发-amp-立即生效-amp-重启PPTP服务器"><a href="#5-设置转发-amp-立即生效-amp-重启PPTP服务器" class="headerlink" title="5. 设置转发 &amp; 立即生效 &amp; 重启PPTP服务器"></a>5. 设置转发 &amp; 立即生效 &amp; 重启PPTP服务器</h5><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs vala"><span class="hljs-meta"># vi /etc/sysctl.conf</span><br>net.ipv4.ip_forward=<span class="hljs-number">1</span><br><br><span class="hljs-meta"># sysctl -p</span><br><br><span class="hljs-meta"># /etc/init.d/pptpd restart</span><br></code></pre></td></tr></table></figure><h5 id="6-开启iptables转发"><a href="#6-开启iptables转发" class="headerlink" title="6. 开启iptables转发"></a>6. 开启iptables转发</h5><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs clean"># iptables -t nat -A POSTROUTING -s <span class="hljs-number">192.168</span><span class="hljs-number">.99</span><span class="hljs-number">.0</span>/<span class="hljs-number">24</span> -o eth1 -j MASQUERADE<br><br>### 注意(iptables的下面<span class="hljs-number">2</span>个选项如果错误,VPN客户端即使连接上PPTP服务器，也不能上网)<br>### -s <span class="hljs-number">192.168</span><span class="hljs-number">.99</span><span class="hljs-number">.0</span>/<span class="hljs-number">24</span> : 网段/子网掩码, 必须和步骤二设置的网段一样<br>### -o eth1            : 网卡<br></code></pre></td></tr></table></figure><h5 id="7-安装iptables"><a href="#7-安装iptables" class="headerlink" title="7. 安装iptables"></a>7. 安装iptables</h5><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vala"><span class="hljs-meta"># apt-get install iptables</span><br></code></pre></td></tr></table></figure><h5 id="8-将当前iptables的设置保存到指定文件-以便每次重启自动还原iptables设置"><a href="#8-将当前iptables的设置保存到指定文件-以便每次重启自动还原iptables设置" class="headerlink" title="8. 将当前iptables的设置保存到指定文件, 以便每次重启自动还原iptables设置"></a>8. 将当前iptables的设置保存到指定文件, 以便每次重启自动还原iptables设置</h5><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs gradle"># iptables-save &gt; <span class="hljs-regexp">/etc/i</span>ptables.pptp<br><br># vi <span class="hljs-regexp">/etc/</span>network<span class="hljs-regexp">/if-up.d/i</span>ptables<br>    #!<span class="hljs-regexp">/bin/</span>sh<br>    iptables-restore &lt; <span class="hljs-regexp">/etc/i</span>ptables.pptp<br><br># chmod +x <span class="hljs-regexp">/etc/</span>network<span class="hljs-regexp">/if-up.d/i</span>ptables<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>pptp</tag>
      
      <tag>vpn</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>brew 安装指定版本 zsh</title>
    <link href="/2014/09/30/brew/"/>
    <url>/2014/09/30/brew/</url>
    
    <content type="html"><![CDATA[<blockquote><p>重装系统后，使用brew install zsh一直不成功（当时提示安装的版本是5.0.6，sourceforge 超时，zsh官网404，用浏览器访问，发现确实是404，找了下原因，是因为zsh官网已经更新到5.0.7了，旧的版本已经移除）<br>在网上搜罗了点资料，加上自己的点尝试最终安装了5.0.7版本; 下面这条命令输出的是brew在本机的git本地版本库目录</p></blockquote><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lua">$ brew <span class="hljs-comment">--prefix</span><br></code></pre></td></tr></table></figure><blockquote><p>使用下面这条语句进入Formula目录，brew支持安装的每个软件都在该目录下有个rb文件，例如zsh，就有zsh.rb</p></blockquote><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs autohotkey">$ cd `brew --prefix`/Library/Formula<br>```    <br>    <br><br>&gt; 编辑zsh.rb文件<br>    <br></code></pre></td></tr></table></figure><p>$ vi zsh.rb</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs plain"><br>&gt; 可以看到文件中有2个地址，以及sha1摘要：<br><br></code></pre></td></tr></table></figure><p>url ‘<a href="https://downloads.sourceforge.net/project/zsh/zsh/5.0.6/zsh-5.0.6.tar.bz2&#39;">https://downloads.sourceforge.net/project/zsh/zsh/5.0.6/zsh-5.0.6.tar.bz2&#39;</a><br>mirror ‘<a href="http://www.zsh.org/pub/zsh-5.0.6.tar.bz2&#39;">http://www.zsh.org/pub/zsh-5.0.6.tar.bz2&#39;</a><br>sha1 ‘a626aa1923cc1bd4f8f2463e947a3f3cb340b0ea’</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs http"><br><br>&gt; 我们先从官网下载新版本的zsh-5.0.7.tar.bz2，再使用shasum获得文件的sha1值<br><br></code></pre></td></tr></table></figure><p>$ shasum zsh-5.0.7.tar.bz2</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs plain"><br>&gt; 修改zsh.rb<br><br></code></pre></td></tr></table></figure><p>url ‘<a href="https://downloads.sourceforge.net/project/zsh/zsh/5.0.7/zsh-5.0.7.tar.bz2&#39;">https://downloads.sourceforge.net/project/zsh/zsh/5.0.7/zsh-5.0.7.tar.bz2&#39;</a><br>mirror ‘<a href="http://www.zsh.org/pub/zsh-5.0.7.tar.bz2&#39;">http://www.zsh.org/pub/zsh-5.0.7.tar.bz2&#39;</a><br>sha1 ‘1500191d16af8a71aec4f719a92775a074682096’</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs plain">  <br>&gt; 在安装一次~<br><br></code></pre></td></tr></table></figure><p>$ brew install zsh</p><pre><code>&gt; 大功告成!</code></pre>]]></content>
    
    
    <categories>
      
      <category>macOS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>software</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vim 教程</title>
    <link href="/2014/07/19/vim/"/>
    <url>/2014/07/19/vim/</url>
    
    <content type="html"><![CDATA[<h3 id="1-Install-Vundle-–-管理插件的插件"><a href="#1-Install-Vundle-–-管理插件的插件" class="headerlink" title="1 Install Vundle – 管理插件的插件:"></a>1 Install <a href="https://github.com/gmarik/Vundle.vim">Vundle – 管理插件的插件</a>:</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">$ git clone https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/gmarik/</span>Vundle.vim.git ~<span class="hljs-regexp">/.vim/</span>bundle/Vundle.vim<br></code></pre></td></tr></table></figure><h3 id="2-Configure-Plugins"><a href="#2-Configure-Plugins" class="headerlink" title="2. Configure Plugins:"></a>2. Configure Plugins:</h3><p>Put this at the top of your <code>.vimrc</code> to use Vundle. Remove plugins you don’t need, they are for illustration purposes.</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">set</span> nocompatible              <span class="hljs-comment">&quot; be iMproved, required</span><br><span class="hljs-keyword">filetype</span> off                  <span class="hljs-comment">&quot; required</span><br><br><span class="hljs-comment">&quot; set the runtime path to include Vundle and initialize</span><br><span class="hljs-keyword">set</span> rtp+=~/.<span class="hljs-keyword">vim</span>/bundle/Vundle.<span class="hljs-keyword">vim</span><br><span class="hljs-keyword">call</span> vundle#begin()<br><span class="hljs-comment">&quot; alternatively, pass a path where Vundle should install plugins</span><br><span class="hljs-comment">&quot;call vundle#begin(&#x27;~/some/path/here&#x27;)</span><br><br><span class="hljs-comment">&quot; let Vundle manage Vundle, required</span><br>Plugin <span class="hljs-string">&#x27;gmarik/Vundle.vim&#x27;</span><br><br><span class="hljs-comment">&quot; The following are examples of different formats supported.</span><br><span class="hljs-comment">&quot; Keep Plugin commands between vundle#begin/end.</span><br><span class="hljs-comment">&quot; plugin on GitHub repo</span><br>Plugin <span class="hljs-string">&#x27;tpope/vim-fugitive&#x27;</span><br><span class="hljs-comment">&quot; plugin from http://vim-scripts.org/vim/scripts.html</span><br>Plugin <span class="hljs-string">&#x27;L9&#x27;</span><br><span class="hljs-comment">&quot; Git plugin not hosted on GitHub</span><br>Plugin <span class="hljs-string">&#x27;git://git.wincent.com/command-t.git&#x27;</span><br><span class="hljs-comment">&quot; git repos on your local machine (i.e. when working on your own plugin)</span><br>Plugin <span class="hljs-string">&#x27;file:///home/gmarik/path/to/plugin&#x27;</span><br><span class="hljs-comment">&quot; The sparkup vim script is in a subdirectory of this repo called vim.</span><br><span class="hljs-comment">&quot; Pass the path to set the runtimepath properly.</span><br>Plugin <span class="hljs-string">&#x27;rstacruz/sparkup&#x27;</span>, &#123;<span class="hljs-string">&#x27;rtp&#x27;</span>: <span class="hljs-string">&#x27;vim/&#x27;</span>&#125;<br><span class="hljs-comment">&quot; Avoid a name conflict with L9</span><br>Plugin <span class="hljs-string">&#x27;user/L9&#x27;</span>, &#123;<span class="hljs-string">&#x27;name&#x27;</span>: <span class="hljs-string">&#x27;newL9&#x27;</span>&#125;<br><br><span class="hljs-comment">&quot; All of your Plugins must be added before the following line</span><br><span class="hljs-keyword">call</span> vundle#end()            <span class="hljs-comment">&quot; required</span><br><span class="hljs-keyword">filetype</span> plugin <span class="hljs-built_in">indent</span> <span class="hljs-keyword">on</span>    <span class="hljs-comment">&quot; required</span><br><span class="hljs-comment">&quot; To ignore plugin indent changes, instead use:</span><br><span class="hljs-comment">&quot;filetype plugin on</span><br><span class="hljs-comment">&quot;</span><br><span class="hljs-comment">&quot; Brief help</span><br><span class="hljs-comment">&quot; :PluginList       - lists configured plugins</span><br><span class="hljs-comment">&quot; :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate</span><br><span class="hljs-comment">&quot; :PluginSearch foo - searches for foo; append `!` to refresh local cache</span><br><span class="hljs-comment">&quot; :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal</span><br><span class="hljs-comment">&quot;</span><br><span class="hljs-comment">&quot; see :h vundle for more details or wiki for FAQ</span><br><span class="hljs-comment">&quot; Put your non-Plugin stuff after this line</span><br></code></pre></td></tr></table></figure><h3 id="3-Install-Plugins"><a href="#3-Install-Plugins" class="headerlink" title="3. Install Plugins:"></a>3. Install Plugins:</h3><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs vim">Launch `<span class="hljs-keyword">vim</span>` <span class="hljs-built_in">and</span> run `:PluginInstall`<br><br>To install from <span class="hljs-keyword">command</span> <span class="hljs-built_in">line</span>: `<span class="hljs-keyword">vim</span> +PluginInstall +<span class="hljs-keyword">qall</span>`<br></code></pre></td></tr></table></figure><h5 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h5><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">* git:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/Lokaltog/</span>vim-powerline.git<br>* git:<span class="hljs-regexp">//gi</span>t.wincent.com/command-t.git<br>* git:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/scrooloose/</span>nerdtree.git<br></code></pre></td></tr></table></figure><h3 id="分屏"><a href="#分屏" class="headerlink" title="分屏"></a>分屏</h3><p>输入这样的命令后vi就会将当前的窗口平分为两个，并且在这两个窗口中显示的是同一篇文章。<br>如果你在其中的 一个窗口进行文编辑，那么另一个窗口也会同步的显示出你所做的工作。</p><h5 id="1-水平分屏"><a href="#1-水平分屏" class="headerlink" title="1. 水平分屏"></a>1. 水平分屏</h5><figure class="highlight fsharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs fsharp">* :split <span class="hljs-meta">[&lt;filename&gt;]</span><br>* :sp<span class="hljs-comment">// split 的简写</span><br></code></pre></td></tr></table></figure><h5 id="2-垂直分屏"><a href="#2-垂直分屏" class="headerlink" title="2. 垂直分屏"></a>2. 垂直分屏</h5><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs vim">* :<span class="hljs-keyword">vsplit</span><br>* :<span class="hljs-keyword">vs</span>// <span class="hljs-keyword">vsplit</span> 的简写<br></code></pre></td></tr></table></figure><h5 id="3-用分割形式新建文件"><a href="#3-用分割形式新建文件" class="headerlink" title="3. 用分割形式新建文件"></a>3. 用分割形式新建文件</h5><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs vim">* :<span class="hljs-keyword">new</span> 　　　　　　　用分割形式新建文件<br>* <span class="hljs-symbol">&lt;C&gt;</span>-<span class="hljs-keyword">w</span> <span class="hljs-symbol">&lt;C&gt;</span> +　　　　放大窗口<br>* <span class="hljs-symbol">&lt;C&gt;</span>-<span class="hljs-keyword">w</span> <span class="hljs-symbol">&lt;C&gt;</span> -　　　　缩小窗口<br></code></pre></td></tr></table></figure><h5 id="4-标签页tab"><a href="#4-标签页tab" class="headerlink" title="4. 标签页tab"></a>4. 标签页tab</h5><p>用标签页显示各个缓冲区，非常实用，好像只支持VIM7以上。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk">* :tabnew<span class="hljs-regexp">//</span> 打开一个新的标签页。<br>* :tabprevious<span class="hljs-regexp">//</span> 回到上一个标签页。<br>* :tabnext<span class="hljs-regexp">//</span> 到下一个标签页。<br>* :tabc n <span class="hljs-regexp">//</span> 关闭一个标签页 默认关闭当前，可以指定关闭第几个标签页 <br></code></pre></td></tr></table></figure><h3 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h3><p><a href="https://github.com/RobotJiang/myVimConfig/blob/master/.vimrc">RobotJiang的.vimrc配置</a></p>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>vim</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux 常用命令</title>
    <link href="/2014/07/01/shell/"/>
    <url>/2014/07/01/shell/</url>
    
    <content type="html"><![CDATA[<h2 id="查找文件内容"><a href="#查找文件内容" class="headerlink" title="查找文件内容"></a>查找文件内容</h2><p>find / -type f -name “*.log” | xargs grep “要查找的内容”</p><h3 id="1、查看统计当前目录下文件的个数"><a href="#1、查看统计当前目录下文件的个数" class="headerlink" title="1、查看统计当前目录下文件的个数"></a>1、查看统计当前目录下文件的个数</h3><pre><code>ls -l | grep &quot;^-&quot; | wc -l</code></pre><h3 id="2、查看统计当前目录下文件的个数，包括子目录里的。"><a href="#2、查看统计当前目录下文件的个数，包括子目录里的。" class="headerlink" title="2、查看统计当前目录下文件的个数，包括子目录里的。"></a>2、查看统计当前目录下文件的个数，包括子目录里的。</h3><pre><code>ls -lR| grep &quot;^-&quot; | wc -l</code></pre><h3 id="3、查看某目录下文件夹-目录-的个数，包括子目录里的。"><a href="#3、查看某目录下文件夹-目录-的个数，包括子目录里的。" class="headerlink" title="3、查看某目录下文件夹(目录)的个数，包括子目录里的。"></a>3、查看某目录下文件夹(目录)的个数，包括子目录里的。</h3><pre><code>ls -lR| grep &quot;^d&quot; | wc -l</code></pre><h2 id="apt-get"><a href="#apt-get" class="headerlink" title="apt-get"></a>apt-get</h2><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs gams"><span class="hljs-symbol">$</span> sudo apt-add-repository ppa:nginx/stable <span class="hljs-comment">// 新增源</span><br><span class="hljs-symbol">$</span> apt-get update --fix-missing <span class="hljs-comment">// 更新源</span><br><span class="hljs-symbol">$</span> apt-get autoremove <span class="hljs-comment">// 卸载不再需要的依赖程序</span><br><span class="hljs-symbol">$</span> apt-get -f install <span class="hljs-comment">// 使用 dpkg -i 安装软件 提示缺少依赖包时，执行</span><br></code></pre></td></tr></table></figure><h2 id="top"><a href="#top" class="headerlink" title="top"></a>top</h2><ul><li>Linux服务器的16个监控命令 <a href="http://www.51cto.com/php/viewart.php?ID=334314">http://www.51cto.com/php/viewart.php?ID=334314</a></li><li>Linux top VIRT RES SHR SWAP DATA内存参数详解 <a href="http://blog.csdn.net/u011547375/article/details/9851455">http://blog.csdn.net/u011547375/article/details/9851455</a></li><li>linux TOP命令及参数解析（常用） <a href="http://justdo2008.iteye.com/blog/2193868">http://justdo2008.iteye.com/blog/2193868</a></li><li>linux 下查看机器是cpu是几核的 <a href="http://www.cnblogs.com/xd502djj/archive/2011/02/28/1967350.html">http://www.cnblogs.com/xd502djj/archive/2011/02/28/1967350.html</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>shell</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>zsh</title>
    <link href="/2014/06/28/zsh/"/>
    <url>/2014/06/28/zsh/</url>
    
    <content type="html"><![CDATA[<h3 id="安装-zsh"><a href="#安装-zsh" class="headerlink" title="安装 zsh"></a>安装 zsh</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span> ubuntu<br>apt-get install zsh<br><span class="hljs-regexp">//</span> macOS<br>brew install zsh<br></code></pre></td></tr></table></figure><h3 id="安装-oh-my-zsh"><a href="#安装-oh-my-zsh" class="headerlink" title="安装 oh-my-zsh"></a>安装 oh-my-zsh</h3><p>open link <a href="https://ohmyz.sh">ohmyz.sh</a> will see:</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs llvm">sh -<span class="hljs-keyword">c</span> <span class="hljs-string">&quot;$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&quot;</span><br></code></pre></td></tr></table></figure><h3 id="Plugins"><a href="#Plugins" class="headerlink" title="Plugins"></a>Plugins</h3><ol><li><p><a href="https://github.com/zsh-users/zsh-autosuggestions">zsh-autosuggestions</a> - 命令行命令键入时的历史命令建议插件</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">git clone https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/zsh-users/</span>zsh-autosuggestions <span class="hljs-variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span><span class="hljs-regexp">/plugins/</span>zsh-autosuggestions<br></code></pre></td></tr></table></figure></li><li><p><a href="https://github.com/zsh-users/zsh-syntax-highlighting">zsh-syntax-highlighting</a><br>命令行语法高亮插件</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">git clone https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/zsh-users/</span>zsh-syntax-highlighting.git <span class="hljs-variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span><span class="hljs-regexp">/plugins/</span>zsh-syntax-highlighting<br></code></pre></td></tr></table></figure></li><li><p><a href="https://github.com/wting/autojump">autojump</a> - a faster way to navigate your filesystem</p></li></ol><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span> macOS<br>brew install autojump<br><br><span class="hljs-regexp">//</span> manual install<br>git clone git:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/joelthelion/</span>autojump.git<br>cd autojump<br>./install.py or uninstall.py<br></code></pre></td></tr></table></figure><h5 id="最终配置"><a href="#最终配置" class="headerlink" title="最终配置"></a>最终配置</h5><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs vala"><span class="hljs-meta"># autojump 功能弱，fasd 功能强，但是没 autojump 实用</span><br><span class="hljs-meta"># 值得注意的是，根据官方文档，zsh-syntax-highlighting 插件需放在最后</span><br>plugins=(git z extract zsh-autosuggestions zsh-syntax-highlighting)<br></code></pre></td></tr></table></figure><h3 id="Themes"><a href="#Themes" class="headerlink" title="Themes:"></a>Themes:</h3><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs nsis">echo -n <span class="hljs-string">&quot;please input computer name:&quot;</span><br>read computerName<br>echo<br>echo <span class="hljs-string">&#x27;local ret_status=&quot;%&#123;<span class="hljs-variable">$fg_bold</span>[red]%&#125;&#x27;</span><span class="hljs-variable">$computerName</span><span class="hljs-string">&#x27;<span class="hljs-variable">$s</span> %(?:%&#123;<span class="hljs-variable">$fg_bold</span>[green]%&#125;➜ :%&#123;<span class="hljs-variable">$fg_bold</span>[red]%&#125;➜ %s)&quot;&#x27;</span> &gt; ~/.oh-my-zsh/themes/robbyrussell.zsh-theme<br>echo <span class="hljs-string">&#x27;PROMPT=&#x27;</span><span class="hljs-string">&quot;&#x27;&quot;</span><span class="hljs-string">&#x27;<span class="hljs-variable">$&#123;ret_status&#125;</span>%&#123;<span class="hljs-variable">$fg_bold</span>[green]%&#125;%p %&#123;<span class="hljs-variable">$fg</span>[cyan]%&#125;%d %&#123;<span class="hljs-variable">$fg_bold</span>[blue]%&#125;<span class="hljs-variable">$(git_prompt_info)</span>%&#123;<span class="hljs-variable">$fg_bold</span>[blue]%&#125; % %&#123;<span class="hljs-variable">$reset_color</span>%&#125;&#x27;</span><span class="hljs-string">&quot;&#x27;&quot;</span> &gt;&gt; ~/.oh-my-zsh/themes/robbyrussell.zsh-theme<br>echo <span class="hljs-string">&#x27;&#x27;</span> &gt;&gt; ~/.oh-my-zsh/themes/robbyrussell.zsh-theme<br>echo <span class="hljs-string">&#x27;ZSH_THEME_GIT_PROMPT_PREFIX=&quot;git:(%&#123;<span class="hljs-variable">$fg</span>[red]%&#125;&quot;&#x27;</span> &gt;&gt; ~/.oh-my-zsh/themes/robbyrussell.zsh-theme<br>echo <span class="hljs-string">&#x27;ZSH_THEME_GIT_PROMPT_SUFFIX=&quot;%&#123;<span class="hljs-variable">$reset_color</span>%&#125;&quot;&#x27;</span> &gt;&gt; ~/.oh-my-zsh/themes/robbyrussell.zsh-theme<br>echo <span class="hljs-string">&#x27;ZSH_THEME_GIT_PROMPT_DIRTY=&quot;%&#123;<span class="hljs-variable">$fg</span>[blue]%&#125;) %&#123;<span class="hljs-variable">$fg</span>[yellow]%&#125;✗%&#123;<span class="hljs-variable">$reset_color</span>%&#125;&quot;&#x27;</span> &gt;&gt; ~/.oh-my-zsh/themes/robbyrussell.zsh-theme<br>echo <span class="hljs-string">&#x27;ZSH_THEME_GIT_PROMPT_CLEAN=&quot;%&#123;<span class="hljs-variable">$fg</span>[blue]%&#125;)&quot;&#x27;</span> &gt;&gt; ~/.oh-my-zsh/themes/robbyrussell.zsh-theme<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>shell</tag>
      
      <tag>zsh</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux 系统个性化</title>
    <link href="/2014/06/01/linux-custom/"/>
    <url>/2014/06/01/linux-custom/</url>
    
    <content type="html"><![CDATA[<p>系统配置文件为/etc/inputrc</p><p>修改个人配置文件:</p><pre><code>echo &quot;set completion-ignore-case on&quot; &gt;&gt; ~/.inputrc</code></pre><p>重启终端</p><p>启动Linux 控制台后, 可以看到Shell提示符<br>类似 <code>[ely@localhost ~]$</code><br> <code>#</code> 表示超级用户(root用户) <code>$</code> 表示超级用户(普通用户)<br>常用命令</p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs vala"><span class="hljs-meta"># hostname // 显示主机名</span><br><span class="hljs-meta"># hostname &lt;myhostname&gt; // 修改主机名, 重启失效</span><br><span class="hljs-meta"># vi /etc/hostname // 修改主机名(ubuntu), 重启不失效(不同发行版可能有差别)</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ubuntu 系统初始化</title>
    <link href="/2014/06/01/linux-init/"/>
    <url>/2014/06/01/linux-init/</url>
    
    <content type="html"><![CDATA[<h2 id="系统初始化"><a href="#系统初始化" class="headerlink" title="系统初始化"></a>系统初始化</h2><h4 id="Terminal-Tab键忽略大小写自动补全"><a href="#Terminal-Tab键忽略大小写自动补全" class="headerlink" title="Terminal Tab键忽略大小写自动补全"></a>Terminal Tab键忽略大小写自动补全</h4><p>系统配置文件为/etc/inputrc<br>个人配置文件为~/.inputrc</p><p>修改个人配置文件后, 重启终端:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">echo &quot;<span class="hljs-keyword">set</span> completion-<span class="hljs-keyword">ignore</span>-<span class="hljs-keyword">case</span> <span class="hljs-keyword">on</span><span class="hljs-string">&quot; &gt;&gt; ~/.inputrc</span><br></code></pre></td></tr></table></figure><h3 id="1-更新apt源"><a href="#1-更新apt源" class="headerlink" title="1. 更新apt源"></a>1. 更新apt源</h3><pre><code>$ apt-get update</code></pre><h3 id="2-安装add-apt-repository"><a href="#2-安装add-apt-repository" class="headerlink" title="2. 安装add-apt-repository"></a>2. 安装add-apt-repository</h3><pre><code>$ apt-get install software-properties-common python-software-properties# 可能会提示安装失败,提示执行apt-get update:apt-get update --fix-missingapt-get install python-software-properties</code></pre><h3 id="3-安装zip-unzip"><a href="#3-安装zip-unzip" class="headerlink" title="3. 安装zip unzip"></a>3. 安装zip unzip</h3><pre><code>$ apt-get install zip unzip</code></pre><h3 id="4-设置系统语言"><a href="#4-设置系统语言" class="headerlink" title="4. 设置系统语言"></a>4. 设置系统语言</h3><pre><code>$ vi /var/lib/locales/supported.d/local  zh_CN.UTF-8 UTF-8$ locale-gen</code></pre><h6 id="配置-ssh-免登陆访问"><a href="#配置-ssh-免登陆访问" class="headerlink" title="配置 ssh 免登陆访问"></a>配置 ssh 免登陆访问</h6><pre><code>$ vi .ssh/authorized_keysssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDVR3kIcLZHBntZgMkpiLyl11NOglWUc95UvjWfiPmjFFMJbNAQtaXNqdNKj4R4gC3heVyvEWmaYoVxhzwiwNV2SWdRUUQzviA5MmxgLkoNTXldK50j3b/zK0mxnRl3PMiBl21XKzz2psu4t4zkW5CM0F3aRminwRANdUryB5c7K5jxVLidvdcokZb+eTViCe+wUmwHI2xwjjzTSnJ8zMFrPJuVe9+0ZFQX8/VW1rtbv8TK4+GbjrAnolSp1he7Ok6bI5B8aIu5Lb9U17ZU9xNu4RuTH3/sr8v9XTnCqvYD69JXHxAc7RGO4seLQIMzthxTxmGtTlQBGUr9/sop/gsx ely.xiao@qq.com</code></pre><h3 id="5-安装-Git"><a href="#5-安装-Git" class="headerlink" title="5. 安装 Git"></a>5. 安装 Git</h3><pre><code>$ add-apt-repository ppa:git-core/ppa$ apt-get update$ apt-get install git</code></pre><h3 id="6-zsh"><a href="#6-zsh" class="headerlink" title="6. zsh"></a>6. zsh</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment"># 安装zsh</span><br>$ apt-get install zsh<br><br><span class="hljs-comment"># 安装配置 oh-my-zsh</span><br>$ git clone git:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/robbyrussell/</span>oh-my-zsh.git ~/.oh-my-zsh<br>$ cp ~<span class="hljs-regexp">/.oh-my-zsh/</span>templates<span class="hljs-regexp">/zshrc.zsh-template ~/</span>.zshrc<br>$ chsh -s <span class="hljs-regexp">/bin/</span>zsh<br><br><span class="hljs-comment"># 安装配置 oh-my-zsh 的插件 - autojump</span><br>$ git clone git:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/joelthelion/</span>autojump.git &amp;&amp; cd autojump &amp;&amp; ./install.py<br><br>$ vi ~/.zshrc<br>    [[ -s <span class="hljs-regexp">/root/</span>.autojump<span class="hljs-regexp">/etc/</span>profile.d<span class="hljs-regexp">/autojump.sh ]] &amp;&amp; source /</span>root<span class="hljs-regexp">/.autojump/</span>etc<span class="hljs-regexp">/profile.d/</span>autojump.sh<br>    autoload -U compinit &amp;&amp; compinit -u<br><br>$ source ~/.zshrc<br><br><span class="hljs-comment"># 配置zsh主题</span><br>$ 参见 robbyrussell.zsh-theme.server<br>$ vi ~<span class="hljs-regexp">/.oh-my-zsh/</span>themes/robbyrussell.zsh-theme<br></code></pre></td></tr></table></figure><h3 id="9-nginx"><a href="#9-nginx" class="headerlink" title="9.nginx"></a>9.nginx</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment"># 安装</span><br>apt-add-repository ppa:nginx/stable<br>apt-get update<br>apt-get install nginx<br><br><span class="hljs-regexp">//</span> 卸载<br><span class="hljs-comment"># apt-get remove nginx  // 删除nginx，保留配置文件</span><br><span class="hljs-comment"># rm -rf /etc/nginx     // 手动删除配置文件</span><br><span class="hljs-comment"># apt-get purge nginx   // 删除nginx，连带配置文件</span><br><br><span class="hljs-comment"># 配置nginx:</span><br>$ vi <span class="hljs-regexp">/etc/</span>nginx/nginx.conf<br>include <span class="hljs-regexp">/etc/</span>nginx<span class="hljs-regexp">/sites-enabled/</span>*; (将这行注释掉)<br><br>$ vi <span class="hljs-regexp">/etc/</span>nginx<span class="hljs-regexp">/conf.d/</span>ely.conf<br>server &#123;<br>    listen <span class="hljs-number">80</span>;<br>    server_name www.ely.me;<br><br>    location / &#123;<br>        proxy_pass http:<span class="hljs-regexp">//</span><span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>:<span class="hljs-number">8080</span>/;<br>    &#125;<br>&#125;<br><br>$ service nginx restart<br></code></pre></td></tr></table></figure><h3 id="11-java"><a href="#11-java" class="headerlink" title="11. java"></a>11. java</h3><pre><code>$ add-apt-repository ppa:webupd8team/java$ apt-get update$ apt-get install oracle-java7-installer$ apt-get install oracle-java8-installer</code></pre><h3 id="12-nodejs"><a href="#12-nodejs" class="headerlink" title="12. nodejs"></a>12. nodejs</h3><pre><code>$ add-apt-repository ppa:chris-lea/node.js &amp;&amp; apt-get update &amp;&amp; apt-get install nodejs</code></pre><h3 id="安装-PHP"><a href="#安装-PHP" class="headerlink" title="安装 PHP"></a>安装 PHP</h3><pre><code>$ apt-get install php5-cgi php5-fpm php5-mysql$ vi /etc/php5/fpm/pool.d/www.conf     # listen = /var/run/php5-fpm.sock    listen = 127.0.0.1:9000</code></pre><h3 id="测试Nginx-amp-PHP-搭建是否正常"><a href="#测试Nginx-amp-PHP-搭建是否正常" class="headerlink" title="测试Nginx &amp; PHP 搭建是否正常"></a>测试Nginx &amp; PHP 搭建是否正常</h3><pre><code>$ mkdir -p /var/www/wordpress &amp;&amp; vi /var/www/wordpress/index.php  &lt;? phpinfo();?&gt;service php5-fpm restartservice nginx restart</code></pre><h3 id="nginx-conf-for-wordpress"><a href="#nginx-conf-for-wordpress" class="headerlink" title="nginx.conf for wordpress"></a>nginx.conf for wordpress</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs shell">server &#123;<br>    listen 80;<br><br>    root /var/www/wordpress;<br>    index index.html index.htm index.php;<br>    # Make site accessible from http://localhost/<br>    server_name blog.ely.me;<br><br>    location / &#123;<br>            # First attempt to serve request as file, then<br>            # as directory, then fall back to index.html<br>            try_files $uri $uri/ /index.html;<br>            # Uncomment to enable naxsi on this location<br>            # include /etc/nginx/naxsi.rules<br>            if (-f $request_filename/index.html)&#123;<br>                    rewrite (.*) $1/index.html break;<br>            &#125;<br><br>            if (-f $request_filename/index.php)&#123;<br>                    rewrite (.*) $1/index.php;<br>            &#125;<br><br>            if (!-f $request_filename)&#123;<br>                    rewrite (.*) /index.php;<br>            &#125;<br>    &#125;<br><br>    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000<br>    #<br>    location ~ \.php$ &#123;<br>            fastcgi_split_path_info ^(.+\.php)(/.+)$;<br>    #       # NOTE: You should have &quot;cgi.fix_pathinfo = 0;&quot; in php.ini<br>    #<br>    #       # With php5-cgi alone:<br>            fastcgi_pass 127.0.0.1:9000;<br>    #       # With php5-fpm:<br>    #       fastcgi_pass unix:/var/run/php5-fpm.sock;<br>            fastcgi_index index.php;<br>            include fastcgi_params;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="16-配置环境变量"><a href="#16-配置环境变量" class="headerlink" title="16. 配置环境变量"></a>16. 配置环境变量</h3><pre><code>$ vi ~/.zshrcALL_IP=$(ifconfig | grep inet | grep -v 127.0.0.1 | grep -v inet6 | awk &apos;&#123;print $2&#125;&apos; | tr -d &quot;addr:&quot;)cat logoecho &quot;公网：$ALL_IP                                                   内网：xxx.xxx.xxx.xxx &quot;echo &quot;-------------------------------------------------------------------------------------------&quot;alias -s java=vialias -s go=vialias -s html=vialias -s js=vialias -s css=vialias -s gz=&apos;tar -xzvf&apos;alias -s tgz=&apos;tar -xzvf&apos;alias -s bz2=&apos;tar -xjvf&apos;alias -s zip=&apos;unzip&apos;alias -s rar=&apos;unrar x&apos;# Javaexport JAVA_HOME=/usr/lib/jvm/java-7-oracleexport CLASSPATH=.:$JAVA_HOME/lib:$JRE_HOME/libexport PATH=$JAVA_HOME/bin:$PATH# Gradleexport GRADLE_HOME=/root/sdk/gradle-2.3export PATH=$GRADLE_HOME/bin:$PATH# Tomcatexport TOMCAT_HOME=/root/sdk/apache-tomcat-6.0.43</code></pre><h3 id="19-服务器安全设置"><a href="#19-服务器安全设置" class="headerlink" title="19. 服务器安全设置"></a>19. 服务器安全设置</h3><h5 id="19-1-SSH-默认端口更改-修改完端口后，客户端需要配置ssh的config文件，指明端口"><a href="#19-1-SSH-默认端口更改-修改完端口后，客户端需要配置ssh的config文件，指明端口" class="headerlink" title="19.1 SSH 默认端口更改(修改完端口后，客户端需要配置ssh的config文件，指明端口)"></a>19.1 SSH 默认端口更改(修改完端口后，客户端需要配置ssh的config文件，指明端口)</h5><pre><code>$ vi /etc/ssh/sshd_configPort XXXX (将端口修改为自己想要的)$ service ssh restart</code></pre><h5 id="19-2-详情http-coralzd-blog-51cto-com"><a href="#19-2-详情http-coralzd-blog-51cto-com" class="headerlink" title="19.2 详情http://coralzd.blog.51cto.com/"></a>19.2 详情<a href="http://coralzd.blog.51cto.com/">http://coralzd.blog.51cto.com/</a></h5><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment">#!/bin/sh</span><br><span class="hljs-comment"># desc: setup linux system security</span><br><span class="hljs-comment"># author:coralzd</span><br><span class="hljs-comment"># powered by www.freebsdsystem.org</span><br><span class="hljs-comment"># version 0.1.2 written by 2011.05.03</span><br><span class="hljs-comment">#account setup</span><br><br>passwd -l xfs<br>passwd -l news<br>passwd -l nscd<br>passwd -l dbus<br>passwd -l vcsa<br>passwd -l games<br>passwd -l nobody<br>passwd -l avahi<br>passwd -l haldaemon<br>passwd -l gopher<br>passwd -l ftp<br>passwd -l mailnull<br>passwd -l pcap<br>passwd -l mail<br>passwd -l shutdown<br>passwd -l halt<br>passwd -l uucp<br>passwd -l operator<br>passwd -l sync<br>passwd -l adm<br>passwd -l lp<br><br><span class="hljs-comment"># chattr /etc/passwd /etc/shadow</span><br>chattr +i <span class="hljs-regexp">/etc/</span>passwd<br>chattr +i <span class="hljs-regexp">/etc/</span>shadow<br>chattr +i <span class="hljs-regexp">/etc/g</span>roup<br>chattr +i <span class="hljs-regexp">/etc/g</span>shadow<br><span class="hljs-comment"># add continue input failure 3 ,passwd unlock time 5 minite</span><br>sed -i <span class="hljs-string">&#x27;s#auth        required      pam_env.so#auth        required      pam_env.so\nauth       required       pam_tally.so  onerr=fail deny=3 unlock_time=300\nauth           required     /lib/security/$ISA/pam_tally.so onerr=fail deny=3 unlock_time=300#&#x27;</span> <span class="hljs-regexp">/etc/</span>pam.d/system-auth<br><span class="hljs-comment"># system timeout 5 minite auto logout</span><br>echo <span class="hljs-string">&quot;TMOUT=300&quot;</span> &gt;&gt;<span class="hljs-regexp">/etc/</span>profile<br><br><span class="hljs-comment"># will system save history command list to 10</span><br>sed -i <span class="hljs-string">&quot;s/HISTSIZE=1000/HISTSIZE=10/&quot;</span> <span class="hljs-regexp">/etc/</span>profile<br><br><span class="hljs-comment"># enable /etc/profile go!</span><br>source <span class="hljs-regexp">/etc/</span>profile<br><br><span class="hljs-comment"># add syncookie enable /etc/sysctl.conf</span><br>echo <span class="hljs-string">&quot;net.ipv4.tcp_syncookies=1&quot;</span> &gt;&gt; <span class="hljs-regexp">/etc/</span>sysctl.conf<br><br>sysctl -p <span class="hljs-comment"># exec sysctl.conf enable</span><br><span class="hljs-comment"># optimizer sshd_config</span><br><br>sed -i <span class="hljs-string">&quot;s/#MaxAuthTries 6/MaxAuthTries 6/&quot;</span> <span class="hljs-regexp">/etc/</span>ssh/sshd_config<br>sed -i  <span class="hljs-string">&quot;s/#UseDNS yes/UseDNS no/&quot;</span> <span class="hljs-regexp">/etc/</span>ssh/sshd_config<br><br><span class="hljs-comment"># limit chmod important commands</span><br>chmod <span class="hljs-number">700</span> <span class="hljs-regexp">/bin/</span>ping<br>chmod <span class="hljs-number">700</span> <span class="hljs-regexp">/usr/</span>bin/finger<br>chmod <span class="hljs-number">700</span> <span class="hljs-regexp">/usr/</span>bin/who<br>chmod <span class="hljs-number">700</span> <span class="hljs-regexp">/usr/</span>bin/w<br>chmod <span class="hljs-number">700</span> <span class="hljs-regexp">/usr/</span>bin/locate<br>chmod <span class="hljs-number">700</span> <span class="hljs-regexp">/usr/</span>bin/whereis<br>chmod <span class="hljs-number">700</span> <span class="hljs-regexp">/sbin/i</span>fconfig<br>chmod <span class="hljs-number">700</span> <span class="hljs-regexp">/usr/</span>bin/pico<br>chmod <span class="hljs-number">700</span> <span class="hljs-regexp">/bin/</span>vi<br>chmod <span class="hljs-number">700</span> <span class="hljs-regexp">/usr/</span>bin/which<br>chmod <span class="hljs-number">700</span> <span class="hljs-regexp">/usr/</span>bin/gcc<br>chmod <span class="hljs-number">700</span> <span class="hljs-regexp">/usr/</span>bin/make<br>chmod <span class="hljs-number">700</span> <span class="hljs-regexp">/bin/</span>rpm<br><br><span class="hljs-comment"># history security</span><br><br>chattr +a <span class="hljs-regexp">/root/</span>.bash_history<br>chattr +i <span class="hljs-regexp">/root/</span>.bash_history<br><br><span class="hljs-comment"># write important command md5</span><br>    cat &gt; list &lt;&lt; <span class="hljs-string">&quot;EOF&quot;</span> &amp;&amp;<br>    <span class="hljs-regexp">/bin/</span>ping<br>    <span class="hljs-regexp">/bin/</span>finger<br>    <span class="hljs-regexp">/usr/</span>bin/who<br>    <span class="hljs-regexp">/usr/</span>bin/w<br>    <span class="hljs-regexp">/usr/</span>bin/locate<br>    <span class="hljs-regexp">/usr/</span>bin/whereis<br>    <span class="hljs-regexp">/sbin/i</span>fconfig<br>    <span class="hljs-regexp">/bin/</span>pico<br>    <span class="hljs-regexp">/bin/</span>vi<br>    <span class="hljs-regexp">/usr/</span>bin/vim<br>    <span class="hljs-regexp">/usr/</span>bin/which<br>    <span class="hljs-regexp">/usr/</span>bin/gcc<br>    <span class="hljs-regexp">/usr/</span>bin/make<br>    <span class="hljs-regexp">/bin/</span>rpm<br>    EOF<br><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> `cat list`<br>    <span class="hljs-keyword">do</span><br>       <span class="hljs-keyword">if</span> [ ! -x <span class="hljs-variable">$i</span> ];then<br>       echo <span class="hljs-string">&quot;$i not found,no md5sum!&quot;</span><br>      <span class="hljs-keyword">else</span><br>       md5sum <span class="hljs-variable">$i</span> &gt;&gt; <span class="hljs-regexp">/var/</span>log/`hostname`.log<br>      fi<br>    done<br>    rm -f list<br><br></code></pre></td></tr></table></figure><h2 id="Error"><a href="#Error" class="headerlink" title="Error"></a>Error</h2><ol><li>如果提示 <code>The program ‘add-apt-repository’ is currently not installed. You can install it by typing: apt-get install python-software-properties</code> 执行: <figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs maxima">apt-<span class="hljs-built_in">get</span> install software-<span class="hljs-built_in">properties</span>-common python-software-<span class="hljs-built_in">properties</span><br></code></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>linux</tag>
      
      <tag>ubuntu</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Git 快速入门</title>
    <link href="/2014/03/31/git-quick-start/"/>
    <url>/2014/03/31/git-quick-start/</url>
    
    <content type="html"><![CDATA[<blockquote><p>Updated by 2019-08-21 15:51</p></blockquote><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs smali">// Ubuntu<br>$<span class="hljs-built_in"> add-apt-repository </span>ppa:git-core/ppa<br>$ apt-get update<br>$ apt-get install git<br><br>// macOS<br>$ brew install git<br></code></pre></td></tr></table></figure><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><h3 id="回收站-stash"><a href="#回收站-stash" class="headerlink" title="回收站(stash)"></a>回收站(stash)</h3><blockquote><p>我是觉得停像回收站的,其实大家每天都有用到.   如果你已经修改了某几个文件(这几个文件已经被git管理了)  这时候你要执行git pull,  图形客户端,可能会提示你要stash<br>    git stash 命令会将你所做的修改,暂存区的内容 全部扔到stash 区, 把你的工作区和暂存区还原到上一次push完后的样子,当你pull完成后, git stash pop又可以将你<br>    之前的修改还     原到工作区和暂存区 </p></blockquote><h3 id="工作区-workspace"><a href="#工作区-workspace" class="headerlink" title="工作区(workspace)"></a>工作区(workspace)</h3><blockquote><p>我们编写代码的地方</p></blockquote><h3 id="暂存区-index"><a href="#暂存区-index" class="headerlink" title="暂存区(index)"></a>暂存区(index)</h3><blockquote><p>文件要提交到本地版本库,就必须先添加到暂存区,也可以把暂存区当做一个提交列表</p></blockquote><h3 id="本地版本库-local-repository"><a href="#本地版本库-local-repository" class="headerlink" title="本地版本库(local repository)"></a>本地版本库(local repository)</h3><h3 id="远程版本库-remote-repository"><a href="#远程版本库-remote-repository" class="headerlink" title="远程版本库(remote repository)"></a>远程版本库(remote repository)</h3><blockquote><p>origin : origin 是 remote 的一个短名称,在执行 git remote add origin <a href="mailto:git@github.com">git@github.com</a>:xxxx/xx.git<br>    master : 主分支 与我们自己创建的分支没有什么不同,只是约定俗称的把它当主分支而已.<br>    HEAD : 永远指向当前分支,其实是  .git/HEAD文件<br>    .gitignore : 大家都不希望被git管理的文件可以写在这个文件里面<br>    .git/info/exclude : “我”不希望被git管理的文件可以写在这个文件里面</p></blockquote><h2 id="Git-常用操作"><a href="#Git-常用操作" class="headerlink" title="Git 常用操作"></a>Git 常用操作</h2><h6 id="discard-撤销已经修改的文件"><a href="#discard-撤销已经修改的文件" class="headerlink" title="discard 撤销已经修改的文件"></a>discard 撤销已经修改的文件</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> git checkout -- &lt;file&gt;              <span class="hljs-comment"># 撤消指定的未暂存文件的修改内容</span></span><br><span class="hljs-meta">$</span><span class="bash"> git checkout HEAD &lt;file&gt;            <span class="hljs-comment"># 撤消指定的未提交文件的修改内容</span></span><br><span class="hljs-meta">$</span><span class="bash"> git reset --hard HEAD             <span class="hljs-comment"># 撤消工作目录中所有未提交文件的修改内容</span></span><br></code></pre></td></tr></table></figure><h6 id="stage"><a href="#stage" class="headerlink" title="stage"></a>stage</h6><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile">$ git <span class="hljs-keyword">add</span><span class="bash"> .</span><br>$ git <span class="hljs-keyword">add</span><span class="bash"> *</span><br>$ git <span class="hljs-keyword">add</span><span class="bash"> -A</span><br>$ git <span class="hljs-keyword">add</span><span class="bash"> &lt;file/dir&gt;</span><br></code></pre></td></tr></table></figure><h6 id="unstage"><a href="#unstage" class="headerlink" title="unstage"></a>unstage</h6><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">$ git <span class="hljs-keyword">reset</span> <span class="hljs-keyword">HEAD</span> &lt;<span class="hljs-keyword">file</span>&gt;...<br></code></pre></td></tr></table></figure><h6 id="commit"><a href="#commit" class="headerlink" title="commit"></a>commit</h6><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs elixir"><span class="hljs-variable">$ </span>git commit -m <span class="hljs-string">&quot;comment&quot;</span><br></code></pre></td></tr></table></figure><h6 id="stage-amp-commit"><a href="#stage-amp-commit" class="headerlink" title="stage &amp; commit"></a>stage &amp; commit</h6><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">$ git <span class="hljs-keyword">commit</span> -a -m &quot;comment&quot;<br></code></pre></td></tr></table></figure><h6 id="amend-commit-修正commit"><a href="#amend-commit-修正commit" class="headerlink" title="amend commit (修正commit)"></a>amend commit (修正commit)</h6><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">$ git commit <span class="hljs-params">--amend</span> -m <span class="hljs-string">&quot;new commit message&quot;</span><br></code></pre></td></tr></table></figure><h6 id="rollback-commit"><a href="#rollback-commit" class="headerlink" title="rollback commit"></a>rollback commit</h6><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql">$ git <span class="hljs-keyword">reset</span> <span class="hljs-comment">--soft HEAD^                # 回到最新的提交之前,文件将回到暂存区</span><br><br>$ git push origin <span class="hljs-keyword">master</span>                <span class="hljs-comment"># 上传代码到远程版本库</span><br></code></pre></td></tr></table></figure><h6 id="rollback-push-还没测试"><a href="#rollback-push-还没测试" class="headerlink" title="rollback push (还没测试)"></a>rollback push (还没测试)</h6><p>今天因为某些尚不明了的问题导致，博客的Git pages始终构建失败，于是想在远程版本库中删除前几次提交。在该网页上找到了解决方案：</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">$ git reset <span class="hljs-params">--hard</span> &lt;commit id&gt;    <span class="hljs-comment"># 本地回退到指定commit id, --hard 抛弃当前工作区的修改, --soft 保留当前工作区的修改 </span><br>$ git push <span class="hljs-params">--force</span> <span class="hljs-comment"># 强制提交到远程版本库，覆盖提交记录</span><br></code></pre></td></tr></table></figure><h6 id="delete-untracked-files"><a href="#delete-untracked-files" class="headerlink" title="delete untracked files"></a>delete untracked files</h6><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-variable">$</span> git clean <span class="hljs-operator">-f</span><br></code></pre></td></tr></table></figure><h6 id="delete-untracked-files-and-dirs"><a href="#delete-untracked-files-and-dirs" class="headerlink" title="delete untracked files and dirs"></a>delete untracked files and dirs</h6><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs clean">$ git clean -fd<br>``` <br>###### 连 gitignore 的untrack 文件/目录也一起删掉 （慎用，一般这个是用来删掉编译出来的 .o之类的文件用的）<br></code></pre></td></tr></table></figure><p>$ git clean -xfd</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs clean">###### 在用上述 git clean 前，墙裂建议加上 -n 参数来先看看会删掉哪些文件，防止重要文件被误删<br></code></pre></td></tr></table></figure><p>$ git clean -nxfd<br>$ git clean -nf<br>$ git clean -nfd</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs clean">### 其它操作<br></code></pre></td></tr></table></figure><p>$ git status<br>$ git status -s<br>$ git diff              # 查看变更内容 工作区与暂存区比较<br>$ git diff HEAD             # 查看变更内容 工作区与本地版本库比较<br>$ git diff –cached             # 查看变更内容 暂存区与本地版本库比较<br>$ git mv <old> <new>            # 文件改名<br>$ git rm <file>               # 删除文件<br>$ git rm –cached <file>          # 停止跟踪文件但不删除</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs"><br><br>### Tag &amp; Branch<br>###### 标签<br></code></pre></td></tr></table></figure><p>$ git tag           # 列出所有本地标签<br>$ git tag <tagname>           # 基于最新提交创建标签<br>$ git tag -d <tagname>            # 删除标签<br>$ git push –tags           # 上传所有标签<br> <figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs clean">###### 分支<br></code></pre></td></tr></table></figure></p><h1 id="显示所有本地分支"><a href="#显示所有本地分支" class="headerlink" title="显示所有本地分支"></a>显示所有本地分支</h1><p>$ git branch</p><h1 id="显示所有远程分支"><a href="#显示所有远程分支" class="headerlink" title="显示所有远程分支"></a>显示所有远程分支</h1><p>$ git branch -r         </p><h1 id="显示所有分支"><a href="#显示所有分支" class="headerlink" title="显示所有分支"></a>显示所有分支</h1><p>$ git branch -a         </p><h1 id="基于最新提交创建新分支"><a href="#基于最新提交创建新分支" class="headerlink" title="基于最新提交创建新分支"></a>基于最新提交创建新分支</h1><p>$ git branch <new-branch>        </p><h1 id="基于当前分支创建新分支-并切换到新分支"><a href="#基于当前分支创建新分支-并切换到新分支" class="headerlink" title="基于当前分支创建新分支, 并切换到新分支"></a>基于当前分支创建新分支, 并切换到新分支</h1><p>$ git checkout -b <new-branch> </p><h1 id="基于指定提交创建新分支-并切换到新分支"><a href="#基于指定提交创建新分支-并切换到新分支" class="headerlink" title="基于指定提交创建新分支,并切换到新分支"></a>基于指定提交创建新分支,并切换到新分支</h1><p>$ git checkout <commit_id> -b <newbranch>  </p><h1 id="从远程分支创建一个新的本地分支-重命名分支-同事用中文分支-恶心的时候可以用"><a href="#从远程分支创建一个新的本地分支-重命名分支-同事用中文分支-恶心的时候可以用" class="headerlink" title="从远程分支创建一个新的本地分支(重命名分支, 同事用中文分支, 恶心的时候可以用)"></a>从远程分支创建一个新的本地分支(重命名分支, 同事用中文分支, 恶心的时候可以用)</h1><p>$ git checkout -b improve-0611 origin/优化0611</p><h1 id="切换到指定分支或标签"><a href="#切换到指定分支或标签" class="headerlink" title="切换到指定分支或标签"></a>切换到指定分支或标签</h1><p>$ git checkout &lt;branch/tag&gt;           </p><h1 id="删除本地分支"><a href="#删除本地分支" class="headerlink" title="删除本地分支"></a>删除本地分支</h1><p>$ git branch -d <branch>  </p><h1 id="强制删除本地分支"><a href="#强制删除本地分支" class="headerlink" title="强制删除本地分支"></a>强制删除本地分支</h1><p>$ git branch -D <branch> </p><h1 id="删除远程分支"><a href="#删除远程分支" class="headerlink" title="删除远程分支"></a>删除远程分支</h1><p>$ git branch -r -d origin/branch-name<br>$ git push origin :branch-name</p><h1 id="实例-删除uat分支"><a href="#实例-删除uat分支" class="headerlink" title="实例(删除uat分支):"></a>实例(删除uat分支):</h1><p>$ git branch -D uat<br>$ git branch -r -d origin/uat<br>$ git push origin :uat</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs clean"><br> <br> <br>###### 分支的相关操作<br></code></pre></td></tr></table></figure><p>$ git cherry-pick <commit_id>         # 挑选某个commit进行合并<br>$ git merge <branch>          #合并指定分支到当前分支<br>$ git rebase <branch>         #衍合指定分支到当前分支</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs"><br><br><br>### Log<br></code></pre></td></tr></table></figure><p>$ git log           # 查看提交历史<br>$ git log -n            # 查看最近n次提交历史<br>$ git log -p            # 查看提交历史,以patch形式显示<br>$ git log filename          # 查看指定文件的提交历史<br>$ git log –graph<br>$ git log –oneline                                                     # 等价于 git log –pretty=oneline –abbrev-commit<br>$ git log –pretty=oneline<br>$ git log –pretty=format:”%h - %an, %ar : %s”<br>$ git blame <file>  #以列表方式查看指定文件的提交历史(通过这个,可以看到每一行是谁改的)</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs clean"> <br>### 常用组合命令<br></code></pre></td></tr></table></figure><p>$ git log <commit_id> -p –stat               #以补丁形式 &amp; 统计形式  查看指定提交<br>$ git log <file> -n -p –stat                     #以补丁形式 &amp; 统计形式  查看指定文件 最近n次提交</p><p>$ git log  -n -p –stat                             #以补丁形式 &amp; 统计形式  查看最近n次提交</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs"><br><br><br>### Stash<br></code></pre></td></tr></table></figure><p>$ git stash                                                                             # 保存进度 默认相当于 git stash save<br>$ git stash [save [–patch] [-k|–[no-]keep-index] [-q|–quiet] [<message>]]<br>$ git stash list                                                                        # 列出进度<br>$ git stash pop [–index] [<stash>]                                                       # 恢复进度,如果指定了–index,将尝试恢复暂存区,并将恢复的进度从存储的工作进度列表中删除<br>$ git stash apply [–index] [<stash>]                                                 # 恢复进度,如果指定了–index,将尝试恢复暂存区,不删除<br>$ git stash drop [<stash>]<br>$ git stash clear<br>$ git stash branch <branchname> <stash></p><p>例:</p><p>$ git stash save “stash for pull”<br>$ git stash pop stash@{0}</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs"><br><br>### Git 初始化<br>###### 路线一<br></code></pre></td></tr></table></figure><p>$ mkdir app<br>$ cd app<br>$ git init<br>$ git remote add origin <a href="mailto:git@github.com">git@github.com</a>:xxx/app.git<br> <figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs clean">###### 路线二<br></code></pre></td></tr></table></figure><br>$ git clone <a href="mailto:git@github.com">git@github.com</a>:xxx/app.git<br> <figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs clean">###### git remote 相关操作<br></code></pre></td></tr></table></figure><br>$ git remote<br>$ git remote -v<br>$ git remote show origin<br>$ git remote rename origin <newname><br>$ git remote rm origin</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs"><br><br><br>### 附录：dff 详解<br></code></pre></td></tr></table></figure><p>$ diff -u hello world &gt; diff.txt<br>–beginoutput<br> hello   2014-04-11 10:43:27.642739542 +0800     #表示原始文件名 &amp; 时间戳<br>+++ world   2014-04-11 10:45:55.038735015 +0800     #+++表示目标文件名 &amp; 时间戳<br>@@ -1,4 +1,4 @@                         #差异小节-差异定位语句(前后用两个@进行标识) -1,4表示原始文件中的第一行开始的4行<br>-应该杜绝文章中的错别字.                            #以-号开始的行是只出现在原始文件中的行<br>+应该杜绝文章中的错别子.                            #以+号开始的行是只出现在目标文件中的行</p><p> 但是无论使用                                       #以空格开始的行是在原始文件与目标文件都出现的行<br>@@ -7,6 +7,7 @@<br> 是人就有可能犯错,软件更是如此.<br>-犯了错,就要扣工资!<br>-<br> 改正的成本可能会很高.<br>+<br>+但是”只要眼球足够多,所有BUg都好捉”,<br>+这就是开源的哲学之一.</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs vim"><br>Question <span class="hljs-number">1</span>: 执行 git diff 提示 old <span class="hljs-keyword">mode</span> &amp; <span class="hljs-keyword">new</span> <span class="hljs-keyword">mode</span><br><br></code></pre></td></tr></table></figure><p>old mode 100755<br>new mode 100644</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><br><span class="hljs-symbol">Solution:</span><br></code></pre></td></tr></table></figure><p>git config core.filemode false</p><pre><code>详情:[http://stackoverflow.com/questions/1257592/how-do-i-remove-files-saying-old-mode-100755-new-mode-100644-from-unstaged-cha](http://stackoverflow.com/questions/1257592/how-do-i-remove-files-saying-old-mode-100755-new-mode-100644-from-unstaged-cha)### [Git vs SVN](http://www.vaikan.com/5-fundamental-differences-between-git-svn/)我是一開始就用Mercurial, Git這類的系統。（現在已經百分百用Git了。） 用過Git之後才接觸SVN，發現了一些非常大的差別。在這裡提出我個人一些主要理由為何棄SVN而用Git。 1。速度： 克隆一份全新的目錄，以同樣擁有五個（才五個）分支來說，SVN是同時複製5個版本的文件，也就是說重複五次同樣的動作。而Git只是獲取文件的每個版本的元素，然後只載入主要的分支（master）。在我的經驗，克隆一個擁有將近一萬個提交（commit），五個分支，每個分支有大約1500個文件的SVN，耗了將近一個小時！而Git只用了區區的1分鐘！ 2。版本庫（repository）： 據我所知，SVN只能有一個指定中央版本庫。當這個中央版本庫有問題時，所有工作成員都一起癱瘓直到版本庫維修完畢或者新的版本庫設立完成。 而Git可以有無限個版本庫。或者，更正確的說法，每一個Git都是一個版本庫，區別是它們是否擁有活躍目錄（Git Working Tree）。如果主要版本庫（例如：置於GitHub的版本庫）發生了什麼事，工作成員仍然可以在自己的本地版本庫（local repository）提交，等待主要版本庫恢復即可。工作成員也可以提交到其他的版本庫！ 3。分支（Branch） 在SVN，分支是一個完整的目錄。且這個目錄擁有完整的實際文件。如果工作成員想要開啟新的分支，那將會影響“全世界”！每個人都會擁有和你一樣的分支。如果你的分支是用來進行破壞工作（安檢測試），那將會像傳染病一樣。 而Git，每個工作成員可以任意在自己的本地版本庫開啟無限個分支。舉例：當我想嘗試破壞自己的程序（安檢測試），並且想保留這些被修改的文件供日後使用，我可以開一個分支，做我喜歡的事。完全不需擔心妨礙其他工作成員。只要我不合并及提交到主要版本庫，沒有一個工作成員會被影響。等到我不需要這個分支時，我只要把它從我的本地版本庫刪除即可。無痛無癢。 Git的分支名是可以使用不同名字的。例如：我的本地分支名為testing，而在主要版本庫的名字其實是master。 最值得一提，我可以在Git的任意一個提交點（commit point）開啟分支！（其中一個方法是使用gitk –all 可觀察整個提交記錄，然後在任意點開啟分支。） 4。提交（Commit） 在SVN，當你提交你的完成品時，它將直接記錄到中央版本庫。當你發現你的完成品存在嚴重問題時，你已經無法阻止事情的發生了。如果網路中斷，你根本沒辦法提交！ 而Git的提交完全屬於本地版本庫的活動。而你只需“推”（git push）到主要版本庫即可。Git的“推”其實是在執行“同步”（Sync）。 5。重新設立起點（Rebase） 我沒在SVN嘗試過，不知道有沒有這樣的功能。 在Git，如果你想把別人的最新提交設立為現在這個分支的起點，只要執行git rebase branch_name 即可。這個和合并（merge）不同點是，merge會依據修改的時間視為最新，而Rebase會要求你去解決雙方都有修改過的地方的矛盾（conflict）。 A - B - E \- C - D A - B - E \ - C - D 6。系統檔案 SVN會在每一個目錄置放一個.svn。如果想移除這些.svn是很累的。 而Git會在目錄起點擁有一個.git目錄，以及.gitignore。 對我而言，管理一個Git 的版本庫是很容易的事。### Git 学习资料[Pro Git 在线版](https://git-scm.com/book/zh/v2)[Pro Git Github](https://github.com/progit/progit/tree/master/zh)[http://ndpsoftware.com/git-cheatsheet.html](http://ndpsoftware.com/git-cheatsheet.html)</code></pre>]]></content>
    
    
    <categories>
      
      <category>Git</category>
      
    </categories>
    
    
    <tags>
      
      <tag>git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>你好</title>
    <link href="/2013/11/27/hello/"/>
    <url>/2013/11/27/hello/</url>
    
    <content type="html"><![CDATA[<p>Hello Blog</p><h3 id="博客框架"><a href="#博客框架" class="headerlink" title="博客框架"></a>博客框架</h3><ul><li><a href="https://github.com/jekyll/jekyll">jekyll/jekyll</a> - 基于Ruby</li><li><a href="https://github.com/hexojs/hexo">hexojs/hexo</a> - 基于Nodejs</li><li><a href="https://docsite.js.org/">docsite</a> - 基于Nodejs</li><li><a href="https://github.com/gohugoio/hugo">gohugoio/hugo</a> - 基于Golang</li></ul><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6>]]></content>
    
    
    
    <tags>
      
      <tag>blog</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
